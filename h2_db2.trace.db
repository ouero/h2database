2020-04-18 17:15:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Function "shobj_description" not found; SQL statement:
SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid [90022-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:588)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:200)
	at org.h2.message.DbException.get(DbException.java:176)
	at org.h2.command.Parser.readJavaFunction(Parser.java:3795)
	at org.h2.command.Parser.readFunction(Parser.java:3993)
	at org.h2.command.Parser.readTerm(Parser.java:5003)
	at org.h2.command.Parser.readFactor(Parser.java:3564)
	at org.h2.command.Parser.readSum(Parser.java:3551)
	at org.h2.command.Parser.readConcat(Parser.java:3529)
	at org.h2.command.Parser.readCondition(Parser.java:3319)
	at org.h2.command.Parser.readExpression(Parser.java:3242)
	at org.h2.command.Parser.parseSelectExpressions(Parser.java:3068)
	at org.h2.command.Parser.parseSelect(Parser.java:3088)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2958)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2793)
	at org.h2.command.Parser.parseQuery(Parser.java:2763)
	at org.h2.command.Parser.parsePrepared(Parser.java:986)
	at org.h2.command.Parser.parse(Parser.java:961)
	at org.h2.command.Parser.parse(Parser.java:933)
	at org.h2.command.Parser.prepareCommand(Parser.java:861)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-18 17:16:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Function "shobj_description" not found; SQL statement:
SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid [90022-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:588)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:200)
	at org.h2.message.DbException.get(DbException.java:176)
	at org.h2.command.Parser.readJavaFunction(Parser.java:3795)
	at org.h2.command.Parser.readFunction(Parser.java:3993)
	at org.h2.command.Parser.readTerm(Parser.java:5003)
	at org.h2.command.Parser.readFactor(Parser.java:3564)
	at org.h2.command.Parser.readSum(Parser.java:3551)
	at org.h2.command.Parser.readConcat(Parser.java:3529)
	at org.h2.command.Parser.readCondition(Parser.java:3319)
	at org.h2.command.Parser.readExpression(Parser.java:3242)
	at org.h2.command.Parser.parseSelectExpressions(Parser.java:3068)
	at org.h2.command.Parser.parseSelect(Parser.java:3088)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2958)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2793)
	at org.h2.command.Parser.parseQuery(Parser.java:2763)
	at org.h2.command.Parser.parsePrepared(Parser.java:986)
	at org.h2.command.Parser.parse(Parser.java:961)
	at org.h2.command.Parser.parse(Parser.java:933)
	at org.h2.command.Parser.prepareCommand(Parser.java:861)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-18 17:36:45 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Schema "PG_CATALOG" not found; SQL statement:
select oid from pg_catalog.pg_type [90079-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:588)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:200)
	at org.h2.message.DbException.get(DbException.java:176)
	at org.h2.command.Parser.readTableFilter(Parser.java:2045)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2968)
	at org.h2.command.Parser.parseSelect(Parser.java:3095)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2958)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2793)
	at org.h2.command.Parser.parseQuery(Parser.java:2763)
	at org.h2.command.Parser.parsePrepared(Parser.java:986)
	at org.h2.command.Parser.parse(Parser.java:961)
	at org.h2.command.Parser.parse(Parser.java:933)
	at org.h2.command.Parser.prepareCommand(Parser.java:861)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:78)
	at org.h2.server.pg.PgServerThread.initDb(PgServerThread.java:929)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:246)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-18 17:38:04 database: CREATE FORCE ALIAS "PUBLIC"."SHOBJ_DESCRIPTION" FOR "org.h2.udf.MyFunctions.shobj_description"
org.h2.jdbc.JdbcSQLSyntaxErrorException: Schema "PUBLIC" not found; SQL statement:
CREATE FORCE ALIAS "PUBLIC"."SHOBJ_DESCRIPTION" FOR "org.h2.udf.MyFunctions.shobj_description" [90079-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:588)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:200)
	at org.h2.message.DbException.get(DbException.java:176)
	at org.h2.command.Parser.getSchema(Parser.java:1314)
	at org.h2.command.Parser.getSchema(Parser.java:1320)
	at org.h2.command.Parser.parseCreateFunctionAlias(Parser.java:7471)
	at org.h2.command.Parser.parseCreate(Parser.java:6974)
	at org.h2.command.Parser.parsePrepared(Parser.java:1025)
	at org.h2.command.Parser.parse(Parser.java:961)
	at org.h2.command.Parser.parse(Parser.java:933)
	at org.h2.command.Parser.prepare(Parser.java:845)
	at org.h2.engine.Session.prepare(Session.java:598)
	at org.h2.engine.Session.prepare(Session.java:582)
	at org.h2.engine.MetaRecord.prepareAndExecute(MetaRecord.java:75)
	at org.h2.engine.Database.executeMeta(Database.java:780)
	at org.h2.engine.Database.executeMeta(Database.java:729)
	at org.h2.engine.Database.open(Database.java:648)
	at org.h2.engine.Database.openDatabase(Database.java:318)
	at org.h2.engine.Database.<init>(Database.java:313)
	at org.h2.engine.Engine.openSession(Engine.java:96)
	at org.h2.engine.Engine.openSession(Engine.java:223)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:202)
	at org.h2.engine.Engine.createSession(Engine.java:197)
	at org.h2.engine.Engine.createSession(Engine.java:30)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:341)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:128)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:242)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-18 17:38:04 database: opening D:/JAVA_WorkSpace/h2database/h2_db2
org.h2.message.DbException: Schema "PUBLIC" not found [90079-200]
	at org.h2.message.DbException.get(DbException.java:200)
	at org.h2.message.DbException.get(DbException.java:176)
	at org.h2.command.Parser.getSchema(Parser.java:1314)
	at org.h2.command.Parser.getSchema(Parser.java:1320)
	at org.h2.command.Parser.parseCreateFunctionAlias(Parser.java:7471)
	at org.h2.command.Parser.parseCreate(Parser.java:6974)
	at org.h2.command.Parser.parsePrepared(Parser.java:1025)
	at org.h2.command.Parser.parse(Parser.java:961)
	at org.h2.command.Parser.parse(Parser.java:933)
	at org.h2.command.Parser.prepare(Parser.java:845)
	at org.h2.engine.Session.prepare(Session.java:598)
	at org.h2.engine.Session.prepare(Session.java:582)
	at org.h2.engine.MetaRecord.prepareAndExecute(MetaRecord.java:75)
	at org.h2.engine.Database.executeMeta(Database.java:780)
	at org.h2.engine.Database.executeMeta(Database.java:729)
	at org.h2.engine.Database.open(Database.java:648)
	at org.h2.engine.Database.openDatabase(Database.java:318)
	at org.h2.engine.Database.<init>(Database.java:313)
	at org.h2.engine.Engine.openSession(Engine.java:96)
	at org.h2.engine.Engine.openSession(Engine.java:223)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:202)
	at org.h2.engine.Engine.createSession(Engine.java:197)
	at org.h2.engine.Engine.createSession(Engine.java:30)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:341)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:128)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:242)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Schema "PUBLIC" not found; SQL statement:
CREATE FORCE ALIAS "PUBLIC"."SHOBJ_DESCRIPTION" FOR "org.h2.udf.MyFunctions.shobj_description" [90079-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:588)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	... 28 more
2020-04-18 17:44:17 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Function "SHOBJ_DESCRIPTION" not found; SQL statement:
SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid [90022-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:588)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:200)
	at org.h2.message.DbException.get(DbException.java:176)
	at org.h2.command.Parser.readJavaFunction(Parser.java:3795)
	at org.h2.command.Parser.readFunction(Parser.java:3993)
	at org.h2.command.Parser.readTerm(Parser.java:5003)
	at org.h2.command.Parser.readFactor(Parser.java:3564)
	at org.h2.command.Parser.readSum(Parser.java:3551)
	at org.h2.command.Parser.readConcat(Parser.java:3529)
	at org.h2.command.Parser.readCondition(Parser.java:3319)
	at org.h2.command.Parser.readExpression(Parser.java:3242)
	at org.h2.command.Parser.parseSelectExpressions(Parser.java:3068)
	at org.h2.command.Parser.parseSelect(Parser.java:3088)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2958)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2793)
	at org.h2.command.Parser.parseQuery(Parser.java:2763)
	at org.h2.command.Parser.parsePrepared(Parser.java:986)
	at org.h2.command.Parser.parse(Parser.java:961)
	at org.h2.command.Parser.parse(Parser.java:933)
	at org.h2.command.Parser.prepareCommand(Parser.java:861)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-18 17:45:11 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Function "SHOBJ_DESCRIPTION" not found; SQL statement:
SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid [90022-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:588)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:200)
	at org.h2.message.DbException.get(DbException.java:176)
	at org.h2.command.Parser.readJavaFunction(Parser.java:3795)
	at org.h2.command.Parser.readFunction(Parser.java:3993)
	at org.h2.command.Parser.readTerm(Parser.java:5003)
	at org.h2.command.Parser.readFactor(Parser.java:3564)
	at org.h2.command.Parser.readSum(Parser.java:3551)
	at org.h2.command.Parser.readConcat(Parser.java:3529)
	at org.h2.command.Parser.readCondition(Parser.java:3319)
	at org.h2.command.Parser.readExpression(Parser.java:3242)
	at org.h2.command.Parser.parseSelectExpressions(Parser.java:3068)
	at org.h2.command.Parser.parseSelect(Parser.java:3088)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2958)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2793)
	at org.h2.command.Parser.parseQuery(Parser.java:2763)
	at org.h2.command.Parser.parsePrepared(Parser.java:986)
	at org.h2.command.Parser.parse(Parser.java:961)
	at org.h2.command.Parser.parse(Parser.java:933)
	at org.h2.command.Parser.prepareCommand(Parser.java:861)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-18 17:46:21 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "D.DATCONNLIMIT" not found; SQL statement:
SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid [42122-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:459)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:200)
	at org.h2.message.DbException.get(DbException.java:176)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:163)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:145)
	at org.h2.command.query.Select.optimizeExpressionsAndPreserveAliases(Select.java:1284)
	at org.h2.command.query.Select.prepare(Select.java:1167)
	at org.h2.command.Parser.prepareCommand(Parser.java:867)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-18 17:52:46 jdbc[7]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "D.DATCONNLIMIT" not found; SQL statement:
SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid [42122-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:459)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:200)
	at org.h2.message.DbException.get(DbException.java:176)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:163)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:145)
	at org.h2.command.query.Select.optimizeExpressionsAndPreserveAliases(Select.java:1284)
	at org.h2.command.query.Select.prepare(Select.java:1167)
	at org.h2.command.Parser.prepareCommand(Parser.java:867)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-18 18:05:06 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.ArrayIndexOutOfBoundsException: 9"; SQL statement:
SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:511)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:189)
	at org.h2.message.DbException.convert(DbException.java:353)
	at org.h2.command.Command.executeQuery(Command.java:210)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:222)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 9
	at org.h2.result.DefaultRow.getValue(DefaultRow.java:40)
	at org.h2.table.TableFilter.getValue(TableFilter.java:1043)
	at org.h2.expression.ExpressionColumn.getValue(ExpressionColumn.java:202)
	at org.h2.command.query.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1840)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:104)
	at org.h2.result.LazyResult.next(LazyResult.java:63)
	at org.h2.command.query.Select.queryFlat(Select.java:721)
	at org.h2.command.query.Select.queryWithoutCache(Select.java:827)
	at org.h2.command.query.Query.queryWithoutCacheLazyCheck(Query.java:196)
	at org.h2.command.query.Query.query(Query.java:481)
	at org.h2.command.query.Query.query(Query.java:444)
	at org.h2.command.CommandContainer.query(CommandContainer.java:262)
	at org.h2.command.Command.executeQuery(Command.java:189)
	... 5 more
2020-04-18 18:05:36 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.ArrayIndexOutOfBoundsException: 9"; SQL statement:
SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:511)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:189)
	at org.h2.message.DbException.convert(DbException.java:353)
	at org.h2.command.Command.executeQuery(Command.java:210)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:222)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 9
	at org.h2.result.DefaultRow.getValue(DefaultRow.java:40)
	at org.h2.table.TableFilter.getValue(TableFilter.java:1043)
	at org.h2.expression.ExpressionColumn.getValue(ExpressionColumn.java:202)
	at org.h2.command.query.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1840)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:104)
	at org.h2.result.LazyResult.next(LazyResult.java:63)
	at org.h2.command.query.Select.queryFlat(Select.java:721)
	at org.h2.command.query.Select.queryWithoutCache(Select.java:827)
	at org.h2.command.query.Query.queryWithoutCacheLazyCheck(Query.java:196)
	at org.h2.command.query.Query.query(Query.java:481)
	at org.h2.command.query.Query.query(Query.java:444)
	at org.h2.command.CommandContainer.query(CommandContainer.java:262)
	at org.h2.command.Command.executeQuery(Command.java:189)
	... 5 more
2020-04-18 18:10:16 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.ArrayIndexOutOfBoundsException: 9"; SQL statement:
SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:511)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:189)
	at org.h2.message.DbException.convert(DbException.java:353)
	at org.h2.command.Command.executeQuery(Command.java:210)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:222)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 9
	at org.h2.result.DefaultRow.getValue(DefaultRow.java:40)
	at org.h2.table.TableFilter.getValue(TableFilter.java:1043)
	at org.h2.expression.ExpressionColumn.getValue(ExpressionColumn.java:202)
	at org.h2.command.query.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1840)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:104)
	at org.h2.result.LazyResult.next(LazyResult.java:63)
	at org.h2.command.query.Select.queryFlat(Select.java:721)
	at org.h2.command.query.Select.queryWithoutCache(Select.java:827)
	at org.h2.command.query.Query.queryWithoutCacheLazyCheck(Query.java:196)
	at org.h2.command.query.Query.query(Query.java:481)
	at org.h2.command.query.Query.query(Query.java:444)
	at org.h2.command.CommandContainer.query(CommandContainer.java:262)
	at org.h2.command.Command.executeQuery(Command.java:189)
	... 5 more
2020-04-18 18:11:12 jdbc[7]: exception
org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.ArrayIndexOutOfBoundsException: 9"; SQL statement:
SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:511)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:189)
	at org.h2.message.DbException.convert(DbException.java:353)
	at org.h2.command.Command.executeQuery(Command.java:210)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:222)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 9
	at org.h2.result.DefaultRow.getValue(DefaultRow.java:40)
	at org.h2.table.TableFilter.getValue(TableFilter.java:1043)
	at org.h2.expression.ExpressionColumn.getValue(ExpressionColumn.java:202)
	at org.h2.command.query.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1840)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:104)
	at org.h2.result.LazyResult.next(LazyResult.java:63)
	at org.h2.command.query.Select.queryFlat(Select.java:721)
	at org.h2.command.query.Select.queryWithoutCache(Select.java:827)
	at org.h2.command.query.Query.queryWithoutCacheLazyCheck(Query.java:196)
	at org.h2.command.query.Query.query(Query.java:481)
	at org.h2.command.query.Query.query(Query.java:444)
	at org.h2.command.CommandContainer.query(CommandContainer.java:262)
	at org.h2.command.Command.executeQuery(Command.java:189)
	... 5 more
2020-04-18 18:14:16 jdbc[8]: exception
org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.ArrayIndexOutOfBoundsException: 9"; SQL statement:
SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:511)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:189)
	at org.h2.message.DbException.convert(DbException.java:353)
	at org.h2.command.Command.executeQuery(Command.java:210)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:222)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 9
	at org.h2.result.DefaultRow.getValue(DefaultRow.java:40)
	at org.h2.table.TableFilter.getValue(TableFilter.java:1043)
	at org.h2.expression.ExpressionColumn.getValue(ExpressionColumn.java:202)
	at org.h2.command.query.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1840)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:104)
	at org.h2.result.LazyResult.next(LazyResult.java:63)
	at org.h2.command.query.Select.queryFlat(Select.java:721)
	at org.h2.command.query.Select.queryWithoutCache(Select.java:827)
	at org.h2.command.query.Query.queryWithoutCacheLazyCheck(Query.java:196)
	at org.h2.command.query.Query.query(Query.java:481)
	at org.h2.command.query.Query.query(Query.java:444)
	at org.h2.command.CommandContainer.query(CommandContainer.java:262)
	at org.h2.command.Command.executeQuery(Command.java:189)
	... 5 more
2020-04-19 17:10:04 database: opening D:/JAVA_WorkSpace/h2database/h2_db2 (build 200)
2020-04-19 17:10:04 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 17:10:04 lock: 1 exclusive write lock added for SYS 
2020-04-19 17:10:04 lock: 1 exclusive write lock unlock SYS 
2020-04-19 17:10:04 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 17:10:04 lock: 1 exclusive write lock added for SYS 
2020-04-19 17:10:04 lock: 1 exclusive write lock unlock SYS 
2020-04-19 17:10:04 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 17:10:04 lock: 1 exclusive write lock added for SYS 
2020-04-19 17:10:04 lock: 1 exclusive write lock unlock SYS 
2020-04-19 17:10:04 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 17:10:04 lock: 1 exclusive write lock added for SYS 
2020-04-19 17:10:04 lock: 1 exclusive write lock unlock SYS 
2020-04-19 17:10:04 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 17:10:04 lock: 1 exclusive write lock added for SYS 
2020-04-19 17:10:04 lock: 1 exclusive write lock unlock SYS 
2020-04-19 17:10:04 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 17:10:04 lock: 1 exclusive write lock added for SYS 
2020-04-19 17:10:04 lock: 1 exclusive write lock unlock SYS 
2020-04-19 17:10:04 database: opened D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 17:10:04 database: connecting session #3 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 17:10:04 jdbc[3]: 
/*SQL */SET TRACE_LEVEL_SYSTEM_OUT 3;
2020-04-19 17:10:04 jdbc[3]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2020-04-19 17:10:04 jdbc[3]: Plan       : calculate cost for plan [SETTINGS:-7:org.h2.table.InformationSchemaTable@521420ef]
2020-04-19 17:10:04 jdbc[3]: Plan       :   for table filter SETTINGS:-7:org.h2.table.InformationSchemaTable@521420ef
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       :   best plan item cost 9,900 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       : plan cost 9,901
2020-04-19 17:10:04 jdbc[3]: 
/*SQL l:77 #:2 t:1*/SELECT NAME, `VALUE` FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?) {1: 'MODE', 2: 'TIME ZONE', 3: 'JAVA_OBJECT_SERIALIZER'};
2020-04-19 17:10:04 jdbc[3]: 
/*SQL l:77 #:3 t:1*/SELECT NAME, `VALUE` FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?) {1: 'DATABASE_TO_UPPER', 2: 'DATABASE_TO_LOWER', 3: 'CASE_INSENSITIVE_IDENTIFIERS'};
2020-04-19 17:10:04 jdbc[3]: Plan       : calculate cost for plan [SCHEMATA:-14:org.h2.table.InformationSchemaTable@74d2c57d]
2020-04-19 17:10:04 jdbc[3]: Plan       :   for table filter SCHEMATA:-14:org.h2.table.InformationSchemaTable@74d2c57d
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 17:10:04 jdbc[3]: 
/*SQL #:3*/SELECT SCHEMA_NAME TABLE_SCHEM, CATALOG_NAME TABLE_CATALOG,  IS_DEFAULT FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME;
2020-04-19 17:10:04 jdbc[3]: Plan       : calculate cost for plan [SCHEMATA:-14:org.h2.table.InformationSchemaTable@74d2c57d]
2020-04-19 17:10:04 jdbc[3]: Plan       :   for table filter SCHEMATA:-14:org.h2.table.InformationSchemaTable@74d2c57d
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 17:10:04 jdbc[3]: 
/*SQL #:3*/SELECT SCHEMA_NAME TABLE_SCHEM, CATALOG_NAME TABLE_CATALOG,  IS_DEFAULT FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME;
2020-04-19 17:10:04 jdbc[3]: Plan       : calculate cost for plan [_0]
2020-04-19 17:10:04 jdbc[3]: Plan       :   for table filter _0
2020-04-19 17:10:04 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050]
2020-04-19 17:10:04 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:10:04 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@605aed2]
2020-04-19 17:10:04 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@605aed2
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:10:04 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050]
2020-04-19 17:10:04 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:10:04 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@605aed2]
2020-04-19 17:10:04 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@605aed2
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:10:04 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050]
2020-04-19 17:10:04 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:10:04 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@605aed2]
2020-04-19 17:10:04 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@605aed2
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:10:04 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 17:10:04 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 17:10:04 jdbc[3]: Plan       : calculate cost for plan [_1]
2020-04-19 17:10:04 jdbc[3]: Plan       :   for table filter _1
2020-04-19 17:10:04 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050]
2020-04-19 17:10:04 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:10:04 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@605aed2]
2020-04-19 17:10:04 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@605aed2
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:10:04 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050]
2020-04-19 17:10:04 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:10:04 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@605aed2]
2020-04-19 17:10:04 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@605aed2
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:10:04 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050]
2020-04-19 17:10:04 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:10:04 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@605aed2]
2020-04-19 17:10:04 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@605aed2
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:10:04 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 17:10:04 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 17:10:04 jdbc[3]: 
/*SQL l:1007 #:35 t:4*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'INFORMATION_SCHEMA', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 17:10:04 jdbc[3]: Plan       : calculate cost for plan [COLUMNS:-2:org.h2.table.InformationSchemaTable@53f51f73]
2020-04-19 17:10:04 jdbc[3]: Plan       :   for table filter COLUMNS:-2:org.h2.table.InformationSchemaTable@53f51f73
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:04 jdbc[3]: Table      :     potential plan item cost 28 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       :   best plan item cost 27.44 index meta
2020-04-19 17:10:04 jdbc[3]: Plan       : plan cost 28.44
2020-04-19 17:10:04 jdbc[3]: 
/*SQL l:123 #:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CATALOGS'};
2020-04-19 17:10:04 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CHECK_CONSTRAINTS'};
2020-04-19 17:10:04 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLLATIONS'};
2020-04-19 17:10:05 jdbc[3]: 
/*SQL l:123 #:33*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLUMNS'};
2020-04-19 17:10:05 jdbc[3]: 
/*SQL l:123 #:8*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLUMN_PRIVILEGES'};
2020-04-19 17:10:05 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CONSTANTS'};
2020-04-19 17:10:05 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CONSTRAINT_COLUMN_USAGE'};
2020-04-19 17:10:05 jdbc[3]: 
/*SQL l:123 #:14 t:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CROSS_REFERENCES'};
2020-04-19 17:10:05 jdbc[3]: 
/*SQL l:123 #:16*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'DOMAINS'};
2020-04-19 17:10:05 jdbc[3]: 
/*SQL l:123 #:11*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'DOMAIN_CONSTRAINTS'};
2020-04-19 17:10:05 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'FUNCTION_ALIASES'};
2020-04-19 17:10:05 jdbc[3]: 
/*SQL l:123 #:17*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'FUNCTION_COLUMNS'};
2020-04-19 17:10:05 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'HELP'};
2020-04-19 17:10:05 jdbc[3]: 
/*SQL l:123 #:21*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'INDEXES'};
2020-04-19 17:10:05 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'IN_DOUBT'};
2020-04-19 17:10:05 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'KEY_COLUMN_USAGE'};
2020-04-19 17:10:05 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'LOCKS'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'QUERY_STATISTICS'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'REFERENTIAL_CONSTRAINTS'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'RIGHTS'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'ROLES'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:8*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SCHEMATA'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:17*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SEQUENCES'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SESSIONS'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SESSION_STATE'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SETTINGS'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SYNONYMS'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLES'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_CONSTRAINTS'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_PRIVILEGES'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_TYPES'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TRIGGERS'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TYPE_INFO'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'USERS'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'VIEWS'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@77ea53a9]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@77ea53a9
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@77ea53a9]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@77ea53a9
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 9,800 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 9,801
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:438 #:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'INFORMATION_SCHEMA', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@6ff97e47]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@6ff97e47
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@6ff97e47]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@6ff97e47
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 9,600 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 9,601
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:596 #:3*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'INFORMATION_SCHEMA', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [_2]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter _2
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@605aed2]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@605aed2
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@605aed2]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@605aed2
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@605aed2]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@605aed2
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:1007 #:18 t:4*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'PG_CATALOG', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_AM'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ATTRDEF'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:10*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ATTRIBUTE'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_AUTHID'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:13*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_CLASS'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:10*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_DATABASE'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_DESCRIPTION'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_GROUP'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_INDEX'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_INHERITS'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_NAMESPACE'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_PROC'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ROLES'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_SETTINGS'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TABLESPACE'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TRIGGER'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TYPE'};
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_USER'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@77ea53a9]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@77ea53a9
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 9,800 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 9,801
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:438 #:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@6ff97e47]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@6ff97e47
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 9,600 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 9,601
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:596 #:3*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'PG_CATALOG', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [_3]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter _3
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@605aed2]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@605aed2
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@605aed2]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@605aed2
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b29050
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@605aed2]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@605aed2
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:1007*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'PUBLIC', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@77ea53a9]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@77ea53a9
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 9,900 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 9,901
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:438 #:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'PUBLIC', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@6ff97e47]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@6ff97e47
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 9,700 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 9,701
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:596 #:3*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'PUBLIC', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 324.72 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 325.72
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_AM'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ATTRDEF'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ATTRIBUTE'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_AUTHID'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_CLASS'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_DATABASE'};
2020-04-19 17:10:06 command: slow query: 128 ms
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_DESCRIPTION'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_GROUP'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_INDEX'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_INHERITS'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_NAMESPACE'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_PROC'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ROLES'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_SETTINGS'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TABLESPACE'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TRIGGER'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TYPE'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@238d4587
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:10:06 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_USER'};
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [SEQUENCES:-9:org.h2.table.InformationSchemaTable@7a21cf7]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter SEQUENCES:-9:org.h2.table.InformationSchemaTable@7a21cf7
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 17:10:06 jdbc[3]: 
/*SQL */SELECT * FROM INFORMATION_SCHEMA.SEQUENCES ORDER BY SEQUENCE_NAME;
2020-04-19 17:10:06 jdbc[3]: Plan       : calculate cost for plan [USERS:-10:org.h2.table.InformationSchemaTable@2f5d9cfb]
2020-04-19 17:10:06 jdbc[3]: Plan       :   for table filter USERS:-10:org.h2.table.InformationSchemaTable@2f5d9cfb
2020-04-19 17:10:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:10:06 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 17:10:06 jdbc[3]: 
/*SQL #:1*/SELECT * FROM INFORMATION_SCHEMA.USERS ORDER BY NAME;
2020-04-19 17:12:11 database: connecting session #4 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 17:12:11 jdbc[4]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 17:12:11 jdbc[4]: 
/**/Connection conn3 = DriverManager.getConnection("jdbc:h2:./h2_db2", "SA", "");
2020-04-19 17:12:11 jdbc[4]: 
/**/Statement stat3 = conn3.createStatement();
2020-04-19 17:12:11 jdbc[4]: 
/**/Statement stat4 = conn3.createStatement();
2020-04-19 17:12:11 jdbc[4]: 
/**/stat4.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 17:12:11 jdbc[4]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 17:12:11 jdbc[4]: 
/**/ResultSet rs174 = stat4.executeQuery("select oid from pg_catalog.pg_type");
2020-04-19 17:12:11 jdbc[4]: Plan       : calculate cost for plan [PG_TYPE:-1016:org.h2.mode.PgCatalogTable@16d6df53]
2020-04-19 17:12:11 jdbc[4]: Plan       :   for table filter PG_TYPE:-1016:org.h2.mode.PgCatalogTable@16d6df53
2020-04-19 17:12:11 jdbc[4]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:12:11 jdbc[4]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:12:11 jdbc[4]: Plan       : plan cost 10,001
2020-04-19 17:12:11 jdbc[4]: 
/*SQL #:21 t:1*/select oid from pg_catalog.pg_type;
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.getInt(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.getInt(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.getInt(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.getInt(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.getInt(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.getInt(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.getInt(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.getInt(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.getInt(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.getInt(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.getInt(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.getInt(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.getInt(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.getInt(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.getInt(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.getInt(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.getInt(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.getInt(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.getInt(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.getInt(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.getInt(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/rs174.close();
2020-04-19 17:12:11 jdbc[4]: 
/**/stat4.close();
2020-04-19 17:12:11 jdbc[4]: 
/**/conn3.getAutoCommit();
2020-04-19 17:12:11 jdbc[4]: 
/**/Statement stat5 = conn3.createStatement();
2020-04-19 17:12:11 jdbc[4]: 
/**/stat5.execute("set DATESTYLE ISO");
2020-04-19 17:12:11 jdbc[4]: 
/*SQL */set DATESTYLE ISO;
2020-04-19 17:12:11 jdbc[4]: 
/**/stat5.getUpdateCount();
2020-04-19 17:12:11 jdbc[4]: 
/**/stat5.close();
2020-04-19 17:12:11 jdbc[4]: 
/**/conn3.getAutoCommit();
2020-04-19 17:12:11 jdbc[4]: 
/**/Statement stat6 = conn3.createStatement();
2020-04-19 17:12:11 jdbc[4]: 
/**/stat6.execute("SELECT DISTINCT datlastsysoid FROM pg_database");
2020-04-19 17:12:11 jdbc[4]: Plan       : calculate cost for plan [PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@5ea9d1da]
2020-04-19 17:12:11 jdbc[4]: Plan       :   for table filter PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@5ea9d1da
2020-04-19 17:12:11 jdbc[4]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:12:11 jdbc[4]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:12:11 jdbc[4]: Plan       : plan cost 10,001
2020-04-19 17:12:11 jdbc[4]: 
/*SQL #:1*/SELECT DISTINCT datlastsysoid FROM pg_database;
2020-04-19 17:12:11 jdbc[4]: 
/**/ResultSet rs176 = stat6.getResultSet();
2020-04-19 17:12:11 jdbc[4]: 
/**/ResultSetMetaData rsMeta0 = rs176.getMetaData();
2020-04-19 17:12:11 jdbc[4]: 
/**/conn3.getCatalog();
2020-04-19 17:12:11 jdbc[4]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 17:12:11 jdbc[4]: 
/**/rsMeta0.getColumnCount();
2020-04-19 17:12:11 jdbc[4]: 
/**/rsMeta0.getColumnName(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rsMeta0.getColumnType(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rsMeta0.getColumnDisplaySize(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rs176.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/ResultSetMetaData rsMeta1 = rs176.getMetaData();
2020-04-19 17:12:11 jdbc[4]: 
/**/conn3.getCatalog();
2020-04-19 17:12:11 jdbc[4]: 
/**/rsMeta1.getColumnCount();
2020-04-19 17:12:11 jdbc[4]: 
/**/rsMeta1.getColumnType(1);
2020-04-19 17:12:11 jdbc[4]: 
/**/rs176.next();
2020-04-19 17:12:11 jdbc[4]: 
/**/stat6.close();
2020-04-19 17:12:11 jdbc[4]: 
/**/conn3.getAutoCommit();
2020-04-19 17:12:11 jdbc[4]: 
/**/Statement stat7 = conn3.createStatement();
2020-04-19 17:12:11 jdbc[4]: 
/**/stat7.execute("SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid");
2020-04-19 17:12:11 jdbc[4]: Plan       : calculate cost for plan [D, T]
2020-04-19 17:12:11 jdbc[4]: Plan       :   for table filter D
2020-04-19 17:12:11 jdbc[4]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:12:11 jdbc[4]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:12:11 jdbc[4]: Plan       :   best plan item cost 99,510,000 index meta
2020-04-19 17:12:11 jdbc[4]: Plan       :   for table filter T
2020-04-19 17:12:11 jdbc[4]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:12:11 jdbc[4]: Plan       :   best plan item cost 9,950 index meta
2020-04-19 17:12:11 jdbc[4]: Plan       : plan cost 990,224,019,951
2020-04-19 17:12:11 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.ArrayIndexOutOfBoundsException: 9"; SQL statement:
SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:511)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:189)
	at org.h2.message.DbException.convert(DbException.java:353)
	at org.h2.command.Command.executeQuery(Command.java:210)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:222)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 9
	at org.h2.result.DefaultRow.getValue(DefaultRow.java:40)
	at org.h2.table.TableFilter.getValue(TableFilter.java:1043)
	at org.h2.expression.ExpressionColumn.getValue(ExpressionColumn.java:202)
	at org.h2.command.query.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1840)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:104)
	at org.h2.result.LazyResult.next(LazyResult.java:63)
	at org.h2.command.query.Select.queryFlat(Select.java:721)
	at org.h2.command.query.Select.queryWithoutCache(Select.java:827)
	at org.h2.command.query.Query.queryWithoutCacheLazyCheck(Query.java:196)
	at org.h2.command.query.Query.query(Query.java:481)
	at org.h2.command.query.Query.query(Query.java:444)
	at org.h2.command.CommandContainer.query(CommandContainer.java:262)
	at org.h2.command.Command.executeQuery(Command.java:189)
	... 5 more
2020-04-19 17:12:11 jdbc[4]: 
/**/stat7.close();
2020-04-19 17:12:11 jdbc[4]: 
/**/conn3.getAutoCommit();
2020-04-19 17:14:09 jdbc[4]: 
/**/conn3.close();
2020-04-19 17:14:09 lock: 4 shared read lock unlock SYS 
2020-04-19 17:14:09 database: disconnecting session #4
2020-04-19 17:14:09 database: disconnected session #4
2020-04-19 17:14:12 database: connecting session #5 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 17:14:12 jdbc[5]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 17:14:12 jdbc[5]: 
/**/Connection conn4 = DriverManager.getConnection("jdbc:h2:./h2_db2", "SA", "");
2020-04-19 17:14:12 jdbc[5]: 
/**/Statement stat8 = conn4.createStatement();
2020-04-19 17:14:12 jdbc[5]: 
/**/Statement stat9 = conn4.createStatement();
2020-04-19 17:14:12 jdbc[5]: 
/**/stat9.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 17:14:12 jdbc[5]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 17:14:12 jdbc[5]: 
/**/stat9.close();
2020-04-19 17:14:12 jdbc[5]: 
/**/conn4.getAutoCommit();
2020-04-19 17:14:12 jdbc[5]: 
/**/Statement stat10 = conn4.createStatement();
2020-04-19 17:14:12 jdbc[5]: 
/**/stat10.execute("set DATESTYLE ISO");
2020-04-19 17:14:12 jdbc[5]: 
/*SQL */set DATESTYLE ISO;
2020-04-19 17:14:12 jdbc[5]: 
/**/stat10.getUpdateCount();
2020-04-19 17:14:12 jdbc[5]: 
/**/stat10.close();
2020-04-19 17:14:12 jdbc[5]: 
/**/conn4.getAutoCommit();
2020-04-19 17:14:12 jdbc[5]: 
/**/Statement stat11 = conn4.createStatement();
2020-04-19 17:14:12 jdbc[5]: 
/**/stat11.execute("SELECT DISTINCT datlastsysoid FROM pg_database");
2020-04-19 17:14:12 jdbc[5]: Plan       : calculate cost for plan [PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@5ea9d1da]
2020-04-19 17:14:12 jdbc[5]: Plan       :   for table filter PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@5ea9d1da
2020-04-19 17:14:12 jdbc[5]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:14:12 jdbc[5]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:14:12 jdbc[5]: Plan       : plan cost 10,001
2020-04-19 17:14:24 jdbc[5]: 
/*SQL #:1 t:12053*/SELECT DISTINCT datlastsysoid FROM pg_database;
2020-04-19 17:14:24 command: slow query: 12,054 ms
2020-04-19 17:14:24 jdbc[5]: 
/**/ResultSet rs180 = stat11.getResultSet();
2020-04-19 17:14:24 jdbc[5]: 
/**/ResultSetMetaData rsMeta2 = rs180.getMetaData();
2020-04-19 17:14:24 jdbc[5]: 
/**/conn4.getCatalog();
2020-04-19 17:14:24 jdbc[5]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 17:14:24 jdbc[5]: 
/**/rsMeta2.getColumnCount();
2020-04-19 17:14:24 jdbc[5]: 
/**/rsMeta2.getColumnName(1);
2020-04-19 17:14:24 jdbc[5]: 
/**/rsMeta2.getColumnType(1);
2020-04-19 17:14:24 jdbc[5]: 
/**/rsMeta2.getColumnDisplaySize(1);
2020-04-19 17:14:24 jdbc[5]: 
/**/rs180.next();
2020-04-19 17:14:24 jdbc[5]: 
/**/ResultSetMetaData rsMeta3 = rs180.getMetaData();
2020-04-19 17:14:24 jdbc[5]: 
/**/conn4.getCatalog();
2020-04-19 17:14:24 jdbc[5]: 
/**/rsMeta3.getColumnCount();
2020-04-19 17:14:24 jdbc[5]: 
/**/rsMeta3.getColumnType(1);
2020-04-19 17:14:24 jdbc[5]: 
/**/rs180.next();
2020-04-19 17:14:24 jdbc[5]: 
/**/stat11.close();
2020-04-19 17:14:24 jdbc[5]: 
/**/conn4.getAutoCommit();
2020-04-19 17:14:24 jdbc[5]: 
/**/Statement stat12 = conn4.createStatement();
2020-04-19 17:14:24 jdbc[5]: 
/**/stat12.execute("SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid");
2020-04-19 17:14:24 jdbc[5]: Plan       : calculate cost for plan [D, T]
2020-04-19 17:14:24 jdbc[5]: Plan       :   for table filter D
2020-04-19 17:14:24 jdbc[5]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:14:24 jdbc[5]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:14:24 jdbc[5]: Plan       :   best plan item cost 99,510,000 index meta
2020-04-19 17:14:24 jdbc[5]: Plan       :   for table filter T
2020-04-19 17:14:24 jdbc[5]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:14:24 jdbc[5]: Plan       :   best plan item cost 9,950 index meta
2020-04-19 17:14:24 jdbc[5]: Plan       : plan cost 990,224,019,951
2020-04-19 17:14:35 command: slow query: 10,377 ms
2020-04-19 17:14:35 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.ArrayIndexOutOfBoundsException: 9"; SQL statement:
SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:511)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:189)
	at org.h2.message.DbException.convert(DbException.java:353)
	at org.h2.command.Command.executeQuery(Command.java:210)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:222)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 9
	at org.h2.result.DefaultRow.getValue(DefaultRow.java:40)
	at org.h2.table.TableFilter.getValue(TableFilter.java:1043)
	at org.h2.expression.ExpressionColumn.getValue(ExpressionColumn.java:202)
	at org.h2.command.query.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1840)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:104)
	at org.h2.result.LazyResult.next(LazyResult.java:63)
	at org.h2.command.query.Select.queryFlat(Select.java:721)
	at org.h2.command.query.Select.queryWithoutCache(Select.java:827)
	at org.h2.command.query.Query.queryWithoutCacheLazyCheck(Query.java:196)
	at org.h2.command.query.Query.query(Query.java:481)
	at org.h2.command.query.Query.query(Query.java:444)
	at org.h2.command.CommandContainer.query(CommandContainer.java:262)
	at org.h2.command.Command.executeQuery(Command.java:189)
	... 5 more
2020-04-19 17:14:35 jdbc[5]: 
/**/stat12.close();
2020-04-19 17:14:35 jdbc[5]: 
/**/conn4.getAutoCommit();
2020-04-19 17:14:36 jdbc[5]: 
/**/conn4.close();
2020-04-19 17:14:36 lock: 5 shared read lock unlock SYS 
2020-04-19 17:14:36 database: disconnecting session #5
2020-04-19 17:14:36 database: disconnected session #5
2020-04-19 17:15:16 database: connecting session #6 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 17:15:16 jdbc[6]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 17:15:16 jdbc[6]: 
/**/Connection conn5 = DriverManager.getConnection("jdbc:h2:./h2_db2", "SA", "");
2020-04-19 17:15:16 jdbc[6]: 
/**/Statement stat13 = conn5.createStatement();
2020-04-19 17:15:16 jdbc[6]: 
/**/Statement stat14 = conn5.createStatement();
2020-04-19 17:15:16 jdbc[6]: 
/**/stat14.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 17:15:16 jdbc[6]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 17:15:16 jdbc[6]: 
/**/stat14.close();
2020-04-19 17:15:16 jdbc[6]: 
/**/conn5.getAutoCommit();
2020-04-19 17:15:16 jdbc[6]: 
/**/Statement stat15 = conn5.createStatement();
2020-04-19 17:15:16 jdbc[6]: 
/**/stat15.execute("set DATESTYLE ISO");
2020-04-19 17:15:16 jdbc[6]: 
/*SQL */set DATESTYLE ISO;
2020-04-19 17:15:16 jdbc[6]: 
/**/stat15.getUpdateCount();
2020-04-19 17:15:16 jdbc[6]: 
/**/stat15.close();
2020-04-19 17:15:16 jdbc[6]: 
/**/conn5.getAutoCommit();
2020-04-19 17:15:16 jdbc[6]: 
/**/Statement stat16 = conn5.createStatement();
2020-04-19 17:15:16 jdbc[6]: 
/**/stat16.execute("SELECT DISTINCT datlastsysoid FROM pg_database");
2020-04-19 17:15:16 jdbc[6]: Plan       : calculate cost for plan [PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@5ea9d1da]
2020-04-19 17:15:16 jdbc[6]: Plan       :   for table filter PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@5ea9d1da
2020-04-19 17:15:16 jdbc[6]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:15:16 jdbc[6]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:15:16 jdbc[6]: Plan       : plan cost 10,001
2020-04-19 17:15:24 jdbc[6]: 
/*SQL #:1*/SELECT DISTINCT datlastsysoid FROM pg_database;
2020-04-19 17:15:24 jdbc[6]: 
/**/ResultSet rs184 = stat16.getResultSet();
2020-04-19 17:15:24 jdbc[6]: 
/**/ResultSetMetaData rsMeta4 = rs184.getMetaData();
2020-04-19 17:15:24 jdbc[6]: 
/**/conn5.getCatalog();
2020-04-19 17:15:26 jdbc[6]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 17:15:26 jdbc[6]: 
/**/rsMeta4.getColumnCount();
2020-04-19 17:15:26 jdbc[6]: 
/**/rsMeta4.getColumnName(1);
2020-04-19 17:15:26 jdbc[6]: 
/**/rsMeta4.getColumnType(1);
2020-04-19 17:15:26 jdbc[6]: 
/**/rsMeta4.getColumnDisplaySize(1);
2020-04-19 17:15:26 jdbc[6]: 
/**/rs184.next();
2020-04-19 17:15:26 jdbc[6]: 
/**/ResultSetMetaData rsMeta5 = rs184.getMetaData();
2020-04-19 17:15:26 jdbc[6]: 
/**/conn5.getCatalog();
2020-04-19 17:15:26 jdbc[6]: 
/**/rsMeta5.getColumnCount();
2020-04-19 17:15:26 jdbc[6]: 
/**/rsMeta5.getColumnType(1);
2020-04-19 17:15:26 jdbc[6]: 
/**/rs184.next();
2020-04-19 17:15:26 jdbc[6]: 
/**/stat16.close();
2020-04-19 17:15:26 jdbc[6]: 
/**/conn5.getAutoCommit();
2020-04-19 17:15:26 jdbc[6]: 
/**/Statement stat17 = conn5.createStatement();
2020-04-19 17:15:26 jdbc[6]: 
/**/stat17.execute("SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid");
2020-04-19 17:15:26 jdbc[6]: Plan       : calculate cost for plan [D, T]
2020-04-19 17:15:26 jdbc[6]: Plan       :   for table filter D
2020-04-19 17:15:26 jdbc[6]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:15:26 jdbc[6]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:15:26 jdbc[6]: Plan       :   best plan item cost 99,510,000 index meta
2020-04-19 17:15:26 jdbc[6]: Plan       :   for table filter T
2020-04-19 17:15:26 jdbc[6]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:15:26 jdbc[6]: Plan       :   best plan item cost 9,950 index meta
2020-04-19 17:15:26 jdbc[6]: Plan       : plan cost 990,224,019,951
2020-04-19 17:15:57 command: slow query: 14,993 ms
2020-04-19 17:15:57 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.ArrayIndexOutOfBoundsException: 9"; SQL statement:
SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:511)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:189)
	at org.h2.message.DbException.convert(DbException.java:353)
	at org.h2.command.Command.executeQuery(Command.java:210)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:222)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 9
	at org.h2.result.DefaultRow.getValue(DefaultRow.java:40)
	at org.h2.table.TableFilter.getValue(TableFilter.java:1043)
	at org.h2.expression.ExpressionColumn.getValue(ExpressionColumn.java:202)
	at org.h2.command.query.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1840)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:104)
	at org.h2.result.LazyResult.next(LazyResult.java:63)
	at org.h2.command.query.Select.queryFlat(Select.java:721)
	at org.h2.command.query.Select.queryWithoutCache(Select.java:827)
	at org.h2.command.query.Query.queryWithoutCacheLazyCheck(Query.java:196)
	at org.h2.command.query.Query.query(Query.java:481)
	at org.h2.command.query.Query.query(Query.java:444)
	at org.h2.command.CommandContainer.query(CommandContainer.java:262)
	at org.h2.command.Command.executeQuery(Command.java:189)
	... 5 more
2020-04-19 17:15:57 jdbc[6]: 
/**/stat17.close();
2020-04-19 17:15:57 jdbc[6]: 
/**/conn5.getAutoCommit();
2020-04-19 17:16:36 jdbc[6]: 
/**/conn5.close();
2020-04-19 17:16:36 lock: 6 shared read lock unlock SYS 
2020-04-19 17:16:36 database: disconnecting session #6
2020-04-19 17:16:36 database: disconnected session #6
2020-04-19 17:16:37 database: connecting session #7 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 17:16:37 jdbc[7]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 17:16:37 jdbc[7]: 
/**/Connection conn6 = DriverManager.getConnection("jdbc:h2:./h2_db2", "SA", "");
2020-04-19 17:16:37 jdbc[7]: 
/**/Statement stat18 = conn6.createStatement();
2020-04-19 17:16:37 jdbc[7]: 
/**/Statement stat19 = conn6.createStatement();
2020-04-19 17:16:37 jdbc[7]: 
/**/stat19.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 17:16:37 jdbc[7]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 17:16:37 jdbc[7]: 
/**/stat19.close();
2020-04-19 17:16:37 jdbc[7]: 
/**/conn6.getAutoCommit();
2020-04-19 17:16:37 jdbc[7]: 
/**/Statement stat20 = conn6.createStatement();
2020-04-19 17:16:37 jdbc[7]: 
/**/stat20.execute("set DATESTYLE ISO");
2020-04-19 17:16:37 jdbc[7]: 
/*SQL */set DATESTYLE ISO;
2020-04-19 17:16:37 jdbc[7]: 
/**/stat20.getUpdateCount();
2020-04-19 17:16:37 jdbc[7]: 
/**/stat20.close();
2020-04-19 17:16:37 jdbc[7]: 
/**/conn6.getAutoCommit();
2020-04-19 17:16:37 jdbc[7]: 
/**/Statement stat21 = conn6.createStatement();
2020-04-19 17:16:37 jdbc[7]: 
/**/stat21.execute("SELECT DISTINCT datlastsysoid FROM pg_database");
2020-04-19 17:16:37 jdbc[7]: Plan       : calculate cost for plan [PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@5ea9d1da]
2020-04-19 17:16:37 jdbc[7]: Plan       :   for table filter PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@5ea9d1da
2020-04-19 17:16:37 jdbc[7]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:16:37 jdbc[7]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:16:37 jdbc[7]: Plan       : plan cost 10,001
2020-04-19 17:16:49 jdbc[7]: 
/*SQL #:1 t:8567*/SELECT DISTINCT datlastsysoid FROM pg_database;
2020-04-19 17:16:49 command: slow query: 8,568 ms
2020-04-19 17:16:49 jdbc[7]: 
/**/ResultSet rs188 = stat21.getResultSet();
2020-04-19 17:16:49 jdbc[7]: 
/**/ResultSetMetaData rsMeta6 = rs188.getMetaData();
2020-04-19 17:16:49 jdbc[7]: 
/**/conn6.getCatalog();
2020-04-19 17:16:49 jdbc[7]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 17:16:49 jdbc[7]: 
/**/rsMeta6.getColumnCount();
2020-04-19 17:16:49 jdbc[7]: 
/**/rsMeta6.getColumnName(1);
2020-04-19 17:16:49 jdbc[7]: 
/**/rsMeta6.getColumnType(1);
2020-04-19 17:16:49 jdbc[7]: 
/**/rsMeta6.getColumnDisplaySize(1);
2020-04-19 17:16:49 jdbc[7]: 
/**/rs188.next();
2020-04-19 17:16:49 jdbc[7]: 
/**/ResultSetMetaData rsMeta7 = rs188.getMetaData();
2020-04-19 17:16:49 jdbc[7]: 
/**/conn6.getCatalog();
2020-04-19 17:16:49 jdbc[7]: 
/**/rsMeta7.getColumnCount();
2020-04-19 17:16:49 jdbc[7]: 
/**/rsMeta7.getColumnType(1);
2020-04-19 17:16:49 jdbc[7]: 
/**/rs188.next();
2020-04-19 17:16:49 jdbc[7]: 
/**/stat21.close();
2020-04-19 17:16:49 jdbc[7]: 
/**/conn6.getAutoCommit();
2020-04-19 17:16:49 jdbc[7]: 
/**/Statement stat22 = conn6.createStatement();
2020-04-19 17:16:49 jdbc[7]: 
/**/stat22.execute("SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid");
2020-04-19 17:16:49 jdbc[7]: Plan       : calculate cost for plan [D, T]
2020-04-19 17:16:49 jdbc[7]: Plan       :   for table filter D
2020-04-19 17:16:49 jdbc[7]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:16:49 jdbc[7]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:16:49 jdbc[7]: Plan       :   best plan item cost 99,510,000 index meta
2020-04-19 17:16:49 jdbc[7]: Plan       :   for table filter T
2020-04-19 17:16:49 jdbc[7]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:16:49 jdbc[7]: Plan       :   best plan item cost 9,950 index meta
2020-04-19 17:16:49 jdbc[7]: Plan       : plan cost 990,224,019,951
2020-04-19 17:20:10 command: slow query: 200,428 ms
2020-04-19 17:20:10 jdbc[7]: exception
org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.ArrayIndexOutOfBoundsException"; SQL statement:
SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:511)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:189)
	at org.h2.message.DbException.convert(DbException.java:353)
	at org.h2.command.Command.executeQuery(Command.java:210)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:222)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.ArrayIndexOutOfBoundsException
2020-04-19 17:20:10 jdbc[7]: 
/**/stat22.close();
2020-04-19 17:20:10 jdbc[7]: 
/**/conn6.getAutoCommit();
2020-04-19 17:20:14 jdbc[7]: 
/**/conn6.close();
2020-04-19 17:20:14 lock: 7 shared read lock unlock SYS 
2020-04-19 17:20:14 database: disconnecting session #7
2020-04-19 17:20:14 database: disconnected session #7
2020-04-19 17:20:18 database: connecting session #8 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 17:20:18 jdbc[8]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 17:20:18 jdbc[8]: 
/**/Connection conn7 = DriverManager.getConnection("jdbc:h2:./h2_db2", "SA", "");
2020-04-19 17:20:18 jdbc[8]: 
/**/Statement stat23 = conn7.createStatement();
2020-04-19 17:20:18 jdbc[8]: 
/**/Statement stat24 = conn7.createStatement();
2020-04-19 17:20:18 jdbc[8]: 
/**/stat24.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 17:20:18 jdbc[8]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 17:20:18 jdbc[8]: 
/**/stat24.close();
2020-04-19 17:20:18 jdbc[8]: 
/**/conn7.getAutoCommit();
2020-04-19 17:20:18 jdbc[8]: 
/**/Statement stat25 = conn7.createStatement();
2020-04-19 17:20:18 jdbc[8]: 
/**/stat25.execute("set DATESTYLE ISO");
2020-04-19 17:20:18 jdbc[8]: 
/*SQL */set DATESTYLE ISO;
2020-04-19 17:20:18 jdbc[8]: 
/**/stat25.getUpdateCount();
2020-04-19 17:20:18 jdbc[8]: 
/**/stat25.close();
2020-04-19 17:20:18 jdbc[8]: 
/**/conn7.getAutoCommit();
2020-04-19 17:20:18 jdbc[8]: 
/**/Statement stat26 = conn7.createStatement();
2020-04-19 17:20:18 jdbc[8]: 
/**/stat26.execute("SELECT DISTINCT datlastsysoid FROM pg_database");
2020-04-19 17:20:18 jdbc[8]: Plan       : calculate cost for plan [PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@5ea9d1da]
2020-04-19 17:20:18 jdbc[8]: Plan       :   for table filter PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@5ea9d1da
2020-04-19 17:20:18 jdbc[8]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:20:18 jdbc[8]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:20:18 jdbc[8]: Plan       : plan cost 10,001
2020-04-19 17:20:24 jdbc[8]: 
/*SQL #:1 t:5199*/SELECT DISTINCT datlastsysoid FROM pg_database;
2020-04-19 17:20:24 command: slow query: 5,199 ms
2020-04-19 17:20:24 jdbc[8]: 
/**/ResultSet rs192 = stat26.getResultSet();
2020-04-19 17:20:24 jdbc[8]: 
/**/ResultSetMetaData rsMeta8 = rs192.getMetaData();
2020-04-19 17:20:24 jdbc[8]: 
/**/conn7.getCatalog();
2020-04-19 17:20:24 jdbc[8]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 17:20:24 jdbc[8]: 
/**/rsMeta8.getColumnCount();
2020-04-19 17:20:24 jdbc[8]: 
/**/rsMeta8.getColumnName(1);
2020-04-19 17:20:24 jdbc[8]: 
/**/rsMeta8.getColumnType(1);
2020-04-19 17:20:24 jdbc[8]: 
/**/rsMeta8.getColumnDisplaySize(1);
2020-04-19 17:20:24 jdbc[8]: 
/**/rs192.next();
2020-04-19 17:20:24 jdbc[8]: 
/**/ResultSetMetaData rsMeta9 = rs192.getMetaData();
2020-04-19 17:20:24 jdbc[8]: 
/**/conn7.getCatalog();
2020-04-19 17:20:24 jdbc[8]: 
/**/rsMeta9.getColumnCount();
2020-04-19 17:20:24 jdbc[8]: 
/**/rsMeta9.getColumnType(1);
2020-04-19 17:20:24 jdbc[8]: 
/**/rs192.next();
2020-04-19 17:20:24 jdbc[8]: 
/**/stat26.close();
2020-04-19 17:20:24 jdbc[8]: 
/**/conn7.getAutoCommit();
2020-04-19 17:20:24 jdbc[8]: 
/**/Statement stat27 = conn7.createStatement();
2020-04-19 17:20:24 jdbc[8]: 
/**/stat27.execute("SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid");
2020-04-19 17:20:24 jdbc[8]: Plan       : calculate cost for plan [D, T]
2020-04-19 17:20:24 jdbc[8]: Plan       :   for table filter D
2020-04-19 17:20:24 jdbc[8]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:20:24 jdbc[8]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:20:24 jdbc[8]: Plan       :   best plan item cost 99,510,000 index meta
2020-04-19 17:20:24 jdbc[8]: Plan       :   for table filter T
2020-04-19 17:20:24 jdbc[8]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:20:24 jdbc[8]: Plan       :   best plan item cost 9,950 index meta
2020-04-19 17:20:24 jdbc[8]: Plan       : plan cost 990,224,019,951
2020-04-19 17:20:43 command: slow query: 19,240 ms
2020-04-19 17:20:43 jdbc[8]: exception
org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.ArrayIndexOutOfBoundsException"; SQL statement:
SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:511)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:189)
	at org.h2.message.DbException.convert(DbException.java:353)
	at org.h2.command.Command.executeQuery(Command.java:210)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:222)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.ArrayIndexOutOfBoundsException
2020-04-19 17:20:43 jdbc[8]: 
/**/stat27.close();
2020-04-19 17:20:43 jdbc[8]: 
/**/conn7.getAutoCommit();
2020-04-19 17:20:45 jdbc[8]: 
/**/conn7.close();
2020-04-19 17:20:45 lock: 8 shared read lock unlock SYS 
2020-04-19 17:20:45 database: disconnecting session #8
2020-04-19 17:20:45 database: disconnected session #8
2020-04-19 17:21:22 database: connecting session #9 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 17:21:22 jdbc[9]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 17:21:22 jdbc[9]: 
/**/Connection conn8 = DriverManager.getConnection("jdbc:h2:./h2_db2", "SA", "");
2020-04-19 17:21:22 jdbc[9]: 
/**/Statement stat28 = conn8.createStatement();
2020-04-19 17:21:22 jdbc[9]: 
/**/Statement stat29 = conn8.createStatement();
2020-04-19 17:21:22 jdbc[9]: 
/**/stat29.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 17:21:22 jdbc[9]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 17:21:22 jdbc[9]: 
/**/stat29.close();
2020-04-19 17:21:22 jdbc[9]: 
/**/conn8.getAutoCommit();
2020-04-19 17:21:22 jdbc[9]: 
/**/Statement stat30 = conn8.createStatement();
2020-04-19 17:21:22 jdbc[9]: 
/**/stat30.execute("set DATESTYLE ISO");
2020-04-19 17:21:22 jdbc[9]: 
/*SQL */set DATESTYLE ISO;
2020-04-19 17:21:22 jdbc[9]: 
/**/stat30.getUpdateCount();
2020-04-19 17:21:22 jdbc[9]: 
/**/stat30.close();
2020-04-19 17:21:22 jdbc[9]: 
/**/conn8.getAutoCommit();
2020-04-19 17:21:22 jdbc[9]: 
/**/Statement stat31 = conn8.createStatement();
2020-04-19 17:21:22 jdbc[9]: 
/**/stat31.execute("SELECT DISTINCT datlastsysoid FROM pg_database");
2020-04-19 17:21:22 jdbc[9]: Plan       : calculate cost for plan [PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@5ea9d1da]
2020-04-19 17:21:22 jdbc[9]: Plan       :   for table filter PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@5ea9d1da
2020-04-19 17:21:22 jdbc[9]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:21:22 jdbc[9]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:21:22 jdbc[9]: Plan       : plan cost 10,001
2020-04-19 17:21:26 jdbc[9]: 
/*SQL #:1 t:3868*/SELECT DISTINCT datlastsysoid FROM pg_database;
2020-04-19 17:21:26 command: slow query: 3,868 ms
2020-04-19 17:21:26 jdbc[9]: 
/**/ResultSet rs196 = stat31.getResultSet();
2020-04-19 17:21:26 jdbc[9]: 
/**/ResultSetMetaData rsMeta10 = rs196.getMetaData();
2020-04-19 17:21:26 jdbc[9]: 
/**/conn8.getCatalog();
2020-04-19 17:21:26 jdbc[9]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 17:21:26 jdbc[9]: 
/**/rsMeta10.getColumnCount();
2020-04-19 17:21:26 jdbc[9]: 
/**/rsMeta10.getColumnName(1);
2020-04-19 17:21:26 jdbc[9]: 
/**/rsMeta10.getColumnType(1);
2020-04-19 17:21:26 jdbc[9]: 
/**/rsMeta10.getColumnDisplaySize(1);
2020-04-19 17:21:26 jdbc[9]: 
/**/rs196.next();
2020-04-19 17:21:26 jdbc[9]: 
/**/ResultSetMetaData rsMeta11 = rs196.getMetaData();
2020-04-19 17:21:26 jdbc[9]: 
/**/conn8.getCatalog();
2020-04-19 17:21:26 jdbc[9]: 
/**/rsMeta11.getColumnCount();
2020-04-19 17:21:26 jdbc[9]: 
/**/rsMeta11.getColumnType(1);
2020-04-19 17:21:26 jdbc[9]: 
/**/rs196.next();
2020-04-19 17:21:26 jdbc[9]: 
/**/stat31.close();
2020-04-19 17:21:26 jdbc[9]: 
/**/conn8.getAutoCommit();
2020-04-19 17:21:26 jdbc[9]: 
/**/Statement stat32 = conn8.createStatement();
2020-04-19 17:21:26 jdbc[9]: 
/**/stat32.execute("SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid");
2020-04-19 17:21:26 jdbc[9]: Plan       : calculate cost for plan [D, T]
2020-04-19 17:21:26 jdbc[9]: Plan       :   for table filter D
2020-04-19 17:21:26 jdbc[9]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:21:26 jdbc[9]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:21:26 jdbc[9]: Plan       :   best plan item cost 99,510,000 index meta
2020-04-19 17:21:26 jdbc[9]: Plan       :   for table filter T
2020-04-19 17:21:26 jdbc[9]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:21:26 jdbc[9]: Plan       :   best plan item cost 9,950 index meta
2020-04-19 17:21:26 jdbc[9]: Plan       : plan cost 990,224,019,951
2020-04-19 17:29:30 command: slow query: 483,722 ms
2020-04-19 17:29:30 jdbc[9]: exception
org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.ArrayIndexOutOfBoundsException: 9"; SQL statement:
SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:511)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:189)
	at org.h2.message.DbException.convert(DbException.java:353)
	at org.h2.command.Command.executeQuery(Command.java:210)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:222)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 9
	at org.h2.result.DefaultRow.getValue(DefaultRow.java:40)
	at org.h2.table.TableFilter.getValue(TableFilter.java:1043)
	at org.h2.expression.ExpressionColumn.getValue(ExpressionColumn.java:202)
	at org.h2.command.query.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1840)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:104)
	at org.h2.result.LazyResult.next(LazyResult.java:63)
	at org.h2.command.query.Select.queryFlat(Select.java:721)
	at org.h2.command.query.Select.queryWithoutCache(Select.java:827)
	at org.h2.command.query.Query.queryWithoutCacheLazyCheck(Query.java:196)
	at org.h2.command.query.Query.query(Query.java:481)
	at org.h2.command.query.Query.query(Query.java:444)
	at org.h2.command.CommandContainer.query(CommandContainer.java:262)
	at org.h2.command.Command.executeQuery(Command.java:189)
	... 5 more
2020-04-19 17:29:30 jdbc[9]: 
/**/stat32.close();
2020-04-19 17:29:30 jdbc[9]: 
/**/conn8.getAutoCommit();
2020-04-19 17:29:32 jdbc[9]: 
/**/conn8.close();
2020-04-19 17:29:32 lock: 9 shared read lock unlock SYS 
2020-04-19 17:29:32 database: disconnecting session #9
2020-04-19 17:29:32 database: disconnected session #9
2020-04-19 17:30:04 jdbc[3]: Plan       : calculate cost for plan [PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@5ea9d1da]
2020-04-19 17:30:04 jdbc[3]: Plan       :   for table filter PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@5ea9d1da
2020-04-19 17:30:04 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:30:04 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:30:04 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 17:30:19 command: slow query: 15,378 ms
2020-04-19 17:31:52 jdbc[3]: Plan       : calculate cost for plan [PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@5ea9d1da]
2020-04-19 17:31:52 jdbc[3]: Plan       :   for table filter PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@5ea9d1da
2020-04-19 17:31:52 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:31:52 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:31:52 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 17:33:50 command: slow query: 118,175 ms
2020-04-19 17:39:05 database: closing D:/JAVA_WorkSpace/h2database/h2_db2 from shutdown hook
2020-04-19 17:39:05 lock: 3 shared read lock unlock SYS 
2020-04-19 17:39:05 database: disconnecting session #3
2020-04-19 17:39:05 database: disconnected session #3
2020-04-19 17:39:05 database: closing D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 17:39:05 lock: 1 shared read lock unlock SYS 
2020-04-19 17:39:05 lock: 2 shared read lock unlock SYS 
2020-04-19 17:39:05 database: closed
2020-04-19 17:39:35 database: opening D:/JAVA_WorkSpace/h2database/h2_db2 (build 200)
2020-04-19 17:39:35 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 17:39:35 lock: 1 exclusive write lock added for SYS 
2020-04-19 17:39:35 lock: 1 exclusive write lock unlock SYS 
2020-04-19 17:39:35 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 17:39:35 lock: 1 exclusive write lock added for SYS 
2020-04-19 17:39:35 lock: 1 exclusive write lock unlock SYS 
2020-04-19 17:39:35 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 17:39:35 lock: 1 exclusive write lock added for SYS 
2020-04-19 17:39:35 lock: 1 exclusive write lock unlock SYS 
2020-04-19 17:39:35 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 17:39:35 lock: 1 exclusive write lock added for SYS 
2020-04-19 17:39:35 lock: 1 exclusive write lock unlock SYS 
2020-04-19 17:39:35 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 17:39:35 lock: 1 exclusive write lock added for SYS 
2020-04-19 17:39:35 lock: 1 exclusive write lock unlock SYS 
2020-04-19 17:39:35 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 17:39:35 lock: 1 exclusive write lock added for SYS 
2020-04-19 17:39:35 lock: 1 exclusive write lock unlock SYS 
2020-04-19 17:39:35 database: opened D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 17:39:35 database: connecting session #3 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 17:39:35 jdbc[3]: 
/*SQL */SET TRACE_LEVEL_SYSTEM_OUT 3;
2020-04-19 17:39:35 jdbc[3]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2020-04-19 17:39:35 jdbc[3]: Plan       : calculate cost for plan [SETTINGS:-7:org.h2.table.InformationSchemaTable@7d996084]
2020-04-19 17:39:35 jdbc[3]: Plan       :   for table filter SETTINGS:-7:org.h2.table.InformationSchemaTable@7d996084
2020-04-19 17:39:35 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:35 jdbc[3]: Plan       :   best plan item cost 9,900 index meta
2020-04-19 17:39:35 jdbc[3]: Plan       : plan cost 9,901
2020-04-19 17:39:45 jdbc[3]: 
/*SQL l:77 #:2 t:9960*/SELECT NAME, `VALUE` FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?) {1: 'MODE', 2: 'TIME ZONE', 3: 'JAVA_OBJECT_SERIALIZER'};
2020-04-19 17:39:45 command: slow query: 9,962 ms
2020-04-19 17:39:48 jdbc[3]: 
/*SQL l:77 #:3 t:6*/SELECT NAME, `VALUE` FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?) {1: 'DATABASE_TO_UPPER', 2: 'DATABASE_TO_LOWER', 3: 'CASE_INSENSITIVE_IDENTIFIERS'};
2020-04-19 17:39:48 jdbc[3]: Plan       : calculate cost for plan [SCHEMATA:-14:org.h2.table.InformationSchemaTable@6be9b638]
2020-04-19 17:39:48 jdbc[3]: Plan       :   for table filter SCHEMATA:-14:org.h2.table.InformationSchemaTable@6be9b638
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 17:39:48 jdbc[3]: 
/*SQL #:3*/SELECT SCHEMA_NAME TABLE_SCHEM, CATALOG_NAME TABLE_CATALOG,  IS_DEFAULT FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME;
2020-04-19 17:39:48 jdbc[3]: Plan       : calculate cost for plan [SCHEMATA:-14:org.h2.table.InformationSchemaTable@6be9b638]
2020-04-19 17:39:48 jdbc[3]: Plan       :   for table filter SCHEMATA:-14:org.h2.table.InformationSchemaTable@6be9b638
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 17:39:48 jdbc[3]: 
/*SQL #:3*/SELECT SCHEMA_NAME TABLE_SCHEM, CATALOG_NAME TABLE_CATALOG,  IS_DEFAULT FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME;
2020-04-19 17:39:48 jdbc[3]: Plan       : calculate cost for plan [_0]
2020-04-19 17:39:48 jdbc[3]: Plan       :   for table filter _0
2020-04-19 17:39:48 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf]
2020-04-19 17:39:48 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:39:48 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87]
2020-04-19 17:39:48 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:39:48 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf]
2020-04-19 17:39:48 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:39:48 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87]
2020-04-19 17:39:48 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:39:48 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf]
2020-04-19 17:39:48 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:39:48 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87]
2020-04-19 17:39:48 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:39:48 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 17:39:48 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 17:39:48 jdbc[3]: Plan       : calculate cost for plan [_1]
2020-04-19 17:39:48 jdbc[3]: Plan       :   for table filter _1
2020-04-19 17:39:48 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf]
2020-04-19 17:39:48 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:39:48 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87]
2020-04-19 17:39:48 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:39:48 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf]
2020-04-19 17:39:48 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:39:48 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87]
2020-04-19 17:39:48 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:39:48 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf]
2020-04-19 17:39:48 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:39:48 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87]
2020-04-19 17:39:48 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:48 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:39:48 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:39:48 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 17:39:48 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 17:39:48 jdbc[3]: 
/*SQL l:1007 #:35 t:18*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'INFORMATION_SCHEMA', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 17:39:49 jdbc[3]: Plan       : calculate cost for plan [COLUMNS:-2:org.h2.table.InformationSchemaTable@7a018576]
2020-04-19 17:39:49 jdbc[3]: Plan       :   for table filter COLUMNS:-2:org.h2.table.InformationSchemaTable@7a018576
2020-04-19 17:39:49 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:49 jdbc[3]: Table      :     potential plan item cost 28 index meta
2020-04-19 17:39:49 jdbc[3]: Plan       :   best plan item cost 27.44 index meta
2020-04-19 17:39:49 jdbc[3]: Plan       : plan cost 28.44
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:1 t:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CATALOGS'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CHECK_CONSTRAINTS'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLLATIONS'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:33 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLUMNS'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:8*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLUMN_PRIVILEGES'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CONSTANTS'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CONSTRAINT_COLUMN_USAGE'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CROSS_REFERENCES'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:16*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'DOMAINS'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:11*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'DOMAIN_CONSTRAINTS'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:12 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'FUNCTION_ALIASES'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:17*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'FUNCTION_COLUMNS'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'HELP'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:21 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'INDEXES'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'IN_DOUBT'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:12 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'KEY_COLUMN_USAGE'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'LOCKS'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'QUERY_STATISTICS'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'REFERENTIAL_CONSTRAINTS'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'RIGHTS'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'ROLES'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:8*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SCHEMATA'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:17*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SEQUENCES'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SESSIONS'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SESSION_STATE'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SETTINGS'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SYNONYMS'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLES'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_CONSTRAINTS'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_PRIVILEGES'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_TYPES'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TRIGGERS'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TYPE_INFO'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'USERS'};
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'VIEWS'};
2020-04-19 17:39:49 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@68f4147e]
2020-04-19 17:39:49 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@68f4147e
2020-04-19 17:39:49 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:49 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:39:49 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 17:39:49 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@68f4147e]
2020-04-19 17:39:49 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@68f4147e
2020-04-19 17:39:49 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:49 jdbc[3]: Plan       :   best plan item cost 9,800 index meta
2020-04-19 17:39:49 jdbc[3]: Plan       : plan cost 9,801
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:438 #:1 t:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'INFORMATION_SCHEMA', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 17:39:49 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@3993ccf7]
2020-04-19 17:39:49 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@3993ccf7
2020-04-19 17:39:49 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:49 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:39:49 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 17:39:49 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@3993ccf7]
2020-04-19 17:39:49 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@3993ccf7
2020-04-19 17:39:49 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:49 jdbc[3]: Plan       :   best plan item cost 9,600 index meta
2020-04-19 17:39:49 jdbc[3]: Plan       : plan cost 9,601
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:596 #:3*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'INFORMATION_SCHEMA', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 17:39:49 jdbc[3]: Plan       : calculate cost for plan [_2]
2020-04-19 17:39:49 jdbc[3]: Plan       :   for table filter _2
2020-04-19 17:39:49 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf]
2020-04-19 17:39:49 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf
2020-04-19 17:39:49 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:49 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:49 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:39:49 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:39:49 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87]
2020-04-19 17:39:49 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87
2020-04-19 17:39:49 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:49 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:49 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:39:49 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:39:49 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf]
2020-04-19 17:39:49 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf
2020-04-19 17:39:49 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:49 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:49 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:39:49 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:39:49 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87]
2020-04-19 17:39:49 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87
2020-04-19 17:39:49 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:49 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:49 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:39:49 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:39:49 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf]
2020-04-19 17:39:49 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf
2020-04-19 17:39:49 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:49 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:49 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:39:49 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:39:49 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87]
2020-04-19 17:39:49 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87
2020-04-19 17:39:49 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:49 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:49 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:39:49 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:39:49 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 17:39:49 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 17:39:49 jdbc[3]: 
/*SQL l:1007 #:18 t:4*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'PG_CATALOG', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_AM'};
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ATTRDEF'};
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:123 #:10*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ATTRIBUTE'};
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_AUTHID'};
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:123 #:13*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_CLASS'};
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:123 #:10*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_DATABASE'};
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_DESCRIPTION'};
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_GROUP'};
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_INDEX'};
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_INHERITS'};
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_NAMESPACE'};
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_PROC'};
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ROLES'};
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_SETTINGS'};
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TABLESPACE'};
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TRIGGER'};
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TYPE'};
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_USER'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@68f4147e]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@68f4147e
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 9,800 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 9,801
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:438 #:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@3993ccf7]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@3993ccf7
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 9,600 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 9,601
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:596 #:3*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'PG_CATALOG', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [_3]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter _3
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@5e2fc7cf
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:1007 t:4*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'PUBLIC', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@68f4147e]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@68f4147e
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 9,900 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 9,901
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:438 #:1 t:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'PUBLIC', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@3993ccf7]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@3993ccf7
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 9,700 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 9,701
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:596 #:3 t:10*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'PUBLIC', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 324.72 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 325.72
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_AM'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ATTRDEF'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ATTRIBUTE'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_AUTHID'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_CLASS'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_DATABASE'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_DESCRIPTION'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_GROUP'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_INDEX'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_INHERITS'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_NAMESPACE'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_PROC'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ROLES'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_SETTINGS'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TABLESPACE'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TRIGGER'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:433 t:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TYPE'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@7561387e
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 17:39:50 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_USER'};
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [SEQUENCES:-9:org.h2.table.InformationSchemaTable@52b2b651]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter SEQUENCES:-9:org.h2.table.InformationSchemaTable@52b2b651
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 17:39:50 jdbc[3]: 
/*SQL */SELECT * FROM INFORMATION_SCHEMA.SEQUENCES ORDER BY SEQUENCE_NAME;
2020-04-19 17:39:50 jdbc[3]: Plan       : calculate cost for plan [USERS:-10:org.h2.table.InformationSchemaTable@d1c3791]
2020-04-19 17:39:50 jdbc[3]: Plan       :   for table filter USERS:-10:org.h2.table.InformationSchemaTable@d1c3791
2020-04-19 17:39:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:39:50 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 17:39:50 jdbc[3]: 
/*SQL #:1*/SELECT * FROM INFORMATION_SCHEMA.USERS ORDER BY NAME;
2020-04-19 17:41:13 jdbc[3]: Plan       : calculate cost for plan [PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@38970c12]
2020-04-19 17:41:13 jdbc[3]: Plan       :   for table filter PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@38970c12
2020-04-19 17:41:13 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:41:13 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:41:13 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 17:42:06 jdbc[3]: 
/*SQL #:1 t:52482*/select * from \"PG_CATALOG\".\"PG_DATABASE\";
2020-04-19 17:42:06 command: slow query: 52,483 ms
2020-04-19 17:42:06 jdbc[3]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 17:42:06 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87]
2020-04-19 17:42:06 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87
2020-04-19 17:42:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:42:06 jdbc[3]: Table      :     potential plan item cost 4,322 index meta
2020-04-19 17:42:06 jdbc[3]: Plan       :   best plan item cost 4,278.78 index meta
2020-04-19 17:42:06 jdbc[3]: Plan       : plan cost 4,279.78
2020-04-19 17:42:06 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87]
2020-04-19 17:42:06 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@381c6a87
2020-04-19 17:42:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:42:06 jdbc[3]: Table      :     potential plan item cost 1,324 index meta
2020-04-19 17:42:06 jdbc[3]: Plan       :   best plan item cost 1,257.8 index meta
2020-04-19 17:42:06 jdbc[3]: Plan       : plan cost 1,258.8
2020-04-19 17:42:06 jdbc[3]: 
/*SQL l:414*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'PG_CATALOG', 3: 'PG_DATABASE', 4: '\\', 5: 'TABLE'};
2020-04-19 17:42:15 database: connecting session #4 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 17:42:15 jdbc[4]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 17:42:15 jdbc[4]: 
/**/Connection conn2 = DriverManager.getConnection("jdbc:h2:./h2_db2", "SA", "");
2020-04-19 17:42:15 jdbc[4]: 
/**/Statement stat4 = conn2.createStatement();
2020-04-19 17:42:15 jdbc[4]: 
/**/Statement stat5 = conn2.createStatement();
2020-04-19 17:42:15 jdbc[4]: 
/**/stat5.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 17:42:15 jdbc[4]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 17:42:15 jdbc[4]: 
/**/ResultSet rs91 = stat5.executeQuery("select oid from pg_catalog.pg_type");
2020-04-19 17:42:15 jdbc[4]: Plan       : calculate cost for plan [PG_TYPE:-1016:org.h2.mode.PgCatalogTable@57a87fa7]
2020-04-19 17:42:15 jdbc[4]: Plan       :   for table filter PG_TYPE:-1016:org.h2.mode.PgCatalogTable@57a87fa7
2020-04-19 17:42:15 jdbc[4]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:42:15 jdbc[4]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:42:15 jdbc[4]: Plan       : plan cost 10,001
2020-04-19 17:42:15 jdbc[4]: 
/*SQL #:21*/select oid from pg_catalog.pg_type;
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.next();
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.getInt(1);
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.next();
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.getInt(1);
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.next();
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.getInt(1);
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.next();
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.getInt(1);
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.next();
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.getInt(1);
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.next();
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.getInt(1);
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.next();
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.getInt(1);
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.next();
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.getInt(1);
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.next();
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.getInt(1);
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.next();
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.getInt(1);
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.next();
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.getInt(1);
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.next();
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.getInt(1);
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.next();
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.getInt(1);
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.next();
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.getInt(1);
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.next();
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.getInt(1);
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.next();
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.getInt(1);
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.next();
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.getInt(1);
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.next();
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.getInt(1);
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.next();
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.getInt(1);
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.next();
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.getInt(1);
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.next();
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.getInt(1);
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.next();
2020-04-19 17:42:15 jdbc[4]: 
/**/rs91.close();
2020-04-19 17:42:15 jdbc[4]: 
/**/stat5.close();
2020-04-19 17:42:15 jdbc[4]: 
/**/conn2.getAutoCommit();
2020-04-19 17:42:15 jdbc[4]: 
/**/Statement stat6 = conn2.createStatement();
2020-04-19 17:42:15 jdbc[4]: 
/**/stat6.execute("set DATESTYLE ISO");
2020-04-19 17:42:15 jdbc[4]: 
/*SQL */set DATESTYLE ISO;
2020-04-19 17:42:15 jdbc[4]: 
/**/stat6.getUpdateCount();
2020-04-19 17:42:15 jdbc[4]: 
/**/stat6.close();
2020-04-19 17:42:15 jdbc[4]: 
/**/conn2.getAutoCommit();
2020-04-19 17:42:15 jdbc[4]: 
/**/Statement stat7 = conn2.createStatement();
2020-04-19 17:42:15 jdbc[4]: 
/**/stat7.execute("SELECT DISTINCT datlastsysoid FROM pg_database");
2020-04-19 17:42:15 jdbc[4]: Plan       : calculate cost for plan [PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@38970c12]
2020-04-19 17:42:15 jdbc[4]: Plan       :   for table filter PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@38970c12
2020-04-19 17:42:15 jdbc[4]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:42:15 jdbc[4]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:42:15 jdbc[4]: Plan       : plan cost 10,001
2020-04-19 17:42:19 jdbc[4]: 
/*SQL #:1 t:4318*/SELECT DISTINCT datlastsysoid FROM pg_database;
2020-04-19 17:42:19 command: slow query: 4,319 ms
2020-04-19 17:42:19 jdbc[4]: 
/**/ResultSet rs93 = stat7.getResultSet();
2020-04-19 17:42:19 jdbc[4]: 
/**/ResultSetMetaData rsMeta11 = rs93.getMetaData();
2020-04-19 17:42:19 jdbc[4]: 
/**/conn2.getCatalog();
2020-04-19 17:42:19 jdbc[4]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta11.getColumnCount();
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta11.getColumnName(1);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta11.getColumnType(1);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta11.getColumnDisplaySize(1);
2020-04-19 17:42:19 jdbc[4]: 
/**/rs93.next();
2020-04-19 17:42:19 jdbc[4]: 
/**/ResultSetMetaData rsMeta12 = rs93.getMetaData();
2020-04-19 17:42:19 jdbc[4]: 
/**/conn2.getCatalog();
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta12.getColumnCount();
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta12.getColumnType(1);
2020-04-19 17:42:19 jdbc[4]: 
/**/rs93.next();
2020-04-19 17:42:19 jdbc[4]: 
/**/stat7.close();
2020-04-19 17:42:19 jdbc[4]: 
/**/conn2.getAutoCommit();
2020-04-19 17:42:19 jdbc[4]: 
/**/Statement stat8 = conn2.createStatement();
2020-04-19 17:42:19 jdbc[4]: 
/**/stat8.execute("SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid");
2020-04-19 17:42:19 jdbc[4]: Plan       : calculate cost for plan [D, T]
2020-04-19 17:42:19 jdbc[4]: Plan       :   for table filter D
2020-04-19 17:42:19 jdbc[4]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:42:19 jdbc[4]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:42:19 jdbc[4]: Plan       :   best plan item cost 99,510,000 index meta
2020-04-19 17:42:19 jdbc[4]: Plan       :   for table filter T
2020-04-19 17:42:19 jdbc[4]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:42:19 jdbc[4]: Plan       :   best plan item cost 9,950 index meta
2020-04-19 17:42:19 jdbc[4]: Plan       : plan cost 990,224,019,951
2020-04-19 17:42:19 jdbc[4]: 
/*SQL #:1*/SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid;
2020-04-19 17:42:19 jdbc[4]: 
/**/ResultSet rs94 = stat8.getResultSet();
2020-04-19 17:42:19 jdbc[4]: 
/**/ResultSetMetaData rsMeta13 = rs94.getMetaData();
2020-04-19 17:42:19 jdbc[4]: 
/**/conn2.getCatalog();
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnCount();
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnName(1);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnType(1);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnDisplaySize(1);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnName(2);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnType(2);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnDisplaySize(2);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnName(3);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnType(3);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnDisplaySize(3);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnName(4);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnType(4);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnDisplaySize(4);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnName(5);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnType(5);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnDisplaySize(5);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnName(6);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnType(6);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnDisplaySize(6);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnName(7);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnType(7);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnDisplaySize(7);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnName(8);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnType(8);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnDisplaySize(8);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnName(9);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnType(9);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta13.getColumnDisplaySize(9);
2020-04-19 17:42:19 jdbc[4]: 
/**/rs94.next();
2020-04-19 17:42:19 jdbc[4]: 
/**/ResultSetMetaData rsMeta14 = rs94.getMetaData();
2020-04-19 17:42:19 jdbc[4]: 
/**/conn2.getCatalog();
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta14.getColumnCount();
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta14.getColumnType(1);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta14.getColumnType(2);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta14.getColumnType(3);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta14.getColumnType(4);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta14.getColumnType(5);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta14.getColumnType(6);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta14.getColumnType(7);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta14.getColumnType(8);
2020-04-19 17:42:19 jdbc[4]: 
/**/rsMeta14.getColumnType(9);
2020-04-19 17:42:19 jdbc[4]: 
/**/rs94.next();
2020-04-19 17:42:19 jdbc[4]: 
/**/stat8.close();
2020-04-19 17:42:19 jdbc[4]: 
/**/conn2.getAutoCommit();
2020-04-19 17:42:29 jdbc[4]: 
/**/conn2.close();
2020-04-19 17:42:29 lock: 4 shared read lock unlock SYS 
2020-04-19 17:42:29 database: disconnecting session #4
2020-04-19 17:42:29 database: disconnected session #4
2020-04-19 17:48:58 database: connecting session #5 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 17:48:58 jdbc[5]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 17:48:58 jdbc[5]: 
/**/Connection conn3 = DriverManager.getConnection("jdbc:h2:./h2_db2", "SA", "");
2020-04-19 17:48:58 jdbc[5]: 
/**/Statement stat9 = conn3.createStatement();
2020-04-19 17:48:58 jdbc[5]: 
/**/Statement stat10 = conn3.createStatement();
2020-04-19 17:48:58 jdbc[5]: 
/**/stat10.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 17:48:58 jdbc[5]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 17:48:58 jdbc[5]: 
/**/stat10.close();
2020-04-19 17:48:58 jdbc[5]: 
/**/conn3.getAutoCommit();
2020-04-19 17:48:58 jdbc[5]: 
/**/Statement stat11 = conn3.createStatement();
2020-04-19 17:48:58 jdbc[5]: 
/**/stat11.execute("set DATESTYLE ISO");
2020-04-19 17:48:58 jdbc[5]: 
/*SQL */set DATESTYLE ISO;
2020-04-19 17:48:58 jdbc[5]: 
/**/stat11.getUpdateCount();
2020-04-19 17:48:58 jdbc[5]: 
/**/stat11.close();
2020-04-19 17:48:58 jdbc[5]: 
/**/conn3.getAutoCommit();
2020-04-19 17:48:58 jdbc[5]: 
/**/Statement stat12 = conn3.createStatement();
2020-04-19 17:48:58 jdbc[5]: 
/**/stat12.execute("SELECT DISTINCT datlastsysoid FROM pg_database");
2020-04-19 17:48:58 jdbc[5]: Plan       : calculate cost for plan [PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@38970c12]
2020-04-19 17:48:58 jdbc[5]: Plan       :   for table filter PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@38970c12
2020-04-19 17:48:58 jdbc[5]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:48:58 jdbc[5]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:48:58 jdbc[5]: Plan       : plan cost 10,001
2020-04-19 17:48:58 jdbc[5]: 
/*SQL #:1*/SELECT DISTINCT datlastsysoid FROM pg_database;
2020-04-19 17:48:58 jdbc[5]: 
/**/ResultSet rs97 = stat12.getResultSet();
2020-04-19 17:48:58 jdbc[5]: 
/**/ResultSetMetaData rsMeta15 = rs97.getMetaData();
2020-04-19 17:48:58 jdbc[5]: 
/**/conn3.getCatalog();
2020-04-19 17:48:58 jdbc[5]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta15.getColumnCount();
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta15.getColumnName(1);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta15.getColumnType(1);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta15.getColumnDisplaySize(1);
2020-04-19 17:48:58 jdbc[5]: 
/**/rs97.next();
2020-04-19 17:48:58 jdbc[5]: 
/**/ResultSetMetaData rsMeta16 = rs97.getMetaData();
2020-04-19 17:48:58 jdbc[5]: 
/**/conn3.getCatalog();
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta16.getColumnCount();
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta16.getColumnType(1);
2020-04-19 17:48:58 jdbc[5]: 
/**/rs97.next();
2020-04-19 17:48:58 jdbc[5]: 
/**/stat12.close();
2020-04-19 17:48:58 jdbc[5]: 
/**/conn3.getAutoCommit();
2020-04-19 17:48:58 jdbc[5]: 
/**/Statement stat13 = conn3.createStatement();
2020-04-19 17:48:58 jdbc[5]: 
/**/stat13.execute("SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid");
2020-04-19 17:48:58 jdbc[5]: Plan       : calculate cost for plan [D, T]
2020-04-19 17:48:58 jdbc[5]: Plan       :   for table filter D
2020-04-19 17:48:58 jdbc[5]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:48:58 jdbc[5]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:48:58 jdbc[5]: Plan       :   best plan item cost 99,510,000 index meta
2020-04-19 17:48:58 jdbc[5]: Plan       :   for table filter T
2020-04-19 17:48:58 jdbc[5]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:48:58 jdbc[5]: Plan       :   best plan item cost 9,950 index meta
2020-04-19 17:48:58 jdbc[5]: Plan       : plan cost 990,224,019,951
2020-04-19 17:48:58 jdbc[5]: 
/*SQL #:1*/SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid;
2020-04-19 17:48:58 jdbc[5]: 
/**/ResultSet rs98 = stat13.getResultSet();
2020-04-19 17:48:58 jdbc[5]: 
/**/ResultSetMetaData rsMeta17 = rs98.getMetaData();
2020-04-19 17:48:58 jdbc[5]: 
/**/conn3.getCatalog();
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnCount();
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnName(1);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnType(1);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnDisplaySize(1);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnName(2);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnType(2);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnDisplaySize(2);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnName(3);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnType(3);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnDisplaySize(3);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnName(4);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnType(4);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnDisplaySize(4);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnName(5);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnType(5);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnDisplaySize(5);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnName(6);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnType(6);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnDisplaySize(6);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnName(7);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnType(7);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnDisplaySize(7);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnName(8);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnType(8);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnDisplaySize(8);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnName(9);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnType(9);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta17.getColumnDisplaySize(9);
2020-04-19 17:48:58 jdbc[5]: 
/**/rs98.next();
2020-04-19 17:48:58 jdbc[5]: 
/**/ResultSetMetaData rsMeta18 = rs98.getMetaData();
2020-04-19 17:48:58 jdbc[5]: 
/**/conn3.getCatalog();
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta18.getColumnCount();
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta18.getColumnType(1);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta18.getColumnType(2);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta18.getColumnType(3);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta18.getColumnType(4);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta18.getColumnType(5);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta18.getColumnType(6);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta18.getColumnType(7);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta18.getColumnType(8);
2020-04-19 17:48:58 jdbc[5]: 
/**/rsMeta18.getColumnType(9);
2020-04-19 17:48:58 jdbc[5]: 
/**/rs98.next();
2020-04-19 17:48:58 jdbc[5]: 
/**/stat13.close();
2020-04-19 17:48:58 jdbc[5]: 
/**/conn3.getAutoCommit();
2020-04-19 17:50:13 jdbc[3]: Plan       : calculate cost for plan [D, T]
2020-04-19 17:50:13 jdbc[3]: Plan       :   for table filter D
2020-04-19 17:50:13 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:50:13 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:50:13 jdbc[3]: Plan       :   best plan item cost 99,510,000 index meta
2020-04-19 17:50:13 jdbc[3]: Plan       :   for table filter T
2020-04-19 17:50:13 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:50:13 jdbc[3]: Plan       :   best plan item cost 9,950 index meta
2020-04-19 17:50:13 jdbc[3]: Plan       : plan cost 990,224,019,951
2020-04-19 17:50:13 jdbc[3]: 
/*SQL #:1*/SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM PG_CATALOG.PG_DATABASE d LEFT JOIN PG_CATALOG.PG_TABLESPACE  t ON d.dattablespace = t.oid;
2020-04-19 17:51:09 jdbc[5]: 
/**/conn3.close();
2020-04-19 17:51:09 lock: 5 shared read lock unlock SYS 
2020-04-19 17:51:09 database: disconnecting session #5
2020-04-19 17:51:09 database: disconnected session #5
2020-04-19 17:51:10 database: connecting session #6 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 17:51:10 jdbc[6]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 17:51:10 jdbc[6]: 
/**/Connection conn4 = DriverManager.getConnection("jdbc:h2:./h2_db2", "SA", "");
2020-04-19 17:51:10 jdbc[6]: 
/**/Statement stat16 = conn4.createStatement();
2020-04-19 17:51:10 jdbc[6]: 
/**/Statement stat17 = conn4.createStatement();
2020-04-19 17:51:10 jdbc[6]: 
/**/stat17.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 17:51:10 jdbc[6]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 17:51:10 jdbc[6]: 
/**/stat17.close();
2020-04-19 17:51:10 jdbc[6]: 
/**/conn4.getAutoCommit();
2020-04-19 17:51:10 jdbc[6]: 
/**/Statement stat18 = conn4.createStatement();
2020-04-19 17:51:10 jdbc[6]: 
/**/stat18.execute("set DATESTYLE ISO");
2020-04-19 17:51:10 jdbc[6]: 
/*SQL */set DATESTYLE ISO;
2020-04-19 17:51:10 jdbc[6]: 
/**/stat18.getUpdateCount();
2020-04-19 17:51:10 jdbc[6]: 
/**/stat18.close();
2020-04-19 17:51:10 jdbc[6]: 
/**/conn4.getAutoCommit();
2020-04-19 17:51:10 jdbc[6]: 
/**/Statement stat19 = conn4.createStatement();
2020-04-19 17:51:10 jdbc[6]: 
/**/stat19.execute("SELECT DISTINCT datlastsysoid FROM pg_database");
2020-04-19 17:51:10 jdbc[6]: Plan       : calculate cost for plan [PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@38970c12]
2020-04-19 17:51:10 jdbc[6]: Plan       :   for table filter PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@38970c12
2020-04-19 17:51:10 jdbc[6]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:51:10 jdbc[6]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:51:10 jdbc[6]: Plan       : plan cost 10,001
2020-04-19 17:51:27 jdbc[6]: 
/*SQL #:1 t:16864*/SELECT DISTINCT datlastsysoid FROM pg_database;
2020-04-19 17:51:27 command: slow query: 16,864 ms
2020-04-19 17:51:27 jdbc[6]: 
/**/ResultSet rs103 = stat19.getResultSet();
2020-04-19 17:51:27 jdbc[6]: 
/**/ResultSetMetaData rsMeta29 = rs103.getMetaData();
2020-04-19 17:51:27 jdbc[6]: 
/**/conn4.getCatalog();
2020-04-19 17:51:27 jdbc[6]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 17:51:27 jdbc[6]: 
/**/rsMeta29.getColumnCount();
2020-04-19 17:51:27 jdbc[6]: 
/**/rsMeta29.getColumnName(1);
2020-04-19 17:51:27 jdbc[6]: 
/**/rsMeta29.getColumnType(1);
2020-04-19 17:51:27 jdbc[6]: 
/**/rsMeta29.getColumnDisplaySize(1);
2020-04-19 17:51:27 jdbc[6]: 
/**/rs103.next();
2020-04-19 17:51:27 jdbc[6]: 
/**/ResultSetMetaData rsMeta30 = rs103.getMetaData();
2020-04-19 17:51:27 jdbc[6]: 
/**/conn4.getCatalog();
2020-04-19 17:51:27 jdbc[6]: 
/**/rsMeta30.getColumnCount();
2020-04-19 17:51:27 jdbc[6]: 
/**/rsMeta30.getColumnType(1);
2020-04-19 17:51:27 jdbc[6]: 
/**/rs103.next();
2020-04-19 17:51:27 jdbc[6]: 
/**/stat19.close();
2020-04-19 17:51:27 jdbc[6]: 
/**/conn4.getAutoCommit();
2020-04-19 17:51:27 jdbc[6]: 
/**/Statement stat20 = conn4.createStatement();
2020-04-19 17:51:27 jdbc[6]: 
/**/stat20.execute("SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid");
2020-04-19 17:51:27 jdbc[6]: Plan       : calculate cost for plan [D, T]
2020-04-19 17:51:27 jdbc[6]: Plan       :   for table filter D
2020-04-19 17:51:27 jdbc[6]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:51:27 jdbc[6]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:51:27 jdbc[6]: Plan       :   best plan item cost 99,510,000 index meta
2020-04-19 17:51:27 jdbc[6]: Plan       :   for table filter T
2020-04-19 17:51:27 jdbc[6]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:51:27 jdbc[6]: Plan       :   best plan item cost 9,950 index meta
2020-04-19 17:51:27 jdbc[6]: Plan       : plan cost 990,224,019,951
2020-04-19 17:51:48 jdbc[6]: 
/*SQL #:1 t:20789*/SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid;
2020-04-19 17:51:48 command: slow query: 20,790 ms
2020-04-19 17:51:48 jdbc[6]: 
/**/ResultSet rs104 = stat20.getResultSet();
2020-04-19 17:51:48 jdbc[6]: 
/**/ResultSetMetaData rsMeta31 = rs104.getMetaData();
2020-04-19 17:51:48 jdbc[6]: 
/**/conn4.getCatalog();
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnCount();
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnName(1);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnType(1);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnDisplaySize(1);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnName(2);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnType(2);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnDisplaySize(2);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnName(3);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnType(3);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnDisplaySize(3);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnName(4);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnType(4);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnDisplaySize(4);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnName(5);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnType(5);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnDisplaySize(5);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnName(6);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnType(6);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnDisplaySize(6);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnName(7);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnType(7);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnDisplaySize(7);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnName(8);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnType(8);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnDisplaySize(8);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnName(9);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnType(9);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta31.getColumnDisplaySize(9);
2020-04-19 17:51:48 jdbc[6]: 
/**/rs104.next();
2020-04-19 17:51:48 jdbc[6]: 
/**/ResultSetMetaData rsMeta32 = rs104.getMetaData();
2020-04-19 17:51:48 jdbc[6]: 
/**/conn4.getCatalog();
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta32.getColumnCount();
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta32.getColumnType(1);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta32.getColumnType(2);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta32.getColumnType(3);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta32.getColumnType(4);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta32.getColumnType(5);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta32.getColumnType(6);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta32.getColumnType(7);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta32.getColumnType(8);
2020-04-19 17:51:48 jdbc[6]: 
/**/rsMeta32.getColumnType(9);
2020-04-19 17:51:48 jdbc[6]: 
/**/rs104.next();
2020-04-19 17:51:48 jdbc[6]: 
/**/stat20.close();
2020-04-19 17:51:48 jdbc[6]: 
/**/conn4.getAutoCommit();
2020-04-19 17:52:45 jdbc[6]: 
/**/conn4.close();
2020-04-19 17:52:45 lock: 6 shared read lock unlock SYS 
2020-04-19 17:52:45 database: disconnecting session #6
2020-04-19 17:52:45 database: disconnected session #6
2020-04-19 17:52:46 database: connecting session #7 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 17:52:46 jdbc[7]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 17:52:46 jdbc[7]: 
/**/Connection conn5 = DriverManager.getConnection("jdbc:h2:./h2_db2", "SA", "");
2020-04-19 17:52:46 jdbc[7]: 
/**/Statement stat21 = conn5.createStatement();
2020-04-19 17:52:46 jdbc[7]: 
/**/Statement stat22 = conn5.createStatement();
2020-04-19 17:52:46 jdbc[7]: 
/**/stat22.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 17:52:46 jdbc[7]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 17:52:46 jdbc[7]: 
/**/stat22.close();
2020-04-19 17:52:46 jdbc[7]: 
/**/conn5.getAutoCommit();
2020-04-19 17:52:46 jdbc[7]: 
/**/Statement stat23 = conn5.createStatement();
2020-04-19 17:52:46 jdbc[7]: 
/**/stat23.execute("set DATESTYLE ISO");
2020-04-19 17:52:46 jdbc[7]: 
/*SQL */set DATESTYLE ISO;
2020-04-19 17:52:46 jdbc[7]: 
/**/stat23.getUpdateCount();
2020-04-19 17:52:46 jdbc[7]: 
/**/stat23.close();
2020-04-19 17:52:46 jdbc[7]: 
/**/conn5.getAutoCommit();
2020-04-19 17:52:46 jdbc[7]: 
/**/Statement stat24 = conn5.createStatement();
2020-04-19 17:52:46 jdbc[7]: 
/**/stat24.execute("SELECT DISTINCT datlastsysoid FROM pg_database");
2020-04-19 17:52:46 jdbc[7]: Plan       : calculate cost for plan [PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@38970c12]
2020-04-19 17:52:46 jdbc[7]: Plan       :   for table filter PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@38970c12
2020-04-19 17:52:46 jdbc[7]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:52:46 jdbc[7]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 17:52:46 jdbc[7]: Plan       : plan cost 10,001
2020-04-19 17:52:49 jdbc[7]: 
/*SQL #:1 t:2622*/SELECT DISTINCT datlastsysoid FROM pg_database;
2020-04-19 17:52:49 command: slow query: 2,622 ms
2020-04-19 17:52:49 jdbc[7]: 
/**/ResultSet rs107 = stat24.getResultSet();
2020-04-19 17:52:49 jdbc[7]: 
/**/ResultSetMetaData rsMeta33 = rs107.getMetaData();
2020-04-19 17:52:49 jdbc[7]: 
/**/conn5.getCatalog();
2020-04-19 17:52:49 jdbc[7]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 17:52:49 jdbc[7]: 
/**/rsMeta33.getColumnCount();
2020-04-19 17:52:49 jdbc[7]: 
/**/rsMeta33.getColumnName(1);
2020-04-19 17:52:49 jdbc[7]: 
/**/rsMeta33.getColumnType(1);
2020-04-19 17:52:49 jdbc[7]: 
/**/rsMeta33.getColumnDisplaySize(1);
2020-04-19 17:52:49 jdbc[7]: 
/**/rs107.next();
2020-04-19 17:52:49 jdbc[7]: 
/**/ResultSetMetaData rsMeta34 = rs107.getMetaData();
2020-04-19 17:52:49 jdbc[7]: 
/**/conn5.getCatalog();
2020-04-19 17:52:49 jdbc[7]: 
/**/rsMeta34.getColumnCount();
2020-04-19 17:52:49 jdbc[7]: 
/**/rsMeta34.getColumnType(1);
2020-04-19 17:52:49 jdbc[7]: 
/**/rs107.next();
2020-04-19 17:52:49 jdbc[7]: 
/**/stat24.close();
2020-04-19 17:52:49 jdbc[7]: 
/**/conn5.getAutoCommit();
2020-04-19 17:52:49 jdbc[7]: 
/**/Statement stat25 = conn5.createStatement();
2020-04-19 17:52:49 jdbc[7]: 
/**/stat25.execute("SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid");
2020-04-19 17:52:49 jdbc[7]: Plan       : calculate cost for plan [D, T]
2020-04-19 17:52:49 jdbc[7]: Plan       :   for table filter D
2020-04-19 17:52:49 jdbc[7]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:52:49 jdbc[7]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:52:49 jdbc[7]: Plan       :   best plan item cost 99,510,000 index meta
2020-04-19 17:52:49 jdbc[7]: Plan       :   for table filter T
2020-04-19 17:52:49 jdbc[7]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 17:52:49 jdbc[7]: Plan       :   best plan item cost 9,950 index meta
2020-04-19 17:52:49 jdbc[7]: Plan       : plan cost 990,224,019,951
2020-04-19 17:53:37 jdbc[7]: 
/*SQL #:1 t:48499*/SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid;
2020-04-19 17:53:37 command: slow query: 48,500 ms
2020-04-19 17:53:37 jdbc[7]: 
/**/ResultSet rs108 = stat25.getResultSet();
2020-04-19 17:53:37 jdbc[7]: 
/**/ResultSetMetaData rsMeta35 = rs108.getMetaData();
2020-04-19 17:53:37 jdbc[7]: 
/**/conn5.getCatalog();
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnCount();
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnName(1);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnType(1);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnDisplaySize(1);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnName(2);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnType(2);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnDisplaySize(2);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnName(3);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnType(3);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnDisplaySize(3);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnName(4);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnType(4);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnDisplaySize(4);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnName(5);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnType(5);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnDisplaySize(5);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnName(6);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnType(6);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnDisplaySize(6);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnName(7);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnType(7);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnDisplaySize(7);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnName(8);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnType(8);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnDisplaySize(8);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnName(9);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnType(9);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta35.getColumnDisplaySize(9);
2020-04-19 17:53:37 jdbc[7]: 
/**/rs108.next();
2020-04-19 17:53:37 jdbc[7]: 
/**/ResultSetMetaData rsMeta36 = rs108.getMetaData();
2020-04-19 17:53:37 jdbc[7]: 
/**/conn5.getCatalog();
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta36.getColumnCount();
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta36.getColumnType(1);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta36.getColumnType(2);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta36.getColumnType(3);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta36.getColumnType(4);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta36.getColumnType(5);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta36.getColumnType(6);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta36.getColumnType(7);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta36.getColumnType(8);
2020-04-19 17:53:37 jdbc[7]: 
/**/rsMeta36.getColumnType(9);
2020-04-19 17:53:37 jdbc[7]: 
/**/rs108.next();
2020-04-19 17:53:37 jdbc[7]: 
/**/stat25.close();
2020-04-19 17:53:37 jdbc[7]: 
/**/conn5.getAutoCommit();
2020-04-19 17:53:39 jdbc[7]: 
/**/conn5.close();
2020-04-19 17:53:39 lock: 7 shared read lock unlock SYS 
2020-04-19 17:53:39 database: disconnecting session #7
2020-04-19 17:53:39 database: disconnected session #7
2020-04-19 17:53:39 database: connecting session #8 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 17:53:39 jdbc[8]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 17:53:39 jdbc[8]: 
/**/Connection conn6 = DriverManager.getConnection("jdbc:h2:./H2_DB2", "SA", "");
2020-04-19 17:53:39 jdbc[8]: 
/**/Statement stat26 = conn6.createStatement();
2020-04-19 17:53:39 jdbc[8]: 
/**/Statement stat27 = conn6.createStatement();
2020-04-19 17:53:39 jdbc[8]: 
/**/stat27.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 17:53:39 jdbc[8]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 17:53:39 jdbc[8]: 
/**/stat27.close();
2020-04-19 17:53:39 jdbc[8]: 
/**/conn6.getAutoCommit();
2020-04-19 17:53:39 jdbc[8]: 
/**/Statement stat28 = conn6.createStatement();
2020-04-19 17:53:39 jdbc[8]: 
/**/stat28.execute("set DATESTYLE ISO");
2020-04-19 17:53:39 jdbc[8]: 
/*SQL */set DATESTYLE ISO;
2020-04-19 17:53:39 jdbc[8]: 
/**/stat28.getUpdateCount();
2020-04-19 17:53:39 jdbc[8]: 
/**/stat28.close();
2020-04-19 17:53:39 jdbc[8]: 
/**/conn6.getAutoCommit();
2020-04-19 17:53:39 jdbc[8]: 
/**/Statement stat29 = conn6.createStatement();
2020-04-19 17:53:39 jdbc[8]: 
/**/stat29.execute("SELECT oid, nspname AS schemaname, nspacl, pg_get_userbyid(nspowner) AS schemaowner, obj_description(oid) AS description FROM pg_namespace");
2020-04-19 17:53:39 jdbc[8]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "OID" not found; SQL statement:
SELECT oid, nspname AS schemaname, nspacl, pg_get_userbyid(nspowner) AS schemaowner, obj_description(oid) AS description FROM pg_namespace [42122-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:459)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:200)
	at org.h2.message.DbException.get(DbException.java:176)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:163)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:145)
	at org.h2.command.query.Select.optimizeExpressionsAndPreserveAliases(Select.java:1284)
	at org.h2.command.query.Select.prepare(Select.java:1167)
	at org.h2.command.Parser.prepareCommand(Parser.java:867)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-19 17:53:39 jdbc[8]: 
/**/stat29.close();
2020-04-19 17:53:39 jdbc[8]: 
/**/conn6.getAutoCommit();
2020-04-19 18:05:06 jdbc[8]: 
/**/conn6.close();
2020-04-19 18:05:06 lock: 8 shared read lock unlock SYS 
2020-04-19 18:05:06 database: disconnecting session #8
2020-04-19 18:05:06 database: disconnected session #8
2020-04-19 18:21:52 database: closing D:/JAVA_WorkSpace/h2database/h2_db2 from shutdown hook
2020-04-19 18:21:52 lock: 3 shared read lock unlock SYS 
2020-04-19 18:21:52 database: disconnecting session #3
2020-04-19 18:21:52 database: disconnected session #3
2020-04-19 18:21:53 database: closing D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 18:21:53 lock: 1 shared read lock unlock SYS 
2020-04-19 18:21:53 lock: 2 shared read lock unlock SYS 
2020-04-19 18:21:53 database: closed
2020-04-19 18:22:19 database: opening D:/JAVA_WorkSpace/h2database/h2_db2 (build 200)
2020-04-19 18:22:19 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:22:19 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:22:19 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:22:19 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:22:19 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:22:19 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:22:19 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:22:19 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:22:19 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:22:19 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:22:19 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:22:19 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:22:19 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:22:19 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:22:19 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:22:19 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:22:19 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:22:19 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:22:19 database: opened D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 18:22:19 database: connecting session #3 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 18:22:19 jdbc[3]: 
/*SQL */SET TRACE_LEVEL_SYSTEM_OUT 3;
2020-04-19 18:22:19 jdbc[3]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2020-04-19 18:22:19 jdbc[3]: Plan       : calculate cost for plan [SETTINGS:-7:org.h2.table.InformationSchemaTable@47bcb42f]
2020-04-19 18:22:19 jdbc[3]: Plan       :   for table filter SETTINGS:-7:org.h2.table.InformationSchemaTable@47bcb42f
2020-04-19 18:22:19 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:19 jdbc[3]: Plan       :   best plan item cost 9,900 index meta
2020-04-19 18:22:19 jdbc[3]: Plan       : plan cost 9,901
2020-04-19 18:22:23 jdbc[3]: 
/*SQL l:77 #:2 t:3223*/SELECT NAME, `VALUE` FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?) {1: 'MODE', 2: 'TIME ZONE', 3: 'JAVA_OBJECT_SERIALIZER'};
2020-04-19 18:22:23 command: slow query: 3,227 ms
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:77 #:3 t:4*/SELECT NAME, `VALUE` FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?) {1: 'DATABASE_TO_UPPER', 2: 'DATABASE_TO_LOWER', 3: 'CASE_INSENSITIVE_IDENTIFIERS'};
2020-04-19 18:22:24 jdbc[3]: Plan       : calculate cost for plan [SCHEMATA:-14:org.h2.table.InformationSchemaTable@13d3c0cc]
2020-04-19 18:22:24 jdbc[3]: Plan       :   for table filter SCHEMATA:-14:org.h2.table.InformationSchemaTable@13d3c0cc
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:22:24 jdbc[3]: 
/*SQL #:3*/SELECT SCHEMA_NAME TABLE_SCHEM, CATALOG_NAME TABLE_CATALOG,  IS_DEFAULT FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME;
2020-04-19 18:22:24 jdbc[3]: Plan       : calculate cost for plan [SCHEMATA:-14:org.h2.table.InformationSchemaTable@13d3c0cc]
2020-04-19 18:22:24 jdbc[3]: Plan       :   for table filter SCHEMATA:-14:org.h2.table.InformationSchemaTable@13d3c0cc
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:22:24 jdbc[3]: 
/*SQL #:3*/SELECT SCHEMA_NAME TABLE_SCHEM, CATALOG_NAME TABLE_CATALOG,  IS_DEFAULT FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME;
2020-04-19 18:22:24 jdbc[3]: Plan       : calculate cost for plan [_0]
2020-04-19 18:22:24 jdbc[3]: Plan       :   for table filter _0
2020-04-19 18:22:24 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:22:24 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:22:24 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:22:24 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:22:24 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:22:24 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:22:24 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:22:24 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:22:24 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:22:24 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:22:24 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:22:24 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:22:24 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 18:22:24 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 18:22:24 jdbc[3]: Plan       : calculate cost for plan [_1]
2020-04-19 18:22:24 jdbc[3]: Plan       :   for table filter _1
2020-04-19 18:22:24 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:22:24 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:22:24 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:22:24 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:22:24 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:22:24 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:22:24 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:22:24 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:22:24 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:22:24 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:22:24 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:22:24 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:22:24 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 18:22:24 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:1007 #:35 t:14*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'INFORMATION_SCHEMA', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 18:22:24 jdbc[3]: Plan       : calculate cost for plan [COLUMNS:-2:org.h2.table.InformationSchemaTable@1e32a542]
2020-04-19 18:22:24 jdbc[3]: Plan       :   for table filter COLUMNS:-2:org.h2.table.InformationSchemaTable@1e32a542
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:24 jdbc[3]: Table      :     potential plan item cost 28 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       :   best plan item cost 27.44 index meta
2020-04-19 18:22:24 jdbc[3]: Plan       : plan cost 28.44
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CATALOGS'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CHECK_CONSTRAINTS'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLLATIONS'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:33 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLUMNS'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:8*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLUMN_PRIVILEGES'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CONSTANTS'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CONSTRAINT_COLUMN_USAGE'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CROSS_REFERENCES'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:16*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'DOMAINS'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:11*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'DOMAIN_CONSTRAINTS'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'FUNCTION_ALIASES'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:17*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'FUNCTION_COLUMNS'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'HELP'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:21 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'INDEXES'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'IN_DOUBT'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'KEY_COLUMN_USAGE'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'LOCKS'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'QUERY_STATISTICS'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'REFERENTIAL_CONSTRAINTS'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'RIGHTS'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'ROLES'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:8*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SCHEMATA'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:17*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SEQUENCES'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SESSIONS'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SESSION_STATE'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SETTINGS'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SYNONYMS'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLES'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_CONSTRAINTS'};
2020-04-19 18:22:24 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_PRIVILEGES'};
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:123 #:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_TYPES'};
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:123 #:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TRIGGERS'};
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:123 #:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TYPE_INFO'};
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'USERS'};
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'VIEWS'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@fdf5118]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@fdf5118
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@fdf5118]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@fdf5118
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 9,800 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 9,801
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:438 #:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'INFORMATION_SCHEMA', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@33228a49]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@33228a49
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@33228a49]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@33228a49
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 9,600 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 9,601
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:596 #:3*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'INFORMATION_SCHEMA', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [_2]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter _2
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:1007 #:18 t:3*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'PG_CATALOG', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_AM'};
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ATTRDEF'};
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:123 #:10*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ATTRIBUTE'};
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_AUTHID'};
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:123 #:13*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_CLASS'};
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:123 #:10*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_DATABASE'};
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_DESCRIPTION'};
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_GROUP'};
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_INDEX'};
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_INHERITS'};
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_NAMESPACE'};
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_PROC'};
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ROLES'};
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_SETTINGS'};
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TABLESPACE'};
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TRIGGER'};
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TYPE'};
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_USER'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@fdf5118]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@fdf5118
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 9,800 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 9,801
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:438 #:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@33228a49]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@33228a49
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 9,600 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 9,601
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:596 #:3*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'PG_CATALOG', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [_3]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter _3
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:1007 t:1*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'PUBLIC', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@fdf5118]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@fdf5118
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 9,900 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 9,901
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:438 #:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'PUBLIC', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@33228a49]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@33228a49
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 9,700 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 9,701
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:596 #:3*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'PUBLIC', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 324.72 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 325.72
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_AM'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ATTRDEF'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ATTRIBUTE'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_AUTHID'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_CLASS'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_DATABASE'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_DESCRIPTION'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_GROUP'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_INDEX'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_INHERITS'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_NAMESPACE'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_PROC'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ROLES'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_SETTINGS'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TABLESPACE'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TRIGGER'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TYPE'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:22:25 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_USER'};
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [SEQUENCES:-9:org.h2.table.InformationSchemaTable@78b8a246]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter SEQUENCES:-9:org.h2.table.InformationSchemaTable@78b8a246
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:22:25 jdbc[3]: 
/*SQL t:9*/SELECT * FROM INFORMATION_SCHEMA.SEQUENCES ORDER BY SEQUENCE_NAME;
2020-04-19 18:22:25 jdbc[3]: Plan       : calculate cost for plan [USERS:-10:org.h2.table.InformationSchemaTable@2abdfbfc]
2020-04-19 18:22:25 jdbc[3]: Plan       :   for table filter USERS:-10:org.h2.table.InformationSchemaTable@2abdfbfc
2020-04-19 18:22:25 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:22:25 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:22:25 jdbc[3]: 
/*SQL #:1*/SELECT * FROM INFORMATION_SCHEMA.USERS ORDER BY NAME;
2020-04-19 18:23:02 database: closing D:/JAVA_WorkSpace/h2database/h2_db2 from shutdown hook
2020-04-19 18:23:02 lock: 3 shared read lock unlock SYS 
2020-04-19 18:23:02 database: disconnecting session #3
2020-04-19 18:23:02 database: disconnected session #3
2020-04-19 18:23:02 database: closing D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 18:23:02 lock: 1 shared read lock unlock SYS 
2020-04-19 18:23:02 lock: 2 shared read lock unlock SYS 
2020-04-19 18:23:02 database: closed
2020-04-19 18:23:36 database: opening D:/JAVA_WorkSpace/h2database/h2_db2 (build 200)
2020-04-19 18:23:36 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:23:36 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:23:36 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:23:36 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:23:36 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:23:36 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:23:36 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:23:36 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:23:36 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:23:36 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:23:36 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:23:36 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:23:36 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:23:36 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:23:36 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:23:36 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:23:36 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:23:36 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:23:36 database: opened D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 18:23:36 database: connecting session #3 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 18:23:36 jdbc[3]: 
/*SQL */SET TRACE_LEVEL_SYSTEM_OUT 3;
2020-04-19 18:23:36 jdbc[3]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2020-04-19 18:23:36 jdbc[3]: Plan       : calculate cost for plan [SETTINGS:-7:org.h2.table.InformationSchemaTable@47bcb42f]
2020-04-19 18:23:36 jdbc[3]: Plan       :   for table filter SETTINGS:-7:org.h2.table.InformationSchemaTable@47bcb42f
2020-04-19 18:23:36 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:36 jdbc[3]: Plan       :   best plan item cost 9,900 index meta
2020-04-19 18:23:36 jdbc[3]: Plan       : plan cost 9,901
2020-04-19 18:23:36 jdbc[3]: 
/*SQL l:77 #:2 t:12*/SELECT NAME, `VALUE` FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?) {1: 'MODE', 2: 'TIME ZONE', 3: 'JAVA_OBJECT_SERIALIZER'};
2020-04-19 18:23:36 jdbc[3]: 
/*SQL l:77 #:3 t:2*/SELECT NAME, `VALUE` FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?) {1: 'DATABASE_TO_UPPER', 2: 'DATABASE_TO_LOWER', 3: 'CASE_INSENSITIVE_IDENTIFIERS'};
2020-04-19 18:23:36 jdbc[3]: Plan       : calculate cost for plan [SCHEMATA:-14:org.h2.table.InformationSchemaTable@13d3c0cc]
2020-04-19 18:23:36 jdbc[3]: Plan       :   for table filter SCHEMATA:-14:org.h2.table.InformationSchemaTable@13d3c0cc
2020-04-19 18:23:36 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:36 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:23:36 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:23:36 jdbc[3]: 
/*SQL #:3*/SELECT SCHEMA_NAME TABLE_SCHEM, CATALOG_NAME TABLE_CATALOG,  IS_DEFAULT FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME;
2020-04-19 18:23:36 jdbc[3]: Plan       : calculate cost for plan [SCHEMATA:-14:org.h2.table.InformationSchemaTable@13d3c0cc]
2020-04-19 18:23:36 jdbc[3]: Plan       :   for table filter SCHEMATA:-14:org.h2.table.InformationSchemaTable@13d3c0cc
2020-04-19 18:23:36 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:36 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:23:36 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:23:36 jdbc[3]: 
/*SQL #:3*/SELECT SCHEMA_NAME TABLE_SCHEM, CATALOG_NAME TABLE_CATALOG,  IS_DEFAULT FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME;
2020-04-19 18:23:36 jdbc[3]: Plan       : calculate cost for plan [_0]
2020-04-19 18:23:36 jdbc[3]: Plan       :   for table filter _0
2020-04-19 18:23:36 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:23:36 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:23:36 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:36 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:36 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:23:36 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:23:36 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:23:36 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:23:36 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:36 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:36 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:23:36 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:23:36 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:23:36 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:23:36 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:36 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:36 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:23:36 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:23:36 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:23:36 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:23:36 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:36 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:36 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:23:36 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:23:37 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:23:37 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:23:37 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:37 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:37 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:23:37 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:23:37 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:23:37 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:23:37 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:37 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:37 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:23:37 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:23:37 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 18:23:37 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 18:23:37 jdbc[3]: Plan       : calculate cost for plan [_1]
2020-04-19 18:23:37 jdbc[3]: Plan       :   for table filter _1
2020-04-19 18:23:37 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:23:37 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:23:37 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:37 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:37 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:23:37 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:23:37 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:23:37 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:23:37 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:37 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:37 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:23:37 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:23:37 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:23:37 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:23:37 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:37 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:37 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:23:37 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:23:37 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:23:37 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:23:37 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:37 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:37 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:23:37 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:23:37 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:23:37 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:23:37 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:37 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:37 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:23:37 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:23:37 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:23:37 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:23:37 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:37 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:37 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:23:37 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:23:37 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 18:23:37 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 18:23:37 jdbc[3]: 
/*SQL l:1007 #:35 t:11*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'INFORMATION_SCHEMA', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 18:23:37 jdbc[3]: Plan       : calculate cost for plan [COLUMNS:-2:org.h2.table.InformationSchemaTable@1e32a542]
2020-04-19 18:23:37 jdbc[3]: Plan       :   for table filter COLUMNS:-2:org.h2.table.InformationSchemaTable@1e32a542
2020-04-19 18:23:37 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:37 jdbc[3]: Table      :     potential plan item cost 28 index meta
2020-04-19 18:23:37 jdbc[3]: Plan       :   best plan item cost 27.44 index meta
2020-04-19 18:23:37 jdbc[3]: Plan       : plan cost 28.44
2020-04-19 18:23:37 jdbc[3]: 
/*SQL l:123 #:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CATALOGS'};
2020-04-19 18:23:37 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CHECK_CONSTRAINTS'};
2020-04-19 18:23:37 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLLATIONS'};
2020-04-19 18:23:37 jdbc[3]: 
/*SQL l:123 #:33 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLUMNS'};
2020-04-19 18:23:37 jdbc[3]: 
/*SQL l:123 #:8*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLUMN_PRIVILEGES'};
2020-04-19 18:23:37 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CONSTANTS'};
2020-04-19 18:23:37 jdbc[3]: 
/*SQL l:123 #:7 t:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CONSTRAINT_COLUMN_USAGE'};
2020-04-19 18:23:37 jdbc[3]: 
/*SQL l:123 #:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CROSS_REFERENCES'};
2020-04-19 18:23:37 jdbc[3]: 
/*SQL l:123 #:16*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'DOMAINS'};
2020-04-19 18:23:37 jdbc[3]: 
/*SQL l:123 #:11*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'DOMAIN_CONSTRAINTS'};
2020-04-19 18:23:37 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'FUNCTION_ALIASES'};
2020-04-19 18:23:37 jdbc[3]: 
/*SQL l:123 #:17 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'FUNCTION_COLUMNS'};
2020-04-19 18:23:37 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'HELP'};
2020-04-19 18:23:37 jdbc[3]: 
/*SQL l:123 #:21*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'INDEXES'};
2020-04-19 18:23:37 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'IN_DOUBT'};
2020-04-19 18:23:37 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'KEY_COLUMN_USAGE'};
2020-04-19 18:23:37 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'LOCKS'};
2020-04-19 18:23:37 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'QUERY_STATISTICS'};
2020-04-19 18:23:37 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'REFERENTIAL_CONSTRAINTS'};
2020-04-19 18:23:37 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'RIGHTS'};
2020-04-19 18:23:37 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'ROLES'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:8*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SCHEMATA'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:17 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SEQUENCES'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:12 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SESSIONS'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SESSION_STATE'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SETTINGS'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SYNONYMS'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLES'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_CONSTRAINTS'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_PRIVILEGES'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_TYPES'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TRIGGERS'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TYPE_INFO'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'USERS'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'VIEWS'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@fdf5118]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@fdf5118
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@fdf5118]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@fdf5118
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 9,800 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 9,801
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:438 #:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'INFORMATION_SCHEMA', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@33228a49]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@33228a49
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@33228a49]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@33228a49
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 9,600 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 9,601
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:596 #:3*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'INFORMATION_SCHEMA', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [_2]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter _2
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:1007 #:18 t:2*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'PG_CATALOG', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_AM'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ATTRDEF'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:10*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ATTRIBUTE'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_AUTHID'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:13*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_CLASS'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:10*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_DATABASE'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_DESCRIPTION'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_GROUP'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_INDEX'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_INHERITS'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_NAMESPACE'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_PROC'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ROLES'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_SETTINGS'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TABLESPACE'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TRIGGER'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TYPE'};
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_USER'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@fdf5118]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@fdf5118
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 9,800 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 9,801
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:438 #:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@33228a49]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@33228a49
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 9,600 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 9,601
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:596 #:3*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'PG_CATALOG', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [_3]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter _3
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@7b91ed30
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@1211fbab
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:1007 t:6*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'PUBLIC', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@fdf5118]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@fdf5118
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 9,900 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 9,901
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:438 #:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'PUBLIC', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@33228a49]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@33228a49
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 9,700 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 9,701
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:596 #:3*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'PUBLIC', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 324.72 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 325.72
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_AM'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ATTRDEF'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ATTRIBUTE'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_AUTHID'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_CLASS'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_DATABASE'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_DESCRIPTION'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_GROUP'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_INDEX'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_INHERITS'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_NAMESPACE'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_PROC'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ROLES'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_SETTINGS'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TABLESPACE'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TRIGGER'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TYPE'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@5f6f1b20
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:23:38 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_USER'};
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [SEQUENCES:-9:org.h2.table.InformationSchemaTable@78b8a246]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter SEQUENCES:-9:org.h2.table.InformationSchemaTable@78b8a246
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:23:38 jdbc[3]: 
/*SQL */SELECT * FROM INFORMATION_SCHEMA.SEQUENCES ORDER BY SEQUENCE_NAME;
2020-04-19 18:23:38 jdbc[3]: Plan       : calculate cost for plan [USERS:-10:org.h2.table.InformationSchemaTable@2abdfbfc]
2020-04-19 18:23:38 jdbc[3]: Plan       :   for table filter USERS:-10:org.h2.table.InformationSchemaTable@2abdfbfc
2020-04-19 18:23:38 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:23:38 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:23:38 jdbc[3]: 
/*SQL #:1*/SELECT * FROM INFORMATION_SCHEMA.USERS ORDER BY NAME;
2020-04-19 18:23:43 database: connecting session #4 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 18:23:43 jdbc[4]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 18:23:43 jdbc[4]: 
/**/Connection conn2 = DriverManager.getConnection("jdbc:h2:./h2_db2", "SA", "");
2020-04-19 18:23:43 jdbc[4]: 
/**/Statement stat2 = conn2.createStatement();
2020-04-19 18:23:43 jdbc[4]: 
/**/Statement stat3 = conn2.createStatement();
2020-04-19 18:23:43 jdbc[4]: 
/**/stat3.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 18:23:43 jdbc[4]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 18:23:43 jdbc[4]: 
/**/ResultSet rs88 = stat3.executeQuery("select oid from pg_catalog.pg_type");
2020-04-19 18:23:43 jdbc[4]: Plan       : calculate cost for plan [PG_TYPE:-1016:org.h2.mode.PgCatalogTable@130e2b12]
2020-04-19 18:23:43 jdbc[4]: Plan       :   for table filter PG_TYPE:-1016:org.h2.mode.PgCatalogTable@130e2b12
2020-04-19 18:23:43 jdbc[4]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:43 jdbc[4]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:23:43 jdbc[4]: Plan       : plan cost 10,001
2020-04-19 18:23:43 jdbc[4]: 
/*SQL #:21*/select oid from pg_catalog.pg_type;
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:23:43 jdbc[4]: 
/**/rs88.close();
2020-04-19 18:23:43 jdbc[4]: 
/**/stat3.close();
2020-04-19 18:23:43 jdbc[4]: 
/**/conn2.getAutoCommit();
2020-04-19 18:23:43 jdbc[4]: 
/**/Statement stat4 = conn2.createStatement();
2020-04-19 18:23:43 jdbc[4]: 
/**/stat4.execute("set DATESTYLE ISO");
2020-04-19 18:23:43 jdbc[4]: 
/*SQL */set DATESTYLE ISO;
2020-04-19 18:23:43 jdbc[4]: 
/**/stat4.getUpdateCount();
2020-04-19 18:23:43 jdbc[4]: 
/**/stat4.close();
2020-04-19 18:23:43 jdbc[4]: 
/**/conn2.getAutoCommit();
2020-04-19 18:23:43 jdbc[4]: 
/**/conn2.close();
2020-04-19 18:23:43 lock: 4 shared read lock unlock SYS 
2020-04-19 18:23:43 database: disconnecting session #4
2020-04-19 18:23:43 database: disconnected session #4
2020-04-19 18:23:58 database: connecting session #5 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 18:23:58 jdbc[5]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 18:23:58 jdbc[5]: 
/**/Connection conn3 = DriverManager.getConnection("jdbc:h2:./h2_db2", "SA", "");
2020-04-19 18:23:58 jdbc[5]: 
/**/Statement stat5 = conn3.createStatement();
2020-04-19 18:23:58 jdbc[5]: 
/**/Statement stat6 = conn3.createStatement();
2020-04-19 18:23:58 jdbc[5]: 
/**/stat6.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 18:23:58 jdbc[5]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 18:23:58 jdbc[5]: 
/**/stat6.close();
2020-04-19 18:23:58 jdbc[5]: 
/**/conn3.getAutoCommit();
2020-04-19 18:23:58 jdbc[5]: 
/**/Statement stat7 = conn3.createStatement();
2020-04-19 18:23:58 jdbc[5]: 
/**/stat7.execute("set DATESTYLE ISO");
2020-04-19 18:23:58 jdbc[5]: 
/*SQL */set DATESTYLE ISO;
2020-04-19 18:23:58 jdbc[5]: 
/**/stat7.getUpdateCount();
2020-04-19 18:23:58 jdbc[5]: 
/**/stat7.close();
2020-04-19 18:23:58 jdbc[5]: 
/**/conn3.getAutoCommit();
2020-04-19 18:23:58 jdbc[5]: 
/**/Statement stat8 = conn3.createStatement();
2020-04-19 18:23:58 jdbc[5]: 
/**/stat8.execute("SELECT DISTINCT datlastsysoid FROM pg_database");
2020-04-19 18:23:58 jdbc[5]: Plan       : calculate cost for plan [PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@21241995]
2020-04-19 18:23:58 jdbc[5]: Plan       :   for table filter PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@21241995
2020-04-19 18:23:58 jdbc[5]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:23:58 jdbc[5]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:23:58 jdbc[5]: Plan       : plan cost 10,001
2020-04-19 18:24:02 jdbc[5]: 
/*SQL #:1 t:4210*/SELECT DISTINCT datlastsysoid FROM pg_database;
2020-04-19 18:24:02 command: slow query: 4,210 ms
2020-04-19 18:24:02 jdbc[5]: 
/**/ResultSet rs92 = stat8.getResultSet();
2020-04-19 18:24:02 jdbc[5]: 
/**/ResultSetMetaData rsMeta0 = rs92.getMetaData();
2020-04-19 18:24:02 jdbc[5]: 
/**/conn3.getCatalog();
2020-04-19 18:24:02 jdbc[5]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 18:24:02 jdbc[5]: 
/**/rsMeta0.getColumnCount();
2020-04-19 18:24:02 jdbc[5]: 
/**/rsMeta0.getColumnName(1);
2020-04-19 18:24:02 jdbc[5]: 
/**/rsMeta0.getColumnType(1);
2020-04-19 18:24:02 jdbc[5]: 
/**/rsMeta0.getColumnDisplaySize(1);
2020-04-19 18:24:02 jdbc[5]: 
/**/rs92.next();
2020-04-19 18:24:02 jdbc[5]: 
/**/ResultSetMetaData rsMeta1 = rs92.getMetaData();
2020-04-19 18:24:02 jdbc[5]: 
/**/conn3.getCatalog();
2020-04-19 18:24:02 jdbc[5]: 
/**/rsMeta1.getColumnCount();
2020-04-19 18:24:02 jdbc[5]: 
/**/rsMeta1.getColumnType(1);
2020-04-19 18:24:02 jdbc[5]: 
/**/rs92.next();
2020-04-19 18:24:02 jdbc[5]: 
/**/stat8.close();
2020-04-19 18:24:02 jdbc[5]: 
/**/conn3.getAutoCommit();
2020-04-19 18:24:02 jdbc[5]: 
/**/Statement stat9 = conn3.createStatement();
2020-04-19 18:24:02 jdbc[5]: 
/**/stat9.execute("SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid");
2020-04-19 18:24:02 jdbc[5]: Plan       : calculate cost for plan [D, T]
2020-04-19 18:24:02 jdbc[5]: Plan       :   for table filter D
2020-04-19 18:24:02 jdbc[5]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:24:02 jdbc[5]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:24:02 jdbc[5]: Plan       :   best plan item cost 99,510,000 index meta
2020-04-19 18:24:02 jdbc[5]: Plan       :   for table filter T
2020-04-19 18:24:02 jdbc[5]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:24:02 jdbc[5]: Plan       :   best plan item cost 9,950 index meta
2020-04-19 18:24:02 jdbc[5]: Plan       : plan cost 990,224,019,951
2020-04-19 18:24:32 jdbc[5]: 
/*SQL #:1 t:30218*/SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid;
2020-04-19 18:24:32 command: slow query: 30,218 ms
2020-04-19 18:24:32 jdbc[5]: 
/**/ResultSet rs93 = stat9.getResultSet();
2020-04-19 18:24:32 jdbc[5]: 
/**/ResultSetMetaData rsMeta2 = rs93.getMetaData();
2020-04-19 18:24:32 jdbc[5]: 
/**/conn3.getCatalog();
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnCount();
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnName(1);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnType(1);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnDisplaySize(1);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnName(2);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnType(2);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnDisplaySize(2);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnName(3);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnType(3);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnDisplaySize(3);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnName(4);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnType(4);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnDisplaySize(4);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnName(5);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnType(5);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnDisplaySize(5);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnName(6);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnType(6);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnDisplaySize(6);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnName(7);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnType(7);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnDisplaySize(7);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnName(8);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnType(8);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnDisplaySize(8);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnName(9);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnType(9);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta2.getColumnDisplaySize(9);
2020-04-19 18:24:32 jdbc[5]: 
/**/rs93.next();
2020-04-19 18:24:32 jdbc[5]: 
/**/ResultSetMetaData rsMeta3 = rs93.getMetaData();
2020-04-19 18:24:32 jdbc[5]: 
/**/conn3.getCatalog();
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta3.getColumnCount();
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta3.getColumnType(1);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta3.getColumnType(2);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta3.getColumnType(3);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta3.getColumnType(4);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta3.getColumnType(5);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta3.getColumnType(6);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta3.getColumnType(7);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta3.getColumnType(8);
2020-04-19 18:24:32 jdbc[5]: 
/**/rsMeta3.getColumnType(9);
2020-04-19 18:24:32 jdbc[5]: 
/**/rs93.next();
2020-04-19 18:24:32 jdbc[5]: 
/**/stat9.close();
2020-04-19 18:24:32 jdbc[5]: 
/**/conn3.getAutoCommit();
2020-04-19 18:24:35 jdbc[5]: 
/**/conn3.close();
2020-04-19 18:24:35 lock: 5 shared read lock unlock SYS 
2020-04-19 18:24:35 database: disconnecting session #5
2020-04-19 18:24:35 database: disconnected session #5
2020-04-19 18:24:35 database: connecting session #6 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 18:24:35 jdbc[6]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 18:24:35 jdbc[6]: 
/**/Connection conn4 = DriverManager.getConnection("jdbc:h2:./H2_DB2", "SA", "");
2020-04-19 18:24:35 jdbc[6]: 
/**/Statement stat10 = conn4.createStatement();
2020-04-19 18:24:35 jdbc[6]: 
/**/Statement stat11 = conn4.createStatement();
2020-04-19 18:24:35 jdbc[6]: 
/**/stat11.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 18:24:35 jdbc[6]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 18:24:35 jdbc[6]: 
/**/stat11.close();
2020-04-19 18:24:35 jdbc[6]: 
/**/conn4.getAutoCommit();
2020-04-19 18:24:35 jdbc[6]: 
/**/Statement stat12 = conn4.createStatement();
2020-04-19 18:24:35 jdbc[6]: 
/**/stat12.execute("set DATESTYLE ISO");
2020-04-19 18:24:35 jdbc[6]: 
/*SQL */set DATESTYLE ISO;
2020-04-19 18:24:35 jdbc[6]: 
/**/stat12.getUpdateCount();
2020-04-19 18:24:35 jdbc[6]: 
/**/stat12.close();
2020-04-19 18:24:35 jdbc[6]: 
/**/conn4.getAutoCommit();
2020-04-19 18:24:35 jdbc[6]: 
/**/Statement stat13 = conn4.createStatement();
2020-04-19 18:24:35 jdbc[6]: 
/**/stat13.execute("SELECT oid, nspname AS schemaname, nspacl, pg_get_userbyid(nspowner) AS schemaowner, obj_description(oid) AS description FROM pg_namespace");
2020-04-19 18:24:35 jdbc[6]: Plan       : calculate cost for plan [PG_NAMESPACE:-1010:org.h2.mode.PgCatalogTable@1227eaa8]
2020-04-19 18:24:35 jdbc[6]: Plan       :   for table filter PG_NAMESPACE:-1010:org.h2.mode.PgCatalogTable@1227eaa8
2020-04-19 18:24:35 jdbc[6]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:24:35 jdbc[6]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:24:35 jdbc[6]: Plan       : plan cost 10,001
2020-04-19 18:24:35 jdbc[6]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "SA"; SQL statement:
SELECT oid, nspname AS schemaname, nspacl, pg_get_userbyid(nspowner) AS schemaowner, obj_description(oid) AS description FROM pg_namespace [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:463)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:189)
	at org.h2.value.Value.convertToInt(Value.java:1279)
	at org.h2.value.Value.getInt(Value.java:763)
	at org.h2.mode.FunctionsPostgreSQL.getValueWithArgs(FunctionsPostgreSQL.java:211)
	at org.h2.expression.function.Function.getValue(Function.java:558)
	at org.h2.expression.Alias.getValue(Alias.java:37)
	at org.h2.command.query.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1840)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:104)
	at org.h2.result.LazyResult.next(LazyResult.java:63)
	at org.h2.command.query.Select.queryFlat(Select.java:721)
	at org.h2.command.query.Select.queryWithoutCache(Select.java:827)
	at org.h2.command.query.Query.queryWithoutCacheLazyCheck(Query.java:196)
	at org.h2.command.query.Query.query(Query.java:481)
	at org.h2.command.query.Query.query(Query.java:444)
	at org.h2.command.CommandContainer.query(CommandContainer.java:262)
	at org.h2.command.Command.executeQuery(Command.java:189)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:222)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NumberFormatException: For input string: "SA"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.parseInt(Integer.java:615)
	at org.h2.value.Value.convertToInt(Value.java:1277)
	... 19 more
2020-04-19 18:24:35 jdbc[6]: 
/**/stat13.close();
2020-04-19 18:24:35 jdbc[6]: 
/**/conn4.getAutoCommit();
2020-04-19 18:26:04 jdbc[3]: Plan       : calculate cost for plan [PG_NAMESPACE:-1010:org.h2.mode.PgCatalogTable@1227eaa8]
2020-04-19 18:26:04 jdbc[3]: Plan       :   for table filter PG_NAMESPACE:-1010:org.h2.mode.PgCatalogTable@1227eaa8
2020-04-19 18:26:04 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:26:04 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:26:04 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:27:06 jdbc[3]: Plan       : calculate cost for plan [PG_NAMESPACE:-1010:org.h2.mode.PgCatalogTable@1227eaa8]
2020-04-19 18:27:06 jdbc[3]: Plan       :   for table filter PG_NAMESPACE:-1010:org.h2.mode.PgCatalogTable@1227eaa8
2020-04-19 18:27:06 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:27:06 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:27:06 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:28:42 command: slow query: 96,812 ms
2020-04-19 18:29:01 jdbc[3]: Plan       : calculate cost for plan [PG_NAMESPACE:-1010:org.h2.mode.PgCatalogTable@1227eaa8]
2020-04-19 18:29:01 jdbc[3]: Plan       :   for table filter PG_NAMESPACE:-1010:org.h2.mode.PgCatalogTable@1227eaa8
2020-04-19 18:29:01 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:29:01 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:29:01 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:32:12 command: slow query: 191,087 ms
2020-04-19 18:32:48 jdbc[3]: Plan       : calculate cost for plan [PG_NAMESPACE:-1010:org.h2.mode.PgCatalogTable@1227eaa8]
2020-04-19 18:32:48 jdbc[3]: Plan       :   for table filter PG_NAMESPACE:-1010:org.h2.mode.PgCatalogTable@1227eaa8
2020-04-19 18:32:48 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:32:48 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:32:48 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:33:45 command: slow query: 57,205 ms
2020-04-19 18:33:50 jdbc[3]: Plan       : calculate cost for plan [PG_NAMESPACE:-1010:org.h2.mode.PgCatalogTable@1227eaa8]
2020-04-19 18:33:50 jdbc[3]: Plan       :   for table filter PG_NAMESPACE:-1010:org.h2.mode.PgCatalogTable@1227eaa8
2020-04-19 18:33:50 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:33:50 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:33:50 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:35:14 command: slow query: 83,754 ms
2020-04-19 18:35:14 database: closing D:/JAVA_WorkSpace/h2database/h2_db2 from shutdown hook
2020-04-19 18:35:14 lock: 3 shared read lock unlock SYS 
2020-04-19 18:35:14 database: disconnecting session #3
2020-04-19 18:35:14 database: disconnected session #3
2020-04-19 18:35:14 lock: 6 shared read lock unlock SYS 
2020-04-19 18:35:14 database: disconnecting session #6
2020-04-19 18:35:14 database: disconnected session #6
2020-04-19 18:35:14 database: closing D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 18:35:14 lock: 1 shared read lock unlock SYS 
2020-04-19 18:35:14 lock: 2 shared read lock unlock SYS 
2020-04-19 18:35:14 database: closed
2020-04-19 18:53:24 database: opening D:/JAVA_WorkSpace/h2database/h2_db2 (build 200)
2020-04-19 18:53:24 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:53:24 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:53:24 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:53:24 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:53:24 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:53:24 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:53:24 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:53:24 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:53:24 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:53:24 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:53:24 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:53:24 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:53:24 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:53:24 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:53:24 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:53:24 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:53:24 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:53:24 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:53:24 database: opened D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 18:53:24 database: connecting session #3 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 18:53:24 jdbc[3]: 
/*SQL */SET TRACE_LEVEL_SYSTEM_OUT 3;
2020-04-19 18:53:24 jdbc[3]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2020-04-19 18:53:24 jdbc[3]: Plan       : calculate cost for plan [SETTINGS:-7:org.h2.table.InformationSchemaTable@4da7641e]
2020-04-19 18:53:24 jdbc[3]: Plan       :   for table filter SETTINGS:-7:org.h2.table.InformationSchemaTable@4da7641e
2020-04-19 18:53:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:24 jdbc[3]: Plan       :   best plan item cost 9,900 index meta
2020-04-19 18:53:24 jdbc[3]: Plan       : plan cost 9,901
2020-04-19 18:53:29 jdbc[3]: 
/*SQL l:77 #:2 t:5702*/SELECT NAME, `VALUE` FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?) {1: 'MODE', 2: 'TIME ZONE', 3: 'JAVA_OBJECT_SERIALIZER'};
2020-04-19 18:53:29 command: slow query: 5,709 ms
2020-04-19 18:53:32 jdbc[3]: 
/*SQL l:77 #:3 t:3*/SELECT NAME, `VALUE` FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?) {1: 'DATABASE_TO_UPPER', 2: 'DATABASE_TO_LOWER', 3: 'CASE_INSENSITIVE_IDENTIFIERS'};
2020-04-19 18:53:32 jdbc[3]: Plan       : calculate cost for plan [SCHEMATA:-14:org.h2.table.InformationSchemaTable@1ff34bc1]
2020-04-19 18:53:32 jdbc[3]: Plan       :   for table filter SCHEMATA:-14:org.h2.table.InformationSchemaTable@1ff34bc1
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:53:32 jdbc[3]: 
/*SQL #:3*/SELECT SCHEMA_NAME TABLE_SCHEM, CATALOG_NAME TABLE_CATALOG,  IS_DEFAULT FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME;
2020-04-19 18:53:32 jdbc[3]: Plan       : calculate cost for plan [SCHEMATA:-14:org.h2.table.InformationSchemaTable@1ff34bc1]
2020-04-19 18:53:32 jdbc[3]: Plan       :   for table filter SCHEMATA:-14:org.h2.table.InformationSchemaTable@1ff34bc1
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:53:32 jdbc[3]: 
/*SQL #:3*/SELECT SCHEMA_NAME TABLE_SCHEM, CATALOG_NAME TABLE_CATALOG,  IS_DEFAULT FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME;
2020-04-19 18:53:32 jdbc[3]: Plan       : calculate cost for plan [_0]
2020-04-19 18:53:32 jdbc[3]: Plan       :   for table filter _0
2020-04-19 18:53:32 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb]
2020-04-19 18:53:32 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:53:32 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3]
2020-04-19 18:53:32 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:53:32 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb]
2020-04-19 18:53:32 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:53:32 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3]
2020-04-19 18:53:32 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:53:32 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb]
2020-04-19 18:53:32 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:53:32 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3]
2020-04-19 18:53:32 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:53:32 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 18:53:32 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 18:53:32 jdbc[3]: Plan       : calculate cost for plan [_1]
2020-04-19 18:53:32 jdbc[3]: Plan       :   for table filter _1
2020-04-19 18:53:32 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb]
2020-04-19 18:53:32 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:53:32 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3]
2020-04-19 18:53:32 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:53:32 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb]
2020-04-19 18:53:32 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:53:32 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3]
2020-04-19 18:53:32 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:53:32 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb]
2020-04-19 18:53:32 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:53:32 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3]
2020-04-19 18:53:32 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:53:32 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 18:53:32 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 18:53:32 jdbc[3]: 
/*SQL l:1007 #:35 t:41*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'INFORMATION_SCHEMA', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 18:53:32 jdbc[3]: Plan       : calculate cost for plan [COLUMNS:-2:org.h2.table.InformationSchemaTable@5085cada]
2020-04-19 18:53:32 jdbc[3]: Plan       :   for table filter COLUMNS:-2:org.h2.table.InformationSchemaTable@5085cada
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:32 jdbc[3]: Table      :     potential plan item cost 28 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       :   best plan item cost 27.44 index meta
2020-04-19 18:53:32 jdbc[3]: Plan       : plan cost 28.44
2020-04-19 18:53:32 jdbc[3]: 
/*SQL l:123 #:1 t:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CATALOGS'};
2020-04-19 18:53:32 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CHECK_CONSTRAINTS'};
2020-04-19 18:53:32 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLLATIONS'};
2020-04-19 18:53:32 jdbc[3]: 
/*SQL l:123 #:33 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLUMNS'};
2020-04-19 18:53:32 jdbc[3]: 
/*SQL l:123 #:8*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLUMN_PRIVILEGES'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CONSTANTS'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CONSTRAINT_COLUMN_USAGE'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CROSS_REFERENCES'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:16*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'DOMAINS'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:11*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'DOMAIN_CONSTRAINTS'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'FUNCTION_ALIASES'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:17*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'FUNCTION_COLUMNS'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'HELP'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:21*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'INDEXES'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'IN_DOUBT'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'KEY_COLUMN_USAGE'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'LOCKS'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'QUERY_STATISTICS'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'REFERENTIAL_CONSTRAINTS'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'RIGHTS'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'ROLES'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:8*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SCHEMATA'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:17*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SEQUENCES'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SESSIONS'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SESSION_STATE'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SETTINGS'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SYNONYMS'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLES'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_CONSTRAINTS'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_PRIVILEGES'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_TYPES'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TRIGGERS'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TYPE_INFO'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'USERS'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'VIEWS'};
2020-04-19 18:53:33 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3b7e2062]
2020-04-19 18:53:33 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3b7e2062
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:53:33 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3b7e2062]
2020-04-19 18:53:33 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3b7e2062
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       :   best plan item cost 9,800 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       : plan cost 9,801
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:438 #:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'INFORMATION_SCHEMA', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 18:53:33 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@6e8ce1a7]
2020-04-19 18:53:33 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@6e8ce1a7
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:53:33 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@6e8ce1a7]
2020-04-19 18:53:33 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@6e8ce1a7
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       :   best plan item cost 9,600 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       : plan cost 9,601
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:596 #:3 t:2*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'INFORMATION_SCHEMA', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 18:53:33 jdbc[3]: Plan       : calculate cost for plan [_2]
2020-04-19 18:53:33 jdbc[3]: Plan       :   for table filter _2
2020-04-19 18:53:33 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb]
2020-04-19 18:53:33 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:53:33 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3]
2020-04-19 18:53:33 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:53:33 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb]
2020-04-19 18:53:33 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:53:33 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3]
2020-04-19 18:53:33 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:53:33 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb]
2020-04-19 18:53:33 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:53:33 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3]
2020-04-19 18:53:33 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:53:33 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 18:53:33 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:1007 #:18 t:3*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'PG_CATALOG', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_AM'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ATTRDEF'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:10*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ATTRIBUTE'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_AUTHID'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:13*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_CLASS'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:10*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_DATABASE'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_DESCRIPTION'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_GROUP'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_INDEX'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_INHERITS'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_NAMESPACE'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_PROC'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ROLES'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_SETTINGS'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TABLESPACE'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TRIGGER'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TYPE'};
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_USER'};
2020-04-19 18:53:33 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3b7e2062]
2020-04-19 18:53:33 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3b7e2062
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       :   best plan item cost 9,800 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       : plan cost 9,801
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:438 #:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 18:53:33 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@6e8ce1a7]
2020-04-19 18:53:33 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@6e8ce1a7
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       :   best plan item cost 9,600 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       : plan cost 9,601
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:596 #:3*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'PG_CATALOG', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 18:53:33 jdbc[3]: Plan       : calculate cost for plan [_3]
2020-04-19 18:53:33 jdbc[3]: Plan       :   for table filter _3
2020-04-19 18:53:33 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb]
2020-04-19 18:53:33 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:53:33 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3]
2020-04-19 18:53:33 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:53:33 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb]
2020-04-19 18:53:33 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:53:33 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3]
2020-04-19 18:53:33 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:53:33 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb]
2020-04-19 18:53:33 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@577158cb
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:53:33 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3]
2020-04-19 18:53:33 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@41cb5bc3
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:33 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:53:33 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:53:33 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 18:53:33 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 18:53:33 jdbc[3]: 
/*SQL l:1007 t:1*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'PUBLIC', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 18:53:34 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3b7e2062]
2020-04-19 18:53:34 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3b7e2062
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       :   best plan item cost 9,900 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       : plan cost 9,901
2020-04-19 18:53:34 jdbc[3]: 
/*SQL l:438 #:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'PUBLIC', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 18:53:34 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@6e8ce1a7]
2020-04-19 18:53:34 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@6e8ce1a7
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       :   best plan item cost 9,700 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       : plan cost 9,701
2020-04-19 18:53:34 jdbc[3]: 
/*SQL l:596 #:3*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'PUBLIC', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 18:53:34 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375]
2020-04-19 18:53:34 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       :   best plan item cost 324.72 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       : plan cost 325.72
2020-04-19 18:53:34 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375]
2020-04-19 18:53:34 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:53:34 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_AM'};
2020-04-19 18:53:34 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375]
2020-04-19 18:53:34 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:53:34 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ATTRDEF'};
2020-04-19 18:53:34 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375]
2020-04-19 18:53:34 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:53:34 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ATTRIBUTE'};
2020-04-19 18:53:34 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375]
2020-04-19 18:53:34 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:53:34 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_AUTHID'};
2020-04-19 18:53:34 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375]
2020-04-19 18:53:34 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:53:34 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_CLASS'};
2020-04-19 18:53:34 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375]
2020-04-19 18:53:34 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:53:34 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_DATABASE'};
2020-04-19 18:53:34 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375]
2020-04-19 18:53:34 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:53:34 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_DESCRIPTION'};
2020-04-19 18:53:34 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375]
2020-04-19 18:53:34 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:53:34 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_GROUP'};
2020-04-19 18:53:34 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375]
2020-04-19 18:53:34 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:53:34 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_INDEX'};
2020-04-19 18:53:34 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375]
2020-04-19 18:53:34 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:53:34 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_INHERITS'};
2020-04-19 18:53:34 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375]
2020-04-19 18:53:34 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:53:34 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_NAMESPACE'};
2020-04-19 18:53:34 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375]
2020-04-19 18:53:34 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:53:34 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_PROC'};
2020-04-19 18:53:34 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375]
2020-04-19 18:53:34 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:53:34 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ROLES'};
2020-04-19 18:53:34 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375]
2020-04-19 18:53:34 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:53:34 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_SETTINGS'};
2020-04-19 18:53:34 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375]
2020-04-19 18:53:34 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:53:34 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TABLESPACE'};
2020-04-19 18:53:34 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375]
2020-04-19 18:53:34 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:53:34 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TRIGGER'};
2020-04-19 18:53:34 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375]
2020-04-19 18:53:34 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:53:34 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TYPE'};
2020-04-19 18:53:34 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375]
2020-04-19 18:53:34 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@1f5dc375
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:53:34 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_USER'};
2020-04-19 18:53:34 jdbc[3]: Plan       : calculate cost for plan [SEQUENCES:-9:org.h2.table.InformationSchemaTable@16d598e0]
2020-04-19 18:53:34 jdbc[3]: Plan       :   for table filter SEQUENCES:-9:org.h2.table.InformationSchemaTable@16d598e0
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:53:34 jdbc[3]: 
/*SQL */SELECT * FROM INFORMATION_SCHEMA.SEQUENCES ORDER BY SEQUENCE_NAME;
2020-04-19 18:53:34 jdbc[3]: Plan       : calculate cost for plan [USERS:-10:org.h2.table.InformationSchemaTable@74244d0]
2020-04-19 18:53:34 jdbc[3]: Plan       :   for table filter USERS:-10:org.h2.table.InformationSchemaTable@74244d0
2020-04-19 18:53:34 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:53:34 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:53:34 jdbc[3]: 
/*SQL #:1*/SELECT * FROM INFORMATION_SCHEMA.USERS ORDER BY NAME;
2020-04-19 18:53:37 database: connecting session #4 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 18:53:37 jdbc[4]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 18:53:37 jdbc[4]: 
/**/Connection conn2 = DriverManager.getConnection("jdbc:h2:./H2_DB2", "SA", "");
2020-04-19 18:53:37 jdbc[4]: 
/**/Statement stat2 = conn2.createStatement();
2020-04-19 18:53:37 jdbc[4]: 
/**/Statement stat3 = conn2.createStatement();
2020-04-19 18:53:37 jdbc[4]: 
/**/stat3.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 18:53:37 jdbc[4]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 18:53:37 jdbc[4]: 
/**/ResultSet rs88 = stat3.executeQuery("select oid from pg_catalog.pg_type");
2020-04-19 18:53:37 jdbc[4]: Plan       : calculate cost for plan [PG_TYPE:-1016:org.h2.mode.PgCatalogTable@4d2dc0af]
2020-04-19 18:53:37 jdbc[4]: Plan       :   for table filter PG_TYPE:-1016:org.h2.mode.PgCatalogTable@4d2dc0af
2020-04-19 18:53:37 jdbc[4]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:37 jdbc[4]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:53:37 jdbc[4]: Plan       : plan cost 10,001
2020-04-19 18:53:37 jdbc[4]: 
/*SQL #:21*/select oid from pg_catalog.pg_type;
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/rs88.close();
2020-04-19 18:53:37 jdbc[4]: 
/**/stat3.close();
2020-04-19 18:53:37 jdbc[4]: 
/**/conn2.getAutoCommit();
2020-04-19 18:53:37 jdbc[4]: 
/**/Statement stat4 = conn2.createStatement();
2020-04-19 18:53:37 jdbc[4]: 
/**/stat4.execute("set DATESTYLE ISO");
2020-04-19 18:53:37 jdbc[4]: 
/*SQL */set DATESTYLE ISO;
2020-04-19 18:53:37 jdbc[4]: 
/**/stat4.getUpdateCount();
2020-04-19 18:53:37 jdbc[4]: 
/**/stat4.close();
2020-04-19 18:53:37 jdbc[4]: 
/**/conn2.getAutoCommit();
2020-04-19 18:53:37 jdbc[4]: 
/**/Statement stat5 = conn2.createStatement();
2020-04-19 18:53:37 jdbc[4]: 
/**/stat5.execute("SELECT oid, nspname AS schemaname, nspacl, pg_get_userbyid(nspowner) AS schemaowner, obj_description(oid) AS description FROM pg_namespace");
2020-04-19 18:53:37 jdbc[4]: Plan       : calculate cost for plan [PG_NAMESPACE:-1010:org.h2.mode.PgCatalogTable@130e2b12]
2020-04-19 18:53:37 jdbc[4]: Plan       :   for table filter PG_NAMESPACE:-1010:org.h2.mode.PgCatalogTable@130e2b12
2020-04-19 18:53:37 jdbc[4]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:53:37 jdbc[4]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:53:37 jdbc[4]: Plan       : plan cost 10,001
2020-04-19 18:53:37 jdbc[4]: 
/*SQL #:3*/SELECT oid, nspname AS schemaname, nspacl, pg_get_userbyid(nspowner) AS schemaowner, obj_description(oid) AS description FROM pg_namespace;
2020-04-19 18:53:37 jdbc[4]: 
/**/ResultSet rs90 = stat5.getResultSet();
2020-04-19 18:53:37 jdbc[4]: 
/**/ResultSetMetaData rsMeta0 = rs90.getMetaData();
2020-04-19 18:53:37 jdbc[4]: 
/**/conn2.getCatalog();
2020-04-19 18:53:37 jdbc[4]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta0.getColumnCount();
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta0.getColumnName(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta0.getColumnType(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta0.getColumnDisplaySize(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta0.getColumnName(2);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta0.getColumnType(2);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta0.getColumnDisplaySize(2);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta0.getColumnName(3);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta0.getColumnType(3);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta0.getColumnDisplaySize(3);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta0.getColumnName(4);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta0.getColumnType(4);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta0.getColumnDisplaySize(4);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta0.getColumnName(5);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta0.getColumnType(5);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta0.getColumnDisplaySize(5);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs90.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/ResultSetMetaData rsMeta1 = rs90.getMetaData();
2020-04-19 18:53:37 jdbc[4]: 
/**/conn2.getCatalog();
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta1.getColumnCount();
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta1.getColumnType(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta1.getColumnType(2);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta1.getColumnType(3);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta1.getColumnType(4);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta1.getColumnType(5);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs90.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/ResultSetMetaData rsMeta2 = rs90.getMetaData();
2020-04-19 18:53:37 jdbc[4]: 
/**/conn2.getCatalog();
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta2.getColumnCount();
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta2.getColumnType(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta2.getColumnType(2);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta2.getColumnType(3);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta2.getColumnType(4);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta2.getColumnType(5);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs90.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/ResultSetMetaData rsMeta3 = rs90.getMetaData();
2020-04-19 18:53:37 jdbc[4]: 
/**/conn2.getCatalog();
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta3.getColumnCount();
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta3.getColumnType(1);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta3.getColumnType(2);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta3.getColumnType(3);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta3.getColumnType(4);
2020-04-19 18:53:37 jdbc[4]: 
/**/rsMeta3.getColumnType(5);
2020-04-19 18:53:37 jdbc[4]: 
/**/rs90.next();
2020-04-19 18:53:37 jdbc[4]: 
/**/stat5.close();
2020-04-19 18:53:37 jdbc[4]: 
/**/conn2.getAutoCommit();
2020-04-19 18:53:37 jdbc[4]: 
/**/Statement stat6 = conn2.createStatement();
2020-04-19 18:53:37 jdbc[4]: 
/**/stat6.execute("SELECT COUNT(*) FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace WHERE c.relkind = ANY ('{r,v,m}'::char[]) UNION SELECT COUNT(*) FROM pg_attribute a JOIN pg_class c on a.attrelid = c.oid JOIN pg_namespace n on c.relnamespace = n.oid JOIN pg_type tp on tp.typelem = a.atttypid WHERE a.attnum > 0 UNION SELECT COUNT(*) FROM information_schema.routines ");
2020-04-19 18:53:37 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT COUNT(*) FROM PG_CLASS C LEFT JOIN PG_NAMESPACE N ON N.OID = C.RELNAMESPACE WHERE C.RELKIND = ANY ('{r,v,m}'::CHAR[[*]]) UNION SELECT COUNT(*) FROM PG_ATTRIBUTE A JOIN PG_CLASS C ON A.ATTRELID = C.OID JOIN PG_NAMESPACE N ON C.RELNAMESPACE = N.OID JOIN PG_TYPE TP ON TP.TYPELEM = A.ATTTYPID WHERE A.ATTNUM > 0 UNION SELECT COUNT(*) FROM INFORMATION_SCHEMA.ROUTINES "; expected "VARYING, LARGE, (, ARRAY, AT, FORMAT, *, /, %, +, -, ||, NOT, ILIKE, REGEXP, AND, OR, )"; SQL statement:
SELECT COUNT(*) FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace WHERE c.relkind = ANY ('{r,v,m}'::char[]) UNION SELECT COUNT(*) FROM pg_attribute a JOIN pg_class c on a.attrelid = c.oid JOIN pg_namespace n on c.relnamespace = n.oid JOIN pg_type tp on tp.typelem = a.atttypid WHERE a.attnum > 0 UNION SELECT COUNT(*) FROM information_schema.routines  [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:459)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.getSyntaxError(DbException.java:238)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1176)
	at org.h2.command.Parser.read(Parser.java:5558)
	at org.h2.command.Parser.readAggregate(Parser.java:3721)
	at org.h2.command.Parser.readFunction(Parser.java:3974)
	at org.h2.command.Parser.readTerm(Parser.java:5003)
	at org.h2.command.Parser.readFactor(Parser.java:3564)
	at org.h2.command.Parser.readSum(Parser.java:3551)
	at org.h2.command.Parser.readConcat(Parser.java:3529)
	at org.h2.command.Parser.readComparison(Parser.java:3520)
	at org.h2.command.Parser.readCondition(Parser.java:3373)
	at org.h2.command.Parser.readExpressionWithGlobalConditions(Parser.java:3229)
	at org.h2.command.Parser.parseSelect(Parser.java:3098)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2958)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2793)
	at org.h2.command.Parser.parseQuery(Parser.java:2763)
	at org.h2.command.Parser.parsePrepared(Parser.java:986)
	at org.h2.command.Parser.parse(Parser.java:961)
	at org.h2.command.Parser.parse(Parser.java:937)
	at org.h2.command.Parser.prepareCommand(Parser.java:861)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-19 18:53:37 jdbc[4]: 
/**/stat6.close();
2020-04-19 18:53:37 jdbc[4]: 
/**/conn2.getAutoCommit();
2020-04-19 18:53:37 jdbc[4]: 
/**/Statement stat7 = conn2.createStatement();
2020-04-19 18:53:37 jdbc[4]: 
/**/stat7.execute(" SELECT n.nspname, c.relname, c.relkind FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace WHERE c.relkind = ANY ('{r,v,m}'::char[])  ORDER BY n.nspname, c.relname");
2020-04-19 18:53:37 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement " SELECT N.NSPNAME, C.RELNAME, C.RELKIND FROM PG_CLASS C LEFT JOIN PG_NAMESPACE N ON N.OID = C.RELNAMESPACE WHERE C.RELKIND = ANY ('{r,v,m}'::CHAR[[*]])  ORDER BY N.NSPNAME, C.RELNAME"; expected "VARYING, LARGE, (, ARRAY, AT, FORMAT, *, /, %, +, -, ||, NOT, ILIKE, REGEXP, AND, OR, )"; SQL statement:
 SELECT n.nspname, c.relname, c.relkind FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace WHERE c.relkind = ANY ('{r,v,m}'::char[])  ORDER BY n.nspname, c.relname [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:459)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.getSyntaxError(DbException.java:238)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1176)
	at org.h2.command.Parser.read(Parser.java:5558)
	at org.h2.command.Parser.readAggregate(Parser.java:3721)
	at org.h2.command.Parser.readFunction(Parser.java:3974)
	at org.h2.command.Parser.readTerm(Parser.java:5003)
	at org.h2.command.Parser.readFactor(Parser.java:3564)
	at org.h2.command.Parser.readSum(Parser.java:3551)
	at org.h2.command.Parser.readConcat(Parser.java:3529)
	at org.h2.command.Parser.readComparison(Parser.java:3520)
	at org.h2.command.Parser.readCondition(Parser.java:3373)
	at org.h2.command.Parser.readExpressionWithGlobalConditions(Parser.java:3229)
	at org.h2.command.Parser.parseSelect(Parser.java:3098)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2958)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2793)
	at org.h2.command.Parser.parseQuery(Parser.java:2763)
	at org.h2.command.Parser.parsePrepared(Parser.java:986)
	at org.h2.command.Parser.parse(Parser.java:961)
	at org.h2.command.Parser.parse(Parser.java:937)
	at org.h2.command.Parser.prepareCommand(Parser.java:861)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-19 18:53:37 jdbc[4]: 
/**/stat7.close();
2020-04-19 18:53:37 jdbc[4]: 
/**/conn2.getAutoCommit();
2020-04-19 18:53:37 jdbc[4]: 
/**/Statement stat8 = conn2.createStatement();
2020-04-19 18:53:37 jdbc[4]: 
/**/stat8.execute("SELECT n.nspname, c.relname, a.attname, tp.typname FROM pg_attribute a JOIN pg_class c on a.attrelid = c.oid JOIN pg_namespace n on c.relnamespace = n.oid JOIN pg_type tp on tp.typelem = a.atttypid WHERE a.attnum > 0 ORDER BY nspname, relname");
2020-04-19 18:53:37 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "TP.TYPELEM" not found; SQL statement:
SELECT n.nspname, c.relname, a.attname, tp.typname FROM pg_attribute a JOIN pg_class c on a.attrelid = c.oid JOIN pg_namespace n on c.relnamespace = n.oid JOIN pg_type tp on tp.typelem = a.atttypid WHERE a.attnum > 0 ORDER BY nspname, relname [42122-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:459)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:200)
	at org.h2.message.DbException.get(DbException.java:176)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:163)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:145)
	at org.h2.expression.condition.Comparison.optimize(Comparison.java:185)
	at org.h2.expression.condition.ConditionAndOr.optimize(ConditionAndOr.java:139)
	at org.h2.expression.condition.ConditionAndOr.optimize(ConditionAndOr.java:140)
	at org.h2.command.query.Select.prepare(Select.java:1177)
	at org.h2.command.Parser.prepareCommand(Parser.java:867)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-19 18:53:37 jdbc[4]: 
/**/stat8.close();
2020-04-19 18:53:37 jdbc[4]: 
/**/conn2.getAutoCommit();
2020-04-19 18:53:37 jdbc[4]: 
/**/Statement stat9 = conn2.createStatement();
2020-04-19 18:53:37 jdbc[4]: 
/**/stat9.execute("SELECT r.routine_schema, r.routine_name FROM information_schema.routines r LEFT JOIN information_schema.parameters p ON r.specific_name = p.specific_name  GROUP BY p.specific_name, r.routine_schema, r.routine_name ORDER BY r.routine_schema");
2020-04-19 18:53:37 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ROUTINES" not found; SQL statement:
SELECT r.routine_schema, r.routine_name FROM information_schema.routines r LEFT JOIN information_schema.parameters p ON r.specific_name = p.specific_name  GROUP BY p.specific_name, r.routine_schema, r.routine_name ORDER BY r.routine_schema [42102-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:459)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:200)
	at org.h2.message.DbException.get(DbException.java:176)
	at org.h2.command.Parser.readTableOrView(Parser.java:8558)
	at org.h2.command.Parser.readTableFilter(Parser.java:2075)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2968)
	at org.h2.command.Parser.parseSelect(Parser.java:3095)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2958)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2793)
	at org.h2.command.Parser.parseQuery(Parser.java:2763)
	at org.h2.command.Parser.parsePrepared(Parser.java:986)
	at org.h2.command.Parser.parse(Parser.java:961)
	at org.h2.command.Parser.parse(Parser.java:933)
	at org.h2.command.Parser.prepareCommand(Parser.java:861)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-19 18:53:37 jdbc[4]: 
/**/stat9.close();
2020-04-19 18:53:37 jdbc[4]: 
/**/conn2.getAutoCommit();
2020-04-19 18:54:05 jdbc[4]: 
/**/conn2.close();
2020-04-19 18:54:05 lock: 4 shared read lock unlock SYS 
2020-04-19 18:54:05 database: disconnecting session #4
2020-04-19 18:54:05 database: disconnected session #4
2020-04-19 18:54:06 database: connecting session #5 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 18:54:06 jdbc[5]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 18:54:06 jdbc[5]: 
/**/Connection conn3 = DriverManager.getConnection("jdbc:h2:./h2_db2", "SA", "");
2020-04-19 18:54:06 jdbc[5]: 
/**/Statement stat10 = conn3.createStatement();
2020-04-19 18:54:06 jdbc[5]: 
/**/Statement stat11 = conn3.createStatement();
2020-04-19 18:54:06 jdbc[5]: 
/**/stat11.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 18:54:06 jdbc[5]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 18:54:06 jdbc[5]: 
/**/stat11.close();
2020-04-19 18:54:06 jdbc[5]: 
/**/conn3.getAutoCommit();
2020-04-19 18:54:06 jdbc[5]: 
/**/Statement stat12 = conn3.createStatement();
2020-04-19 18:54:06 jdbc[5]: 
/**/stat12.execute("set DATESTYLE ISO");
2020-04-19 18:54:06 jdbc[5]: 
/*SQL */set DATESTYLE ISO;
2020-04-19 18:54:06 jdbc[5]: 
/**/stat12.getUpdateCount();
2020-04-19 18:54:06 jdbc[5]: 
/**/stat12.close();
2020-04-19 18:54:06 jdbc[5]: 
/**/conn3.getAutoCommit();
2020-04-19 18:54:06 jdbc[5]: 
/**/Statement stat13 = conn3.createStatement();
2020-04-19 18:54:06 jdbc[5]: 
/**/stat13.execute("SELECT DISTINCT datlastsysoid FROM pg_database");
2020-04-19 18:54:06 jdbc[5]: Plan       : calculate cost for plan [PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@68e3586]
2020-04-19 18:54:06 jdbc[5]: Plan       :   for table filter PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@68e3586
2020-04-19 18:54:06 jdbc[5]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:54:06 jdbc[5]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:54:06 jdbc[5]: Plan       : plan cost 10,001
2020-04-19 18:54:06 jdbc[5]: 
/*SQL #:1*/SELECT DISTINCT datlastsysoid FROM pg_database;
2020-04-19 18:54:06 jdbc[5]: 
/**/ResultSet rs97 = stat13.getResultSet();
2020-04-19 18:54:06 jdbc[5]: 
/**/ResultSetMetaData rsMeta4 = rs97.getMetaData();
2020-04-19 18:54:06 jdbc[5]: 
/**/conn3.getCatalog();
2020-04-19 18:54:06 jdbc[5]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta4.getColumnCount();
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta4.getColumnName(1);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta4.getColumnType(1);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta4.getColumnDisplaySize(1);
2020-04-19 18:54:06 jdbc[5]: 
/**/rs97.next();
2020-04-19 18:54:06 jdbc[5]: 
/**/ResultSetMetaData rsMeta5 = rs97.getMetaData();
2020-04-19 18:54:06 jdbc[5]: 
/**/conn3.getCatalog();
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta5.getColumnCount();
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta5.getColumnType(1);
2020-04-19 18:54:06 jdbc[5]: 
/**/rs97.next();
2020-04-19 18:54:06 jdbc[5]: 
/**/stat13.close();
2020-04-19 18:54:06 jdbc[5]: 
/**/conn3.getAutoCommit();
2020-04-19 18:54:06 jdbc[5]: 
/**/Statement stat14 = conn3.createStatement();
2020-04-19 18:54:06 jdbc[5]: 
/**/stat14.execute("SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid");
2020-04-19 18:54:06 jdbc[5]: Plan       : calculate cost for plan [D, T]
2020-04-19 18:54:06 jdbc[5]: Plan       :   for table filter D
2020-04-19 18:54:06 jdbc[5]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:54:06 jdbc[5]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:54:06 jdbc[5]: Plan       :   best plan item cost 99,510,000 index meta
2020-04-19 18:54:06 jdbc[5]: Plan       :   for table filter T
2020-04-19 18:54:06 jdbc[5]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:54:06 jdbc[5]: Plan       :   best plan item cost 9,950 index meta
2020-04-19 18:54:06 jdbc[5]: Plan       : plan cost 990,224,019,951
2020-04-19 18:54:06 jdbc[5]: 
/*SQL #:1*/SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid;
2020-04-19 18:54:06 jdbc[5]: 
/**/ResultSet rs98 = stat14.getResultSet();
2020-04-19 18:54:06 jdbc[5]: 
/**/ResultSetMetaData rsMeta6 = rs98.getMetaData();
2020-04-19 18:54:06 jdbc[5]: 
/**/conn3.getCatalog();
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnCount();
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnName(1);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnType(1);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnDisplaySize(1);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnName(2);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnType(2);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnDisplaySize(2);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnName(3);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnType(3);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnDisplaySize(3);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnName(4);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnType(4);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnDisplaySize(4);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnName(5);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnType(5);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnDisplaySize(5);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnName(6);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnType(6);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnDisplaySize(6);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnName(7);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnType(7);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnDisplaySize(7);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnName(8);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnType(8);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnDisplaySize(8);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnName(9);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnType(9);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta6.getColumnDisplaySize(9);
2020-04-19 18:54:06 jdbc[5]: 
/**/rs98.next();
2020-04-19 18:54:06 jdbc[5]: 
/**/ResultSetMetaData rsMeta7 = rs98.getMetaData();
2020-04-19 18:54:06 jdbc[5]: 
/**/conn3.getCatalog();
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta7.getColumnCount();
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta7.getColumnType(1);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta7.getColumnType(2);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta7.getColumnType(3);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta7.getColumnType(4);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta7.getColumnType(5);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta7.getColumnType(6);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta7.getColumnType(7);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta7.getColumnType(8);
2020-04-19 18:54:06 jdbc[5]: 
/**/rsMeta7.getColumnType(9);
2020-04-19 18:54:06 jdbc[5]: 
/**/rs98.next();
2020-04-19 18:54:06 jdbc[5]: 
/**/stat14.close();
2020-04-19 18:54:06 jdbc[5]: 
/**/conn3.getAutoCommit();
2020-04-19 18:54:14 jdbc[5]: 
/**/conn3.close();
2020-04-19 18:54:14 lock: 5 shared read lock unlock SYS 
2020-04-19 18:54:14 database: disconnecting session #5
2020-04-19 18:54:14 database: disconnected session #5
2020-04-19 18:58:00 database: closing D:/JAVA_WorkSpace/h2database/h2_db2 from shutdown hook
2020-04-19 18:58:00 lock: 3 shared read lock unlock SYS 
2020-04-19 18:58:00 database: disconnecting session #3
2020-04-19 18:58:00 database: disconnected session #3
2020-04-19 18:58:00 database: closing D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 18:58:00 lock: 1 shared read lock unlock SYS 
2020-04-19 18:58:00 lock: 2 shared read lock unlock SYS 
2020-04-19 18:58:00 database: closed
2020-04-19 18:58:22 database: opening D:/JAVA_WorkSpace/h2database/h2_db2 (build 200)
2020-04-19 18:58:22 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:58:22 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:58:22 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:58:22 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:58:22 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:58:22 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:58:22 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:58:22 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:58:22 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:58:22 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:58:22 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:58:22 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:58:22 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:58:22 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:58:22 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:58:22 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 18:58:22 lock: 1 exclusive write lock added for SYS 
2020-04-19 18:58:22 lock: 1 exclusive write lock unlock SYS 
2020-04-19 18:58:22 database: opened D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 18:58:22 database: connecting session #3 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 18:58:22 jdbc[3]: 
/*SQL */SET TRACE_LEVEL_SYSTEM_OUT 3;
2020-04-19 18:58:22 jdbc[3]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2020-04-19 18:58:22 jdbc[3]: Plan       : calculate cost for plan [SETTINGS:-7:org.h2.table.InformationSchemaTable@46a65aa4]
2020-04-19 18:58:22 jdbc[3]: Plan       :   for table filter SETTINGS:-7:org.h2.table.InformationSchemaTable@46a65aa4
2020-04-19 18:58:22 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:22 jdbc[3]: Plan       :   best plan item cost 9,900 index meta
2020-04-19 18:58:22 jdbc[3]: Plan       : plan cost 9,901
2020-04-19 18:58:22 jdbc[3]: 
/*SQL l:77 #:2 t:12*/SELECT NAME, `VALUE` FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?) {1: 'MODE', 2: 'TIME ZONE', 3: 'JAVA_OBJECT_SERIALIZER'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:77 #:3 t:2*/SELECT NAME, `VALUE` FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?) {1: 'DATABASE_TO_UPPER', 2: 'DATABASE_TO_LOWER', 3: 'CASE_INSENSITIVE_IDENTIFIERS'};
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [SCHEMATA:-14:org.h2.table.InformationSchemaTable@7bbefe90]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter SCHEMATA:-14:org.h2.table.InformationSchemaTable@7bbefe90
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:58:23 jdbc[3]: 
/*SQL #:3*/SELECT SCHEMA_NAME TABLE_SCHEM, CATALOG_NAME TABLE_CATALOG,  IS_DEFAULT FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME;
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [SCHEMATA:-14:org.h2.table.InformationSchemaTable@7bbefe90]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter SCHEMATA:-14:org.h2.table.InformationSchemaTable@7bbefe90
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:58:23 jdbc[3]: 
/*SQL #:3*/SELECT SCHEMA_NAME TABLE_SCHEM, CATALOG_NAME TABLE_CATALOG,  IS_DEFAULT FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME;
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [_0]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter _0
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [_1]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter _1
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:1007 #:35 t:22*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'INFORMATION_SCHEMA', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [COLUMNS:-2:org.h2.table.InformationSchemaTable@4e46377b]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter COLUMNS:-2:org.h2.table.InformationSchemaTable@4e46377b
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 28 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 27.44 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 28.44
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CATALOGS'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CHECK_CONSTRAINTS'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLLATIONS'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:33 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLUMNS'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:8*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLUMN_PRIVILEGES'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CONSTANTS'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CONSTRAINT_COLUMN_USAGE'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CROSS_REFERENCES'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:16*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'DOMAINS'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:11*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'DOMAIN_CONSTRAINTS'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'FUNCTION_ALIASES'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:17*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'FUNCTION_COLUMNS'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'HELP'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:21*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'INDEXES'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'IN_DOUBT'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'KEY_COLUMN_USAGE'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'LOCKS'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'QUERY_STATISTICS'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'REFERENTIAL_CONSTRAINTS'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'RIGHTS'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'ROLES'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:8*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SCHEMATA'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:17*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SEQUENCES'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SESSIONS'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SESSION_STATE'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SETTINGS'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SYNONYMS'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLES'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_CONSTRAINTS'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_PRIVILEGES'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_TYPES'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TRIGGERS'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TYPE_INFO'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'USERS'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'VIEWS'};
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@5235707]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@5235707
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@5235707]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@5235707
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 9,800 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 9,801
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:438 #:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'INFORMATION_SCHEMA', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@2be7c2c1]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@2be7c2c1
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@2be7c2c1]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@2be7c2c1
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 9,600 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 9,601
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:596 #:3*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'INFORMATION_SCHEMA', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [_2]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter _2
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:58:23 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663]
2020-04-19 18:58:23 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:23 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:58:23 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 18:58:23 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:1007 #:18 t:29*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'PG_CATALOG', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_AM'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ATTRDEF'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:10*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ATTRIBUTE'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_AUTHID'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:13*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_CLASS'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:10*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_DATABASE'};
2020-04-19 18:58:23 command: slow query: 147 ms
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:4 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_DESCRIPTION'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_GROUP'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_INDEX'};
2020-04-19 18:58:23 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_INHERITS'};
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_NAMESPACE'};
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_PROC'};
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ROLES'};
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_SETTINGS'};
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TABLESPACE'};
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TRIGGER'};
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TYPE'};
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_USER'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@5235707]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@5235707
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 9,800 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 9,801
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:438 #:1 t:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@2be7c2c1]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@2be7c2c1
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 9,600 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 9,601
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:596 #:3*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'PG_CATALOG', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [_3]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter _3
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@348b88f6
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@2e21f663
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:1007 t:1*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'PUBLIC', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@5235707]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@5235707
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 9,900 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 9,901
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:438 #:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'PUBLIC', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@2be7c2c1]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@2be7c2c1
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 9,700 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 9,701
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:596 #:3*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'PUBLIC', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 324.72 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 325.72
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_AM'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ATTRDEF'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ATTRIBUTE'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_AUTHID'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_CLASS'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_DATABASE'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_DESCRIPTION'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_GROUP'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_INDEX'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_INHERITS'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_NAMESPACE'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_PROC'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ROLES'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_SETTINGS'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TABLESPACE'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TRIGGER'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TYPE'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@2db43bd
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 18:58:24 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_USER'};
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [SEQUENCES:-9:org.h2.table.InformationSchemaTable@17bf68ed]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter SEQUENCES:-9:org.h2.table.InformationSchemaTable@17bf68ed
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:58:24 jdbc[3]: 
/*SQL t:3*/SELECT * FROM INFORMATION_SCHEMA.SEQUENCES ORDER BY SEQUENCE_NAME;
2020-04-19 18:58:24 jdbc[3]: Plan       : calculate cost for plan [USERS:-10:org.h2.table.InformationSchemaTable@1838c089]
2020-04-19 18:58:24 jdbc[3]: Plan       :   for table filter USERS:-10:org.h2.table.InformationSchemaTable@1838c089
2020-04-19 18:58:24 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:58:24 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 18:58:24 jdbc[3]: 
/*SQL #:1*/SELECT * FROM INFORMATION_SCHEMA.USERS ORDER BY NAME;
2020-04-19 18:58:31 database: connecting session #4 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 18:58:31 jdbc[4]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 18:58:31 jdbc[4]: 
/**/Connection conn2 = DriverManager.getConnection("jdbc:h2:h2_db2", "SA", "");
2020-04-19 18:58:31 jdbc[4]: 
/**/Statement stat2 = conn2.createStatement();
2020-04-19 18:58:31 jdbc[4]: 
/**/Statement stat3 = conn2.createStatement();
2020-04-19 18:58:31 jdbc[4]: 
/**/stat3.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 18:58:31 jdbc[4]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 18:58:31 jdbc[4]: 
/**/ResultSet rs88 = stat3.executeQuery("select oid from pg_catalog.pg_type");
2020-04-19 18:58:31 jdbc[4]: Plan       : calculate cost for plan [PG_TYPE:-1016:org.h2.mode.PgCatalogTable@53254da4]
2020-04-19 18:58:31 jdbc[4]: Plan       :   for table filter PG_TYPE:-1016:org.h2.mode.PgCatalogTable@53254da4
2020-04-19 18:58:31 jdbc[4]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:31 jdbc[4]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:58:31 jdbc[4]: Plan       : plan cost 10,001
2020-04-19 18:58:31 jdbc[4]: 
/*SQL #:21 t:1*/select oid from pg_catalog.pg_type;
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.getInt(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/rs88.close();
2020-04-19 18:58:31 jdbc[4]: 
/**/stat3.close();
2020-04-19 18:58:31 jdbc[4]: 
/**/conn2.getAutoCommit();
2020-04-19 18:58:31 jdbc[4]: 
/**/Statement stat4 = conn2.createStatement();
2020-04-19 18:58:31 jdbc[4]: 
/**/stat4.execute("set DATESTYLE ISO");
2020-04-19 18:58:31 jdbc[4]: 
/*SQL */set DATESTYLE ISO;
2020-04-19 18:58:31 jdbc[4]: 
/**/stat4.getUpdateCount();
2020-04-19 18:58:31 jdbc[4]: 
/**/stat4.close();
2020-04-19 18:58:31 jdbc[4]: 
/**/conn2.getAutoCommit();
2020-04-19 18:58:31 jdbc[4]: 
/**/Statement stat5 = conn2.createStatement();
2020-04-19 18:58:31 jdbc[4]: 
/**/stat5.execute("SELECT DISTINCT datlastsysoid FROM pg_database");
2020-04-19 18:58:31 jdbc[4]: Plan       : calculate cost for plan [PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@1218479f]
2020-04-19 18:58:31 jdbc[4]: Plan       :   for table filter PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@1218479f
2020-04-19 18:58:31 jdbc[4]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:31 jdbc[4]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:58:31 jdbc[4]: Plan       : plan cost 10,001
2020-04-19 18:58:31 jdbc[4]: 
/*SQL #:1*/SELECT DISTINCT datlastsysoid FROM pg_database;
2020-04-19 18:58:31 jdbc[4]: 
/**/ResultSet rs90 = stat5.getResultSet();
2020-04-19 18:58:31 jdbc[4]: 
/**/ResultSetMetaData rsMeta0 = rs90.getMetaData();
2020-04-19 18:58:31 jdbc[4]: 
/**/conn2.getCatalog();
2020-04-19 18:58:31 jdbc[4]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta0.getColumnCount();
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta0.getColumnName(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta0.getColumnType(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta0.getColumnDisplaySize(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs90.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/ResultSetMetaData rsMeta1 = rs90.getMetaData();
2020-04-19 18:58:31 jdbc[4]: 
/**/conn2.getCatalog();
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta1.getColumnCount();
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta1.getColumnType(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs90.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/stat5.close();
2020-04-19 18:58:31 jdbc[4]: 
/**/conn2.getAutoCommit();
2020-04-19 18:58:31 jdbc[4]: 
/**/Statement stat6 = conn2.createStatement();
2020-04-19 18:58:31 jdbc[4]: 
/**/stat6.execute("SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid");
2020-04-19 18:58:31 jdbc[4]: Plan       : calculate cost for plan [D, T]
2020-04-19 18:58:31 jdbc[4]: Plan       :   for table filter D
2020-04-19 18:58:31 jdbc[4]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:31 jdbc[4]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:31 jdbc[4]: Plan       :   best plan item cost 99,510,000 index meta
2020-04-19 18:58:31 jdbc[4]: Plan       :   for table filter T
2020-04-19 18:58:31 jdbc[4]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:31 jdbc[4]: Plan       :   best plan item cost 9,950 index meta
2020-04-19 18:58:31 jdbc[4]: Plan       : plan cost 990,224,019,951
2020-04-19 18:58:31 jdbc[4]: 
/*SQL #:1*/SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid;
2020-04-19 18:58:31 jdbc[4]: 
/**/ResultSet rs91 = stat6.getResultSet();
2020-04-19 18:58:31 jdbc[4]: 
/**/ResultSetMetaData rsMeta2 = rs91.getMetaData();
2020-04-19 18:58:31 jdbc[4]: 
/**/conn2.getCatalog();
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnCount();
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnName(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnType(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnDisplaySize(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnName(2);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnType(2);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnDisplaySize(2);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnName(3);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnType(3);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnDisplaySize(3);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnName(4);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnType(4);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnDisplaySize(4);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnName(5);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnType(5);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnDisplaySize(5);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnName(6);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnType(6);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnDisplaySize(6);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnName(7);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnType(7);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnDisplaySize(7);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnName(8);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnType(8);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnDisplaySize(8);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnName(9);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnType(9);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta2.getColumnDisplaySize(9);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs91.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/ResultSetMetaData rsMeta3 = rs91.getMetaData();
2020-04-19 18:58:31 jdbc[4]: 
/**/conn2.getCatalog();
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta3.getColumnCount();
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta3.getColumnType(1);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta3.getColumnType(2);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta3.getColumnType(3);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta3.getColumnType(4);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta3.getColumnType(5);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta3.getColumnType(6);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta3.getColumnType(7);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta3.getColumnType(8);
2020-04-19 18:58:31 jdbc[4]: 
/**/rsMeta3.getColumnType(9);
2020-04-19 18:58:31 jdbc[4]: 
/**/rs91.next();
2020-04-19 18:58:31 jdbc[4]: 
/**/stat6.close();
2020-04-19 18:58:31 jdbc[4]: 
/**/conn2.getAutoCommit();
2020-04-19 18:58:33 jdbc[4]: 
/**/conn2.close();
2020-04-19 18:58:33 lock: 4 shared read lock unlock SYS 
2020-04-19 18:58:33 database: disconnecting session #4
2020-04-19 18:58:33 database: disconnected session #4
2020-04-19 18:58:33 database: connecting session #5 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 18:58:33 jdbc[5]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 18:58:33 jdbc[5]: 
/**/Connection conn3 = DriverManager.getConnection("jdbc:h2:H2_DB2", "SA", "");
2020-04-19 18:58:33 jdbc[5]: 
/**/Statement stat7 = conn3.createStatement();
2020-04-19 18:58:33 jdbc[5]: 
/**/Statement stat8 = conn3.createStatement();
2020-04-19 18:58:33 jdbc[5]: 
/**/stat8.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 18:58:33 jdbc[5]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 18:58:33 jdbc[5]: 
/**/stat8.close();
2020-04-19 18:58:33 jdbc[5]: 
/**/conn3.getAutoCommit();
2020-04-19 18:58:33 jdbc[5]: 
/**/Statement stat9 = conn3.createStatement();
2020-04-19 18:58:33 jdbc[5]: 
/**/stat9.execute("set DATESTYLE ISO");
2020-04-19 18:58:33 jdbc[5]: 
/*SQL */set DATESTYLE ISO;
2020-04-19 18:58:33 jdbc[5]: 
/**/stat9.getUpdateCount();
2020-04-19 18:58:33 jdbc[5]: 
/**/stat9.close();
2020-04-19 18:58:33 jdbc[5]: 
/**/conn3.getAutoCommit();
2020-04-19 18:58:33 jdbc[5]: 
/**/Statement stat10 = conn3.createStatement();
2020-04-19 18:58:33 jdbc[5]: 
/**/stat10.execute("SELECT oid, nspname AS schemaname, nspacl, pg_get_userbyid(nspowner) AS schemaowner, obj_description(oid) AS description FROM pg_namespace");
2020-04-19 18:58:33 jdbc[5]: Plan       : calculate cost for plan [PG_NAMESPACE:-1010:org.h2.mode.PgCatalogTable@58619385]
2020-04-19 18:58:33 jdbc[5]: Plan       :   for table filter PG_NAMESPACE:-1010:org.h2.mode.PgCatalogTable@58619385
2020-04-19 18:58:33 jdbc[5]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:33 jdbc[5]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:58:33 jdbc[5]: Plan       : plan cost 10,001
2020-04-19 18:58:33 jdbc[5]: 
/*SQL #:3*/SELECT oid, nspname AS schemaname, nspacl, pg_get_userbyid(nspowner) AS schemaowner, obj_description(oid) AS description FROM pg_namespace;
2020-04-19 18:58:33 jdbc[5]: 
/**/ResultSet rs94 = stat10.getResultSet();
2020-04-19 18:58:33 jdbc[5]: 
/**/ResultSetMetaData rsMeta4 = rs94.getMetaData();
2020-04-19 18:58:33 jdbc[5]: 
/**/conn3.getCatalog();
2020-04-19 18:58:33 jdbc[5]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta4.getColumnCount();
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta4.getColumnName(1);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta4.getColumnType(1);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta4.getColumnDisplaySize(1);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta4.getColumnName(2);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta4.getColumnType(2);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta4.getColumnDisplaySize(2);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta4.getColumnName(3);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta4.getColumnType(3);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta4.getColumnDisplaySize(3);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta4.getColumnName(4);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta4.getColumnType(4);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta4.getColumnDisplaySize(4);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta4.getColumnName(5);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta4.getColumnType(5);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta4.getColumnDisplaySize(5);
2020-04-19 18:58:33 jdbc[5]: 
/**/rs94.next();
2020-04-19 18:58:33 jdbc[5]: 
/**/ResultSetMetaData rsMeta5 = rs94.getMetaData();
2020-04-19 18:58:33 jdbc[5]: 
/**/conn3.getCatalog();
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta5.getColumnCount();
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta5.getColumnType(1);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta5.getColumnType(2);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta5.getColumnType(3);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta5.getColumnType(4);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta5.getColumnType(5);
2020-04-19 18:58:33 jdbc[5]: 
/**/rs94.next();
2020-04-19 18:58:33 jdbc[5]: 
/**/ResultSetMetaData rsMeta6 = rs94.getMetaData();
2020-04-19 18:58:33 jdbc[5]: 
/**/conn3.getCatalog();
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta6.getColumnCount();
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta6.getColumnType(1);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta6.getColumnType(2);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta6.getColumnType(3);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta6.getColumnType(4);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta6.getColumnType(5);
2020-04-19 18:58:33 jdbc[5]: 
/**/rs94.next();
2020-04-19 18:58:33 jdbc[5]: 
/**/ResultSetMetaData rsMeta7 = rs94.getMetaData();
2020-04-19 18:58:33 jdbc[5]: 
/**/conn3.getCatalog();
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta7.getColumnCount();
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta7.getColumnType(1);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta7.getColumnType(2);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta7.getColumnType(3);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta7.getColumnType(4);
2020-04-19 18:58:33 jdbc[5]: 
/**/rsMeta7.getColumnType(5);
2020-04-19 18:58:33 jdbc[5]: 
/**/rs94.next();
2020-04-19 18:58:33 jdbc[5]: 
/**/stat10.close();
2020-04-19 18:58:33 jdbc[5]: 
/**/conn3.getAutoCommit();
2020-04-19 18:58:33 jdbc[5]: 
/**/Statement stat11 = conn3.createStatement();
2020-04-19 18:58:33 jdbc[5]: 
/**/stat11.execute("SELECT COUNT(*) FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace WHERE c.relkind = ANY ('{r,v,m}'::char[]) UNION SELECT COUNT(*) FROM pg_attribute a JOIN pg_class c on a.attrelid = c.oid JOIN pg_namespace n on c.relnamespace = n.oid JOIN pg_type tp on tp.typelem = a.atttypid WHERE a.attnum > 0 UNION SELECT COUNT(*) FROM information_schema.routines ");
2020-04-19 18:58:33 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT COUNT(*) FROM PG_CLASS C LEFT JOIN PG_NAMESPACE N ON N.OID = C.RELNAMESPACE WHERE C.RELKIND = ANY ('{r,v,m}'::CHAR[[*]]) UNION SELECT COUNT(*) FROM PG_ATTRIBUTE A JOIN PG_CLASS C ON A.ATTRELID = C.OID JOIN PG_NAMESPACE N ON C.RELNAMESPACE = N.OID JOIN PG_TYPE TP ON TP.TYPELEM = A.ATTTYPID WHERE A.ATTNUM > 0 UNION SELECT COUNT(*) FROM INFORMATION_SCHEMA.ROUTINES "; expected "VARYING, LARGE, (, ARRAY, AT, FORMAT, *, /, %, +, -, ||, NOT, ILIKE, REGEXP, AND, OR, )"; SQL statement:
SELECT COUNT(*) FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace WHERE c.relkind = ANY ('{r,v,m}'::char[]) UNION SELECT COUNT(*) FROM pg_attribute a JOIN pg_class c on a.attrelid = c.oid JOIN pg_namespace n on c.relnamespace = n.oid JOIN pg_type tp on tp.typelem = a.atttypid WHERE a.attnum > 0 UNION SELECT COUNT(*) FROM information_schema.routines  [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:459)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.getSyntaxError(DbException.java:238)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1176)
	at org.h2.command.Parser.read(Parser.java:5558)
	at org.h2.command.Parser.readAggregate(Parser.java:3721)
	at org.h2.command.Parser.readFunction(Parser.java:3974)
	at org.h2.command.Parser.readTerm(Parser.java:5003)
	at org.h2.command.Parser.readFactor(Parser.java:3564)
	at org.h2.command.Parser.readSum(Parser.java:3551)
	at org.h2.command.Parser.readConcat(Parser.java:3529)
	at org.h2.command.Parser.readComparison(Parser.java:3520)
	at org.h2.command.Parser.readCondition(Parser.java:3373)
	at org.h2.command.Parser.readExpressionWithGlobalConditions(Parser.java:3229)
	at org.h2.command.Parser.parseSelect(Parser.java:3098)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2958)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2793)
	at org.h2.command.Parser.parseQuery(Parser.java:2763)
	at org.h2.command.Parser.parsePrepared(Parser.java:986)
	at org.h2.command.Parser.parse(Parser.java:961)
	at org.h2.command.Parser.parse(Parser.java:937)
	at org.h2.command.Parser.prepareCommand(Parser.java:861)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-19 18:58:33 jdbc[5]: 
/**/stat11.close();
2020-04-19 18:58:33 jdbc[5]: 
/**/conn3.getAutoCommit();
2020-04-19 18:58:33 jdbc[5]: 
/**/Statement stat12 = conn3.createStatement();
2020-04-19 18:58:33 jdbc[5]: 
/**/stat12.execute(" SELECT n.nspname, c.relname, c.relkind FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace WHERE c.relkind = ANY ('{r,v,m}'::char[])  ORDER BY n.nspname, c.relname");
2020-04-19 18:58:33 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement " SELECT N.NSPNAME, C.RELNAME, C.RELKIND FROM PG_CLASS C LEFT JOIN PG_NAMESPACE N ON N.OID = C.RELNAMESPACE WHERE C.RELKIND = ANY ('{r,v,m}'::CHAR[[*]])  ORDER BY N.NSPNAME, C.RELNAME"; expected "VARYING, LARGE, (, ARRAY, AT, FORMAT, *, /, %, +, -, ||, NOT, ILIKE, REGEXP, AND, OR, )"; SQL statement:
 SELECT n.nspname, c.relname, c.relkind FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace WHERE c.relkind = ANY ('{r,v,m}'::char[])  ORDER BY n.nspname, c.relname [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:459)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.getSyntaxError(DbException.java:238)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1176)
	at org.h2.command.Parser.read(Parser.java:5558)
	at org.h2.command.Parser.readAggregate(Parser.java:3721)
	at org.h2.command.Parser.readFunction(Parser.java:3974)
	at org.h2.command.Parser.readTerm(Parser.java:5003)
	at org.h2.command.Parser.readFactor(Parser.java:3564)
	at org.h2.command.Parser.readSum(Parser.java:3551)
	at org.h2.command.Parser.readConcat(Parser.java:3529)
	at org.h2.command.Parser.readComparison(Parser.java:3520)
	at org.h2.command.Parser.readCondition(Parser.java:3373)
	at org.h2.command.Parser.readExpressionWithGlobalConditions(Parser.java:3229)
	at org.h2.command.Parser.parseSelect(Parser.java:3098)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2958)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2793)
	at org.h2.command.Parser.parseQuery(Parser.java:2763)
	at org.h2.command.Parser.parsePrepared(Parser.java:986)
	at org.h2.command.Parser.parse(Parser.java:961)
	at org.h2.command.Parser.parse(Parser.java:937)
	at org.h2.command.Parser.prepareCommand(Parser.java:861)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-19 18:58:33 jdbc[5]: 
/**/stat12.close();
2020-04-19 18:58:33 jdbc[5]: 
/**/conn3.getAutoCommit();
2020-04-19 18:58:33 jdbc[5]: 
/**/Statement stat13 = conn3.createStatement();
2020-04-19 18:58:33 jdbc[5]: 
/**/stat13.execute("SELECT n.nspname, c.relname, a.attname, tp.typname FROM pg_attribute a JOIN pg_class c on a.attrelid = c.oid JOIN pg_namespace n on c.relnamespace = n.oid JOIN pg_type tp on tp.typelem = a.atttypid WHERE a.attnum > 0 ORDER BY nspname, relname");
2020-04-19 18:58:33 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "TP.TYPELEM" not found; SQL statement:
SELECT n.nspname, c.relname, a.attname, tp.typname FROM pg_attribute a JOIN pg_class c on a.attrelid = c.oid JOIN pg_namespace n on c.relnamespace = n.oid JOIN pg_type tp on tp.typelem = a.atttypid WHERE a.attnum > 0 ORDER BY nspname, relname [42122-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:459)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:200)
	at org.h2.message.DbException.get(DbException.java:176)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:163)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:145)
	at org.h2.expression.condition.Comparison.optimize(Comparison.java:185)
	at org.h2.expression.condition.ConditionAndOr.optimize(ConditionAndOr.java:139)
	at org.h2.expression.condition.ConditionAndOr.optimize(ConditionAndOr.java:140)
	at org.h2.command.query.Select.prepare(Select.java:1177)
	at org.h2.command.Parser.prepareCommand(Parser.java:867)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-19 18:58:33 jdbc[5]: 
/**/stat13.close();
2020-04-19 18:58:33 jdbc[5]: 
/**/conn3.getAutoCommit();
2020-04-19 18:58:33 jdbc[5]: 
/**/Statement stat14 = conn3.createStatement();
2020-04-19 18:58:33 jdbc[5]: 
/**/stat14.execute("SELECT r.routine_schema, r.routine_name FROM information_schema.routines r LEFT JOIN information_schema.parameters p ON r.specific_name = p.specific_name  GROUP BY p.specific_name, r.routine_schema, r.routine_name ORDER BY r.routine_schema");
2020-04-19 18:58:33 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ROUTINES" not found; SQL statement:
SELECT r.routine_schema, r.routine_name FROM information_schema.routines r LEFT JOIN information_schema.parameters p ON r.specific_name = p.specific_name  GROUP BY p.specific_name, r.routine_schema, r.routine_name ORDER BY r.routine_schema [42102-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:459)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:200)
	at org.h2.message.DbException.get(DbException.java:176)
	at org.h2.command.Parser.readTableOrView(Parser.java:8558)
	at org.h2.command.Parser.readTableFilter(Parser.java:2075)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2968)
	at org.h2.command.Parser.parseSelect(Parser.java:3095)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2958)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2793)
	at org.h2.command.Parser.parseQuery(Parser.java:2763)
	at org.h2.command.Parser.parsePrepared(Parser.java:986)
	at org.h2.command.Parser.parse(Parser.java:961)
	at org.h2.command.Parser.parse(Parser.java:933)
	at org.h2.command.Parser.prepareCommand(Parser.java:861)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-19 18:58:33 jdbc[5]: 
/**/stat14.close();
2020-04-19 18:58:33 jdbc[5]: 
/**/conn3.getAutoCommit();
2020-04-19 18:58:41 jdbc[5]: 
/**/Statement stat15 = conn3.createStatement();
2020-04-19 18:58:41 jdbc[5]: 
/**/stat15.execute("SELECT c.oid, n.nspname AS schemaname, c.relname AS tablename, c.relacl, pg_get_userbyid(c.relowner) AS tableowner, obj_description(c.oid) AS description, c.relkind, ci.relname As cluster, c.relhasoids AS hasoids, c.relhasindex AS hasindexes, c.relhasrules AS hasrules, t.spcname AS tablespace, c.reloptions AS param, (c.reltriggers > 0) AS hastriggers, c.reltuples, ((SELECT count(*) FROM pg_inherits WHERE inhparent = c.oid) > 0) AS inhtable, i2.nspname AS inhschemaname, i2.relname AS inhtablename FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace LEFT JOIN pg_tablespace t ON t.oid = c.reltablespace LEFT JOIN (pg_inherits i INNER JOIN pg_class c2 ON i.inhparent = c2.oid LEFT JOIN pg_namespace n2 ON n2.oid = c2.relnamespace) i2 ON i2.inhrelid = c.oid LEFT JOIN pg_index ind ON(ind.indrelid = c.oid) and (ind.indisclustered = 't') LEFT JOIN pg_class ci ON ci.oid = ind.indexrelid WHERE (c.relkind = 'r'::\"char\") AND n.nspname = 'PUBLIC' ORDER BY schemaname, tablename");
2020-04-19 18:58:41 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Domain "char" not found; SQL statement:
SELECT c.oid, n.nspname AS schemaname, c.relname AS tablename, c.relacl, pg_get_userbyid(c.relowner) AS tableowner, obj_description(c.oid) AS description, c.relkind, ci.relname As cluster, c.relhasoids AS hasoids, c.relhasindex AS hasindexes, c.relhasrules AS hasrules, t.spcname AS tablespace, c.reloptions AS param, (c.reltriggers > 0) AS hastriggers, c.reltuples, ((SELECT count(*) FROM pg_inherits WHERE inhparent = c.oid) > 0) AS inhtable, i2.nspname AS inhschemaname, i2.relname AS inhtablename FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace LEFT JOIN pg_tablespace t ON t.oid = c.reltablespace LEFT JOIN (pg_inherits i INNER JOIN pg_class c2 ON i.inhparent = c2.oid LEFT JOIN pg_namespace n2 ON n2.oid = c2.relnamespace) i2 ON i2.inhrelid = c.oid LEFT JOIN pg_index ind ON(ind.indrelid = c.oid) and (ind.indisclustered = 't') LEFT JOIN pg_class ci ON ci.oid = ind.indexrelid WHERE (c.relkind = 'r'::"char") AND n.nspname = 'PUBLIC' ORDER BY schemaname, tablename [90120-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:588)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:200)
	at org.h2.message.DbException.get(DbException.java:176)
	at org.h2.schema.Schema.getDomain(Schema.java:558)
	at org.h2.command.Parser.parseColumnWithType1(Parser.java:6436)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:6396)
	at org.h2.command.Parser.readTerm(Parser.java:5029)
	at org.h2.command.Parser.readFactor(Parser.java:3564)
	at org.h2.command.Parser.readSum(Parser.java:3551)
	at org.h2.command.Parser.readConcat(Parser.java:3529)
	at org.h2.command.Parser.readComparison(Parser.java:3523)
	at org.h2.command.Parser.readCondition(Parser.java:3373)
	at org.h2.command.Parser.readExpression(Parser.java:3242)
	at org.h2.command.Parser.readTerm(Parser.java:4818)
	at org.h2.command.Parser.readFactor(Parser.java:3564)
	at org.h2.command.Parser.readSum(Parser.java:3551)
	at org.h2.command.Parser.readConcat(Parser.java:3529)
	at org.h2.command.Parser.readCondition(Parser.java:3319)
	at org.h2.command.Parser.readExpressionWithGlobalConditions(Parser.java:3229)
	at org.h2.command.Parser.parseSelect(Parser.java:3098)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2958)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2793)
	at org.h2.command.Parser.parseQuery(Parser.java:2763)
	at org.h2.command.Parser.parsePrepared(Parser.java:986)
	at org.h2.command.Parser.parse(Parser.java:961)
	at org.h2.command.Parser.parse(Parser.java:933)
	at org.h2.command.Parser.prepareCommand(Parser.java:861)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-19 18:58:41 jdbc[5]: 
/**/stat15.close();
2020-04-19 18:58:41 jdbc[5]: 
/**/conn3.getAutoCommit();
2020-04-19 18:58:44 jdbc[5]: 
/**/conn3.close();
2020-04-19 18:58:44 lock: 5 shared read lock unlock SYS 
2020-04-19 18:58:44 database: disconnecting session #5
2020-04-19 18:58:44 database: disconnected session #5
2020-04-19 18:58:44 database: connecting session #6 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 18:58:44 jdbc[6]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 18:58:44 jdbc[6]: 
/**/Connection conn4 = DriverManager.getConnection("jdbc:h2:h2_db2", "SA", "");
2020-04-19 18:58:44 jdbc[6]: 
/**/Statement stat16 = conn4.createStatement();
2020-04-19 18:58:44 jdbc[6]: 
/**/Statement stat17 = conn4.createStatement();
2020-04-19 18:58:44 jdbc[6]: 
/**/stat17.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 18:58:44 jdbc[6]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 18:58:44 jdbc[6]: 
/**/stat17.close();
2020-04-19 18:58:44 jdbc[6]: 
/**/conn4.getAutoCommit();
2020-04-19 18:58:44 jdbc[6]: 
/**/Statement stat18 = conn4.createStatement();
2020-04-19 18:58:44 jdbc[6]: 
/**/stat18.execute("set DATESTYLE ISO");
2020-04-19 18:58:44 jdbc[6]: 
/*SQL */set DATESTYLE ISO;
2020-04-19 18:58:44 jdbc[6]: 
/**/stat18.getUpdateCount();
2020-04-19 18:58:44 jdbc[6]: 
/**/stat18.close();
2020-04-19 18:58:44 jdbc[6]: 
/**/conn4.getAutoCommit();
2020-04-19 18:58:44 jdbc[6]: 
/**/Statement stat19 = conn4.createStatement();
2020-04-19 18:58:44 jdbc[6]: 
/**/stat19.execute("SELECT spcname AS name FROM pg_tablespace ORDER BY spcname ASC");
2020-04-19 18:58:44 jdbc[6]: Plan       : calculate cost for plan [PG_TABLESPACE:-1014:org.h2.mode.PgCatalogTable@22c327a8]
2020-04-19 18:58:44 jdbc[6]: Plan       :   for table filter PG_TABLESPACE:-1014:org.h2.mode.PgCatalogTable@22c327a8
2020-04-19 18:58:44 jdbc[6]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:44 jdbc[6]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:58:44 jdbc[6]: Plan       : plan cost 10,001
2020-04-19 18:58:44 jdbc[6]: 
/*SQL #:1*/SELECT spcname AS name FROM pg_tablespace ORDER BY spcname ASC;
2020-04-19 18:58:44 jdbc[6]: 
/**/ResultSet rs102 = stat19.getResultSet();
2020-04-19 18:58:44 jdbc[6]: 
/**/ResultSetMetaData rsMeta8 = rs102.getMetaData();
2020-04-19 18:58:44 jdbc[6]: 
/**/conn4.getCatalog();
2020-04-19 18:58:44 jdbc[6]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 18:58:44 jdbc[6]: 
/**/rsMeta8.getColumnCount();
2020-04-19 18:58:44 jdbc[6]: 
/**/rsMeta8.getColumnName(1);
2020-04-19 18:58:44 jdbc[6]: 
/**/rsMeta8.getColumnType(1);
2020-04-19 18:58:44 jdbc[6]: 
/**/rsMeta8.getColumnDisplaySize(1);
2020-04-19 18:58:44 jdbc[6]: 
/**/rs102.next();
2020-04-19 18:58:44 jdbc[6]: 
/**/ResultSetMetaData rsMeta9 = rs102.getMetaData();
2020-04-19 18:58:44 jdbc[6]: 
/**/conn4.getCatalog();
2020-04-19 18:58:44 jdbc[6]: 
/**/rsMeta9.getColumnCount();
2020-04-19 18:58:44 jdbc[6]: 
/**/rsMeta9.getColumnType(1);
2020-04-19 18:58:44 jdbc[6]: 
/**/rs102.next();
2020-04-19 18:58:44 jdbc[6]: 
/**/stat19.close();
2020-04-19 18:58:44 jdbc[6]: 
/**/conn4.getAutoCommit();
2020-04-19 18:58:44 jdbc[6]: 
/**/Statement stat20 = conn4.createStatement();
2020-04-19 18:58:44 jdbc[6]: 
/**/stat20.execute("SELECT rolname AS name FROM pg_roles ORDER BY rolname ASC");
2020-04-19 18:58:44 jdbc[6]: Plan       : calculate cost for plan [PG_ROLES:-1012:org.h2.mode.PgCatalogTable@21241995]
2020-04-19 18:58:44 jdbc[6]: Plan       :   for table filter PG_ROLES:-1012:org.h2.mode.PgCatalogTable@21241995
2020-04-19 18:58:44 jdbc[6]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 18:58:44 jdbc[6]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 18:58:44 jdbc[6]: Plan       : plan cost 10,001
2020-04-19 18:58:44 jdbc[6]: 
/*SQL #:1*/SELECT rolname AS name FROM pg_roles ORDER BY rolname ASC;
2020-04-19 18:58:44 jdbc[6]: 
/**/ResultSet rs103 = stat20.getResultSet();
2020-04-19 18:58:44 jdbc[6]: 
/**/ResultSetMetaData rsMeta10 = rs103.getMetaData();
2020-04-19 18:58:44 jdbc[6]: 
/**/conn4.getCatalog();
2020-04-19 18:58:44 jdbc[6]: 
/**/rsMeta10.getColumnCount();
2020-04-19 18:58:44 jdbc[6]: 
/**/rsMeta10.getColumnName(1);
2020-04-19 18:58:44 jdbc[6]: 
/**/rsMeta10.getColumnType(1);
2020-04-19 18:58:44 jdbc[6]: 
/**/rsMeta10.getColumnDisplaySize(1);
2020-04-19 18:58:44 jdbc[6]: 
/**/rs103.next();
2020-04-19 18:58:44 jdbc[6]: 
/**/ResultSetMetaData rsMeta11 = rs103.getMetaData();
2020-04-19 18:58:44 jdbc[6]: 
/**/conn4.getCatalog();
2020-04-19 18:58:44 jdbc[6]: 
/**/rsMeta11.getColumnCount();
2020-04-19 18:58:44 jdbc[6]: 
/**/rsMeta11.getColumnType(1);
2020-04-19 18:58:44 jdbc[6]: 
/**/rs103.next();
2020-04-19 18:58:44 jdbc[6]: 
/**/stat20.close();
2020-04-19 18:58:44 jdbc[6]: 
/**/conn4.getAutoCommit();
2020-04-19 19:05:44 jdbc[6]: 
/**/conn4.close();
2020-04-19 19:05:44 lock: 6 shared read lock unlock SYS 
2020-04-19 19:05:44 database: disconnecting session #6
2020-04-19 19:05:44 database: disconnected session #6
2020-04-19 19:52:09 database: closing D:/JAVA_WorkSpace/h2database/h2_db2 from shutdown hook
2020-04-19 19:52:09 lock: 3 shared read lock unlock SYS 
2020-04-19 19:52:09 database: disconnecting session #3
2020-04-19 19:52:09 database: disconnected session #3
2020-04-19 19:52:09 database: closing D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 19:52:09 lock: 1 shared read lock unlock SYS 
2020-04-19 19:52:09 lock: 2 shared read lock unlock SYS 
2020-04-19 19:52:09 database: closed
2020-04-19 19:53:14 database: opening D:/JAVA_WorkSpace/h2database/h2_db2 (build 200)
2020-04-19 19:53:14 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 19:53:14 lock: 1 exclusive write lock added for SYS 
2020-04-19 19:53:14 lock: 1 exclusive write lock unlock SYS 
2020-04-19 19:53:14 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 19:53:14 lock: 1 exclusive write lock added for SYS 
2020-04-19 19:53:14 lock: 1 exclusive write lock unlock SYS 
2020-04-19 19:53:14 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 19:53:14 lock: 1 exclusive write lock added for SYS 
2020-04-19 19:53:14 lock: 1 exclusive write lock unlock SYS 
2020-04-19 19:53:14 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 19:53:14 lock: 1 exclusive write lock added for SYS 
2020-04-19 19:53:14 lock: 1 exclusive write lock unlock SYS 
2020-04-19 19:53:14 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 19:53:14 lock: 1 exclusive write lock added for SYS 
2020-04-19 19:53:14 lock: 1 exclusive write lock unlock SYS 
2020-04-19 19:53:14 lock: 1 exclusive write lock requesting for SYS 
2020-04-19 19:53:14 lock: 1 exclusive write lock added for SYS 
2020-04-19 19:53:14 lock: 1 exclusive write lock unlock SYS 
2020-04-19 19:53:14 database: opened D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 19:53:14 database: connecting session #3 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 19:53:14 jdbc[3]: 
/*SQL */SET TRACE_LEVEL_SYSTEM_OUT 3;
2020-04-19 19:53:14 jdbc[3]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2020-04-19 19:53:14 jdbc[3]: Plan       : calculate cost for plan [SETTINGS:-7:org.h2.table.InformationSchemaTable@2abf61b7]
2020-04-19 19:53:14 jdbc[3]: Plan       :   for table filter SETTINGS:-7:org.h2.table.InformationSchemaTable@2abf61b7
2020-04-19 19:53:14 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:14 jdbc[3]: Plan       :   best plan item cost 9,900 index meta
2020-04-19 19:53:14 jdbc[3]: Plan       : plan cost 9,901
2020-04-19 19:53:14 jdbc[3]: 
/*SQL l:77 #:2 t:20*/SELECT NAME, `VALUE` FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?) {1: 'MODE', 2: 'TIME ZONE', 3: 'JAVA_OBJECT_SERIALIZER'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:77 #:3 t:3*/SELECT NAME, `VALUE` FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?) {1: 'DATABASE_TO_UPPER', 2: 'DATABASE_TO_LOWER', 3: 'CASE_INSENSITIVE_IDENTIFIERS'};
2020-04-19 19:53:15 jdbc[3]: Plan       : calculate cost for plan [SCHEMATA:-14:org.h2.table.InformationSchemaTable@32a0af9]
2020-04-19 19:53:15 jdbc[3]: Plan       :   for table filter SCHEMATA:-14:org.h2.table.InformationSchemaTable@32a0af9
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 19:53:15 jdbc[3]: 
/*SQL #:3*/SELECT SCHEMA_NAME TABLE_SCHEM, CATALOG_NAME TABLE_CATALOG,  IS_DEFAULT FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME;
2020-04-19 19:53:15 jdbc[3]: Plan       : calculate cost for plan [SCHEMATA:-14:org.h2.table.InformationSchemaTable@32a0af9]
2020-04-19 19:53:15 jdbc[3]: Plan       :   for table filter SCHEMATA:-14:org.h2.table.InformationSchemaTable@32a0af9
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 19:53:15 jdbc[3]: 
/*SQL #:3*/SELECT SCHEMA_NAME TABLE_SCHEM, CATALOG_NAME TABLE_CATALOG,  IS_DEFAULT FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME;
2020-04-19 19:53:15 jdbc[3]: Plan       : calculate cost for plan [_0]
2020-04-19 19:53:15 jdbc[3]: Plan       :   for table filter _0
2020-04-19 19:53:15 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 19:53:15 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 19:53:15 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 19:53:15 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 19:53:15 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 19:53:15 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 19:53:15 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 19:53:15 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 19:53:15 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 19:53:15 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 19:53:15 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 19:53:15 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 19:53:15 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 19:53:15 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 19:53:15 jdbc[3]: Plan       : calculate cost for plan [_1]
2020-04-19 19:53:15 jdbc[3]: Plan       :   for table filter _1
2020-04-19 19:53:15 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 19:53:15 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 19:53:15 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 19:53:15 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 19:53:15 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 19:53:15 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 19:53:15 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 19:53:15 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 19:53:15 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 19:53:15 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 19:53:15 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 19:53:15 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 19:53:15 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 19:53:15 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:1007 #:35 t:14*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'INFORMATION_SCHEMA', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 19:53:15 jdbc[3]: Plan       : calculate cost for plan [COLUMNS:-2:org.h2.table.InformationSchemaTable@7720a0f9]
2020-04-19 19:53:15 jdbc[3]: Plan       :   for table filter COLUMNS:-2:org.h2.table.InformationSchemaTable@7720a0f9
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 28 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       :   best plan item cost 27.44 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       : plan cost 28.44
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CATALOGS'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CHECK_CONSTRAINTS'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLLATIONS'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:33 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLUMNS'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:8*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLUMN_PRIVILEGES'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CONSTANTS'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CONSTRAINT_COLUMN_USAGE'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CROSS_REFERENCES'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:16*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'DOMAINS'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:11*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'DOMAIN_CONSTRAINTS'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'FUNCTION_ALIASES'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:17*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'FUNCTION_COLUMNS'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'HELP'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:21 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'INDEXES'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'IN_DOUBT'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'KEY_COLUMN_USAGE'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'LOCKS'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'QUERY_STATISTICS'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'REFERENTIAL_CONSTRAINTS'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'RIGHTS'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'ROLES'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:8*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SCHEMATA'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:17*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SEQUENCES'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SESSIONS'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SESSION_STATE'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SETTINGS'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SYNONYMS'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLES'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_CONSTRAINTS'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_PRIVILEGES'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_TYPES'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TRIGGERS'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TYPE_INFO'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'USERS'};
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'VIEWS'};
2020-04-19 19:53:15 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88]
2020-04-19 19:53:15 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 19:53:15 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88]
2020-04-19 19:53:15 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       :   best plan item cost 9,800 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       : plan cost 9,801
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:438 #:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'INFORMATION_SCHEMA', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 19:53:15 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25]
2020-04-19 19:53:15 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 19:53:15 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25]
2020-04-19 19:53:15 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25
2020-04-19 19:53:15 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       :   best plan item cost 9,600 index meta
2020-04-19 19:53:15 jdbc[3]: Plan       : plan cost 9,601
2020-04-19 19:53:15 jdbc[3]: 
/*SQL l:596 #:3 t:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'INFORMATION_SCHEMA', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 19:53:15 jdbc[3]: Plan       : calculate cost for plan [_2]
2020-04-19 19:53:15 jdbc[3]: Plan       :   for table filter _2
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:1007 #:18 t:2*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'PG_CATALOG', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_AM'};
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ATTRDEF'};
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:123 #:10*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ATTRIBUTE'};
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_AUTHID'};
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:123 #:13*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_CLASS'};
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:123 #:10*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_DATABASE'};
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:123 #:4 t:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_DESCRIPTION'};
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_GROUP'};
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_INDEX'};
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_INHERITS'};
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_NAMESPACE'};
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_PROC'};
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ROLES'};
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_SETTINGS'};
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TABLESPACE'};
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TRIGGER'};
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TYPE'};
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_USER'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 9,800 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 9,801
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:438 #:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 9,600 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 9,601
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:596 #:3*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'PG_CATALOG', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [_3]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter _3
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:1007 t:1*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'PUBLIC', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 9,900 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 9,901
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:438 #:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'PUBLIC', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 9,700 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 9,701
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:596 #:3*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'PUBLIC', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 324.72 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 325.72
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_AM'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ATTRDEF'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ATTRIBUTE'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_AUTHID'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_CLASS'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_DATABASE'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_DESCRIPTION'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_GROUP'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_INDEX'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_INHERITS'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_NAMESPACE'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_PROC'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ROLES'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_SETTINGS'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TABLESPACE'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TRIGGER'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TYPE'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 19:53:16 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_USER'};
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [SEQUENCES:-9:org.h2.table.InformationSchemaTable@3c9d5308]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter SEQUENCES:-9:org.h2.table.InformationSchemaTable@3c9d5308
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 19:53:16 jdbc[3]: 
/*SQL */SELECT * FROM INFORMATION_SCHEMA.SEQUENCES ORDER BY SEQUENCE_NAME;
2020-04-19 19:53:16 jdbc[3]: Plan       : calculate cost for plan [USERS:-10:org.h2.table.InformationSchemaTable@10f09af]
2020-04-19 19:53:16 jdbc[3]: Plan       :   for table filter USERS:-10:org.h2.table.InformationSchemaTable@10f09af
2020-04-19 19:53:16 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 19:53:16 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 19:53:16 jdbc[3]: 
/*SQL #:1*/SELECT * FROM INFORMATION_SCHEMA.USERS ORDER BY NAME;
2020-04-19 20:12:08 lock: 3 exclusive write lock requesting for SYS 
2020-04-19 20:12:08 lock: 3 exclusive write lock added for SYS 
2020-04-19 20:12:08 lock: 3 exclusive write lock unlock SYS 
2020-04-19 20:12:08 lock: 3 exclusive write lock requesting for SYS 
2020-04-19 20:12:08 lock: 3 exclusive write lock added for SYS 
2020-04-19 20:12:08 lock: 3 exclusive write lock requesting for TEST 
2020-04-19 20:12:08 lock: 3 exclusive write lock added for TEST 
2020-04-19 20:12:08 jdbc[3]: 
/*SQL t:3*/CREATE TABLE TEST(ID INT PRIMARY KEY, NAME VARCHAR(255));
2020-04-19 20:12:08 lock: 3 exclusive write lock unlock SYS 
2020-04-19 20:12:08 lock: 3 exclusive write lock unlock TEST 
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [SCHEMATA:-14:org.h2.table.InformationSchemaTable@32a0af9]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter SCHEMATA:-14:org.h2.table.InformationSchemaTable@32a0af9
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 20:12:09 jdbc[3]: 
/*SQL #:3*/SELECT SCHEMA_NAME TABLE_SCHEM, CATALOG_NAME TABLE_CATALOG,  IS_DEFAULT FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME;
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [SCHEMATA:-14:org.h2.table.InformationSchemaTable@32a0af9]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter SCHEMATA:-14:org.h2.table.InformationSchemaTable@32a0af9
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 20:12:09 jdbc[3]: 
/*SQL #:3*/SELECT SCHEMA_NAME TABLE_SCHEM, CATALOG_NAME TABLE_CATALOG,  IS_DEFAULT FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME;
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [_4]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter _4
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [_5]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter _5
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:1007 #:35 t:2*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'INFORMATION_SCHEMA', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [COLUMNS:-2:org.h2.table.InformationSchemaTable@7720a0f9]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter COLUMNS:-2:org.h2.table.InformationSchemaTable@7720a0f9
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 28 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 27.44 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 28.44
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CATALOGS'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CHECK_CONSTRAINTS'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLLATIONS'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:33*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLUMNS'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:8*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLUMN_PRIVILEGES'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CONSTANTS'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CONSTRAINT_COLUMN_USAGE'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CROSS_REFERENCES'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:16*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'DOMAINS'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:11*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'DOMAIN_CONSTRAINTS'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'FUNCTION_ALIASES'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:17*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'FUNCTION_COLUMNS'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'HELP'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:21*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'INDEXES'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'IN_DOUBT'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'KEY_COLUMN_USAGE'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'LOCKS'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'QUERY_STATISTICS'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'REFERENTIAL_CONSTRAINTS'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'RIGHTS'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'ROLES'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:8*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SCHEMATA'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:17*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SEQUENCES'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SESSIONS'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SESSION_STATE'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SETTINGS'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SYNONYMS'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLES'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_CONSTRAINTS'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:7*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_PRIVILEGES'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_TYPES'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TRIGGERS'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:14*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TYPE_INFO'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'USERS'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'VIEWS'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 9,800 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 9,801
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:438 #:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'INFORMATION_SCHEMA', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 9,600 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 9,601
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:596 #:3*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'INFORMATION_SCHEMA', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [_6]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter _6
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:1007 #:18 t:3*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'PG_CATALOG', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_AM'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ATTRDEF'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:10*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ATTRIBUTE'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:12*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_AUTHID'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:13*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_CLASS'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:10*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_DATABASE'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_DESCRIPTION'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_GROUP'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_INDEX'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_INHERITS'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_NAMESPACE'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_PROC'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ROLES'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_SETTINGS'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TABLESPACE'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TRIGGER'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:9*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TYPE'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_USER'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 9,800 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 9,801
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:438 #:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 9,600 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 9,601
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:596 #:3*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'PG_CATALOG', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [_7]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter _7
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 4,023
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 3,982.78
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 8,006.78
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:1007 #:1*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'PUBLIC', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PUBLIC', 2: 'TEST'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 9,900 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 9,901
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:438 #:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'PUBLIC', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 9,700 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 9,701
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:596 #:3*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'PUBLIC', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 324.72 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 325.72
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 321.44 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 322.44
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:433 #:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PUBLIC', 4: '\\', 5: 'TEST'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_AM'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ATTRDEF'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ATTRIBUTE'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:433 t:2*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_AUTHID'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_CLASS'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_DATABASE'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_DESCRIPTION'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_GROUP'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_INDEX'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_INHERITS'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_NAMESPACE'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_PROC'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ROLES'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_SETTINGS'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TABLESPACE'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TRIGGER'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TYPE'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 20:12:09 jdbc[3]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_USER'};
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [SEQUENCES:-9:org.h2.table.InformationSchemaTable@3c9d5308]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter SEQUENCES:-9:org.h2.table.InformationSchemaTable@3c9d5308
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 20:12:09 jdbc[3]: 
/*SQL */SELECT * FROM INFORMATION_SCHEMA.SEQUENCES ORDER BY SEQUENCE_NAME;
2020-04-19 20:12:09 jdbc[3]: Plan       : calculate cost for plan [USERS:-10:org.h2.table.InformationSchemaTable@10f09af]
2020-04-19 20:12:09 jdbc[3]: Plan       :   for table filter USERS:-10:org.h2.table.InformationSchemaTable@10f09af
2020-04-19 20:12:09 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 20:12:09 jdbc[3]: Plan       : plan cost 10,001
2020-04-19 20:12:09 jdbc[3]: 
/*SQL #:1*/SELECT * FROM INFORMATION_SCHEMA.USERS ORDER BY NAME;
2020-04-19 20:12:15 lock: 3 exclusive write lock requesting for SYS 
2020-04-19 20:12:15 lock: 3 exclusive write lock added for SYS 
2020-04-19 20:12:15 lock: 3 exclusive write lock unlock SYS 
2020-04-19 20:13:04 lock: 3 shared read lock requesting for TEST 
2020-04-19 20:13:04 lock: 3 shared read lock ok TEST 
2020-04-19 20:13:04 jdbc[3]: 
/*SQL #:1*/insert into test values(1,'jack');
2020-04-19 20:13:04 lock: 3 shared read lock unlock TEST 
2020-04-19 20:13:44 jdbc[3]: Plan       : calculate cost for plan [PUBLIC.TEST]
2020-04-19 20:13:44 jdbc[3]: Plan       :   for table filter PUBLIC.TEST
2020-04-19 20:13:44 jdbc[3]: Table      :     potential plan item cost 10,210 index PUBLIC.TEST.tableScan
2020-04-19 20:13:44 jdbc[3]: Table      :     potential plan item cost 10,220 index PUBLIC.PRIMARY_KEY_2
2020-04-19 20:13:44 jdbc[3]: Plan       :   best plan item cost 10,210 index PUBLIC.TEST.tableScan
2020-04-19 20:13:44 jdbc[3]: Plan       : plan cost 10,211
2020-04-19 20:13:44 jdbc[3]: 
/*SQL #:1*/select * from test;
2020-04-19 20:13:44 jdbc[3]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 20:13:44 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 20:13:44 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 20:13:44 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:13:44 jdbc[3]: Table      :     potential plan item cost 4,322 index meta
2020-04-19 20:13:44 jdbc[3]: Plan       :   best plan item cost 4,278.78 index meta
2020-04-19 20:13:44 jdbc[3]: Plan       : plan cost 4,279.78
2020-04-19 20:13:44 jdbc[3]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 20:13:44 jdbc[3]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 20:13:44 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:13:44 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 20:13:44 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 20:13:44 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 20:13:44 jdbc[3]: 
/*SQL l:414 #:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'PUBLIC', 3: 'TEST', 4: '\\', 5: 'TABLE'};
2020-04-19 20:13:44 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 20:13:44 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 20:13:44 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:13:44 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 20:13:44 jdbc[3]: Plan       :   best plan item cost 321.44 index meta
2020-04-19 20:13:44 jdbc[3]: Plan       : plan cost 322.44
2020-04-19 20:13:44 jdbc[3]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 20:13:44 jdbc[3]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 20:13:44 jdbc[3]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:13:44 jdbc[3]: Table      :     potential plan item cost 328 index meta
2020-04-19 20:13:44 jdbc[3]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 20:13:44 jdbc[3]: Plan       : plan cost 319.16
2020-04-19 20:13:44 jdbc[3]: 
/*SQL l:318 #:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, ORDINAL_POSITION KEY_SEQ, COALESCE(CONSTRAINT_NAME, INDEX_NAME) PK_NAME FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME = ? AND PRIMARY_KEY = TRUE ORDER BY COLUMN_NAME {1: '%', 2: '\\', 3: 'PUBLIC', 4: '\\', 5: 'TEST'};
2020-04-19 20:45:07 database: connecting session #4 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 20:45:07 jdbc[4]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 20:45:07 jdbc[4]: 
/**/Connection conn2 = DriverManager.getConnection("jdbc:h2:h2_db2", "SA", "");
2020-04-19 20:45:07 jdbc[4]: 
/**/Statement stat10 = conn2.createStatement();
2020-04-19 20:45:07 jdbc[4]: 
/**/Statement stat11 = conn2.createStatement();
2020-04-19 20:45:07 jdbc[4]: 
/**/stat11.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 20:45:07 jdbc[4]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 20:45:07 jdbc[4]: 
/**/ResultSet rs182 = stat11.executeQuery("select oid from pg_catalog.pg_type");
2020-04-19 20:45:07 jdbc[4]: Plan       : calculate cost for plan [PG_TYPE:-1016:org.h2.mode.PgCatalogTable@337f727e]
2020-04-19 20:45:07 jdbc[4]: Plan       :   for table filter PG_TYPE:-1016:org.h2.mode.PgCatalogTable@337f727e
2020-04-19 20:45:07 jdbc[4]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 20:45:07 jdbc[4]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 20:45:07 jdbc[4]: Plan       : plan cost 10,001
2020-04-19 20:45:07 jdbc[4]: 
/*SQL #:21*/select oid from pg_catalog.pg_type;
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.next();
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.getInt(1);
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.next();
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.getInt(1);
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.next();
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.getInt(1);
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.next();
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.getInt(1);
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.next();
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.getInt(1);
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.next();
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.getInt(1);
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.next();
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.getInt(1);
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.next();
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.getInt(1);
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.next();
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.getInt(1);
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.next();
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.getInt(1);
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.next();
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.getInt(1);
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.next();
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.getInt(1);
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.next();
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.getInt(1);
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.next();
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.getInt(1);
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.next();
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.getInt(1);
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.next();
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.getInt(1);
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.next();
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.getInt(1);
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.next();
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.getInt(1);
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.next();
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.getInt(1);
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.next();
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.getInt(1);
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.next();
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.getInt(1);
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.next();
2020-04-19 20:45:07 jdbc[4]: 
/**/rs182.close();
2020-04-19 20:45:07 jdbc[4]: 
/**/stat11.close();
2020-04-19 20:45:07 jdbc[4]: 
/**/conn2.getAutoCommit();
2020-04-19 20:45:08 jdbc[4]: 
/**/PreparedStatement prep69 = conn2.prepareStatement("SELECT * from t_1");
2020-04-19 20:45:08 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "T_1" not found; SQL statement:
SELECT * from t_1 [42102-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:459)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:200)
	at org.h2.message.DbException.get(DbException.java:176)
	at org.h2.command.Parser.readTableOrView(Parser.java:8558)
	at org.h2.command.Parser.readTableFilter(Parser.java:2075)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2968)
	at org.h2.command.Parser.parseSelect(Parser.java:3095)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2958)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2793)
	at org.h2.command.Parser.parseQuery(Parser.java:2763)
	at org.h2.command.Parser.parsePrepared(Parser.java:986)
	at org.h2.command.Parser.parse(Parser.java:961)
	at org.h2.command.Parser.parse(Parser.java:933)
	at org.h2.command.Parser.prepareCommand(Parser.java:861)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:307)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:268)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-19 20:45:08 jdbc[4]: 
/**/conn2.getAutoCommit();
2020-04-19 20:45:08 jdbc[4]: 
/**/conn2.close();
2020-04-19 20:45:08 lock: 4 shared read lock unlock SYS 
2020-04-19 20:45:08 database: disconnecting session #4
2020-04-19 20:45:08 database: disconnected session #4
2020-04-19 20:46:00 database: connecting session #5 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 20:46:00 jdbc[5]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 20:46:00 jdbc[5]: 
/**/Connection conn3 = DriverManager.getConnection("jdbc:h2:h2_db2", "SA", "");
2020-04-19 20:46:00 jdbc[5]: 
/**/Statement stat12 = conn3.createStatement();
2020-04-19 20:46:00 jdbc[5]: 
/**/Statement stat13 = conn3.createStatement();
2020-04-19 20:46:00 jdbc[5]: 
/**/stat13.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 20:46:00 jdbc[5]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 20:46:00 jdbc[5]: 
/**/stat13.close();
2020-04-19 20:46:00 jdbc[5]: 
/**/conn3.getAutoCommit();
2020-04-19 20:46:00 jdbc[5]: 
/**/PreparedStatement prep70 = conn3.prepareStatement("SELECT * from test");
2020-04-19 20:46:00 jdbc[5]: Plan       : calculate cost for plan [PUBLIC.TEST]
2020-04-19 20:46:00 jdbc[5]: Plan       :   for table filter PUBLIC.TEST
2020-04-19 20:46:00 jdbc[5]: Table      :     potential plan item cost 10,210 index PUBLIC.TEST.tableScan
2020-04-19 20:46:00 jdbc[5]: Table      :     potential plan item cost 10,220 index PUBLIC.PRIMARY_KEY_2
2020-04-19 20:46:00 jdbc[5]: Plan       :   best plan item cost 10,210 index PUBLIC.TEST.tableScan
2020-04-19 20:46:00 jdbc[5]: Plan       : plan cost 10,211
2020-04-19 20:46:00 jdbc[5]: 
/**/ParameterMetaData pMeta0 = prep70.getParameterMetaData();
2020-04-19 20:46:00 jdbc[5]: 
/**/pMeta0.getParameterCount();
2020-04-19 20:46:00 jdbc[5]: 
/**/prep70.getMetaData();
2020-04-19 20:46:00 jdbc[5]: 
/**/ResultSetMetaData rsMeta3 = prep70.getMetaData();
2020-04-19 20:46:00 jdbc[5]: 
/**/conn3.getCatalog();
2020-04-19 20:46:00 jdbc[5]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 20:46:00 jdbc[5]: 
/**/rsMeta3.getColumnCount();
2020-04-19 20:46:00 jdbc[5]: 
/**/rsMeta3.getColumnName(1);
2020-04-19 20:46:00 jdbc[5]: 
/**/rsMeta3.getColumnType(1);
2020-04-19 20:46:00 jdbc[5]: 
/**/rsMeta3.getColumnDisplaySize(1);
2020-04-19 20:46:00 jdbc[5]: 
/**/rsMeta3.getColumnName(2);
2020-04-19 20:46:00 jdbc[5]: 
/**/rsMeta3.getColumnType(2);
2020-04-19 20:46:00 jdbc[5]: 
/**/rsMeta3.getColumnDisplaySize(2);
2020-04-19 20:46:00 jdbc[5]: 
/**/prep70.setMaxRows(0);
2020-04-19 20:46:00 jdbc[5]: 
/**/prep70.execute();
2020-04-19 20:46:00 jdbc[5]: 
/*SQL #:1*/SELECT * from test;
2020-04-19 20:46:00 jdbc[5]: 
/**/ResultSet rs184 = prep70.getResultSet();
2020-04-19 20:46:00 jdbc[5]: 
/**/rs184.next();
2020-04-19 20:46:00 jdbc[5]: 
/**/ResultSetMetaData rsMeta4 = rs184.getMetaData();
2020-04-19 20:46:00 jdbc[5]: 
/**/conn3.getCatalog();
2020-04-19 20:46:00 jdbc[5]: 
/**/rsMeta4.getColumnCount();
2020-04-19 20:46:00 jdbc[5]: 
/**/rsMeta4.getColumnType(1);
2020-04-19 20:46:00 jdbc[5]: 
/**/rsMeta4.getColumnType(2);
2020-04-19 20:46:00 jdbc[5]: 
/**/rs184.next();
2020-04-19 20:46:00 jdbc[5]: 
/**/conn3.getAutoCommit();
2020-04-19 20:46:00 jdbc[5]: 
/**/conn3.close();
2020-04-19 20:46:00 lock: 5 shared read lock unlock SYS 
2020-04-19 20:46:00 database: disconnecting session #5
2020-04-19 20:46:00 database: disconnected session #5
2020-04-19 20:46:22 database: connecting session #6 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 20:46:22 jdbc[6]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 20:46:22 jdbc[6]: 
/**/Connection conn4 = DriverManager.getConnection("jdbc:h2:h2_db2", "SA", "");
2020-04-19 20:46:22 jdbc[6]: 
/**/Statement stat14 = conn4.createStatement();
2020-04-19 20:46:22 jdbc[6]: 
/**/Statement stat15 = conn4.createStatement();
2020-04-19 20:46:22 jdbc[6]: 
/**/stat15.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 20:46:22 jdbc[6]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 20:46:22 jdbc[6]: 
/**/stat15.close();
2020-04-19 20:46:22 jdbc[6]: 
/**/conn4.getAutoCommit();
2020-04-19 20:46:22 jdbc[6]: 
/**/PreparedStatement prep71 = conn4.prepareStatement("SELECT * from test");
2020-04-19 20:46:22 jdbc[6]: Plan       : calculate cost for plan [PUBLIC.TEST]
2020-04-19 20:46:22 jdbc[6]: Plan       :   for table filter PUBLIC.TEST
2020-04-19 20:46:22 jdbc[6]: Table      :     potential plan item cost 10,210 index PUBLIC.TEST.tableScan
2020-04-19 20:46:22 jdbc[6]: Table      :     potential plan item cost 10,220 index PUBLIC.PRIMARY_KEY_2
2020-04-19 20:46:22 jdbc[6]: Plan       :   best plan item cost 10,210 index PUBLIC.TEST.tableScan
2020-04-19 20:46:22 jdbc[6]: Plan       : plan cost 10,211
2020-04-19 20:46:22 jdbc[6]: 
/**/ParameterMetaData pMeta1 = prep71.getParameterMetaData();
2020-04-19 20:46:22 jdbc[6]: 
/**/pMeta1.getParameterCount();
2020-04-19 20:46:22 jdbc[6]: 
/**/prep71.getMetaData();
2020-04-19 20:46:22 jdbc[6]: 
/**/ResultSetMetaData rsMeta5 = prep71.getMetaData();
2020-04-19 20:46:22 jdbc[6]: 
/**/conn4.getCatalog();
2020-04-19 20:46:22 jdbc[6]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 20:46:22 jdbc[6]: 
/**/rsMeta5.getColumnCount();
2020-04-19 20:46:22 jdbc[6]: 
/**/rsMeta5.getColumnName(1);
2020-04-19 20:46:22 jdbc[6]: 
/**/rsMeta5.getColumnType(1);
2020-04-19 20:46:22 jdbc[6]: 
/**/rsMeta5.getColumnDisplaySize(1);
2020-04-19 20:46:22 jdbc[6]: 
/**/rsMeta5.getColumnName(2);
2020-04-19 20:46:22 jdbc[6]: 
/**/rsMeta5.getColumnType(2);
2020-04-19 20:46:22 jdbc[6]: 
/**/rsMeta5.getColumnDisplaySize(2);
2020-04-19 20:46:22 jdbc[6]: 
/**/prep71.setMaxRows(0);
2020-04-19 20:46:22 jdbc[6]: 
/**/prep71.execute();
2020-04-19 20:46:22 jdbc[6]: 
/*SQL #:1*/SELECT * from test;
2020-04-19 20:46:22 jdbc[6]: 
/**/ResultSet rs186 = prep71.getResultSet();
2020-04-19 20:46:22 jdbc[6]: 
/**/rs186.next();
2020-04-19 20:46:22 jdbc[6]: 
/**/ResultSetMetaData rsMeta6 = rs186.getMetaData();
2020-04-19 20:46:22 jdbc[6]: 
/**/conn4.getCatalog();
2020-04-19 20:46:22 jdbc[6]: 
/**/rsMeta6.getColumnCount();
2020-04-19 20:46:22 jdbc[6]: 
/**/rsMeta6.getColumnType(1);
2020-04-19 20:46:22 jdbc[6]: 
/**/rsMeta6.getColumnType(2);
2020-04-19 20:46:22 jdbc[6]: 
/**/rs186.next();
2020-04-19 20:46:22 jdbc[6]: 
/**/conn4.getAutoCommit();
2020-04-19 20:46:22 jdbc[6]: 
/**/conn4.close();
2020-04-19 20:46:22 lock: 6 shared read lock unlock SYS 
2020-04-19 20:46:22 database: disconnecting session #6
2020-04-19 20:46:22 database: disconnected session #6
2020-04-19 20:47:21 database: connecting session #7 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 20:47:21 jdbc[7]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 20:47:21 jdbc[7]: 
/**/Connection conn5 = DriverManager.getConnection("jdbc:h2:h2_db2", "SA", "");
2020-04-19 20:47:21 jdbc[7]: 
/**/Statement stat16 = conn5.createStatement();
2020-04-19 20:47:21 jdbc[7]: 
/**/Statement stat17 = conn5.createStatement();
2020-04-19 20:47:21 jdbc[7]: 
/**/stat17.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 20:47:21 jdbc[7]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 20:47:21 jdbc[7]: 
/**/stat17.close();
2020-04-19 20:47:21 jdbc[7]: 
/**/conn5.getAutoCommit();
2020-04-19 20:47:21 jdbc[7]: 
/**/PreparedStatement prep72 = conn5.prepareStatement("SELECT * from test");
2020-04-19 20:47:21 jdbc[7]: Plan       : calculate cost for plan [PUBLIC.TEST]
2020-04-19 20:47:21 jdbc[7]: Plan       :   for table filter PUBLIC.TEST
2020-04-19 20:47:21 jdbc[7]: Table      :     potential plan item cost 10,210 index PUBLIC.TEST.tableScan
2020-04-19 20:47:21 jdbc[7]: Table      :     potential plan item cost 10,220 index PUBLIC.PRIMARY_KEY_2
2020-04-19 20:47:21 jdbc[7]: Plan       :   best plan item cost 10,210 index PUBLIC.TEST.tableScan
2020-04-19 20:47:21 jdbc[7]: Plan       : plan cost 10,211
2020-04-19 20:47:21 jdbc[7]: 
/**/ParameterMetaData pMeta2 = prep72.getParameterMetaData();
2020-04-19 20:47:21 jdbc[7]: 
/**/pMeta2.getParameterCount();
2020-04-19 20:47:21 jdbc[7]: 
/**/prep72.getMetaData();
2020-04-19 20:47:21 jdbc[7]: 
/**/ResultSetMetaData rsMeta7 = prep72.getMetaData();
2020-04-19 20:47:21 jdbc[7]: 
/**/conn5.getCatalog();
2020-04-19 20:47:21 jdbc[7]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 20:47:21 jdbc[7]: 
/**/rsMeta7.getColumnCount();
2020-04-19 20:47:21 jdbc[7]: 
/**/rsMeta7.getColumnName(1);
2020-04-19 20:47:21 jdbc[7]: 
/**/rsMeta7.getColumnType(1);
2020-04-19 20:47:21 jdbc[7]: 
/**/rsMeta7.getColumnDisplaySize(1);
2020-04-19 20:47:21 jdbc[7]: 
/**/rsMeta7.getColumnName(2);
2020-04-19 20:47:21 jdbc[7]: 
/**/rsMeta7.getColumnType(2);
2020-04-19 20:47:21 jdbc[7]: 
/**/rsMeta7.getColumnDisplaySize(2);
2020-04-19 20:47:21 jdbc[7]: 
/**/prep72.setMaxRows(0);
2020-04-19 20:47:21 jdbc[7]: 
/**/prep72.execute();
2020-04-19 20:53:06 jdbc[7]: 
/*SQL #:1 t:344662*/SELECT * from test;
2020-04-19 20:53:47 command: slow query: 385,221 ms
2020-04-19 20:54:32 jdbc[7]: 
/**/ResultSet rs188 = prep72.getResultSet();
2020-04-19 20:54:46 jdbc[7]: 
/**/rs188.next();
2020-04-19 20:55:14 jdbc[7]: 
/**/ResultSetMetaData rsMeta8 = rs188.getMetaData();
2020-04-19 20:55:14 jdbc[7]: 
/**/conn5.getCatalog();
2020-04-19 20:55:16 jdbc[7]: 
/**/rsMeta8.getColumnCount();
2020-04-19 20:55:37 jdbc[7]: 
/**/rsMeta8.getColumnType(1);
2020-04-19 20:59:33 jdbc[7]: 
/**/rsMeta8.getColumnType(2);
2020-04-19 21:01:49 jdbc[7]: 
/**/rs188.next();
2020-04-19 21:04:23 jdbc[7]: 
/**/conn5.getAutoCommit();
2020-04-19 21:05:12 jdbc[7]: 
/**/conn5.close();
2020-04-19 21:05:12 lock: 7 shared read lock unlock SYS 
2020-04-19 21:05:12 database: disconnecting session #7
2020-04-19 21:05:12 database: disconnected session #7
2020-04-19 22:04:33 database: connecting session #8 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 22:04:33 jdbc[8]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 22:04:33 jdbc[8]: 
/**/Connection conn6 = DriverManager.getConnection("jdbc:h2:h2_db2", "SA", "");
2020-04-19 22:04:33 jdbc[8]: 
/**/Statement stat18 = conn6.createStatement();
2020-04-19 22:04:33 jdbc[8]: 
/**/Statement stat19 = conn6.createStatement();
2020-04-19 22:04:33 jdbc[8]: 
/**/stat19.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 22:04:33 jdbc[8]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 22:04:33 jdbc[8]: 
/**/stat19.close();
2020-04-19 22:04:33 jdbc[8]: 
/**/conn6.getAutoCommit();
2020-04-19 22:04:33 jdbc[8]: 
/**/Statement stat20 = conn6.createStatement();
2020-04-19 22:04:33 jdbc[8]: 
/**/stat20.execute("set DATESTYLE ISO");
2020-04-19 22:04:33 jdbc[8]: 
/*SQL */set DATESTYLE ISO;
2020-04-19 22:04:33 jdbc[8]: 
/**/stat20.getUpdateCount();
2020-04-19 22:04:33 jdbc[8]: 
/**/stat20.close();
2020-04-19 22:04:33 jdbc[8]: 
/**/conn6.getAutoCommit();
2020-04-19 22:04:33 jdbc[8]: 
/**/Statement stat21 = conn6.createStatement();
2020-04-19 22:04:33 jdbc[8]: 
/**/stat21.execute("SELECT DISTINCT datlastsysoid FROM pg_database");
2020-04-19 22:04:33 jdbc[8]: Plan       : calculate cost for plan [PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@7850e781]
2020-04-19 22:04:33 jdbc[8]: Plan       :   for table filter PG_DATABASE:-1005:org.h2.mode.PgCatalogTable@7850e781
2020-04-19 22:04:33 jdbc[8]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:04:33 jdbc[8]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 22:04:33 jdbc[8]: Plan       : plan cost 10,001
2020-04-19 22:04:40 jdbc[8]: 
/*SQL #:1 t:6308*/SELECT DISTINCT datlastsysoid FROM pg_database;
2020-04-19 22:04:40 command: slow query: 6,308 ms
2020-04-19 22:04:40 jdbc[8]: 
/**/ResultSet rs191 = stat21.getResultSet();
2020-04-19 22:04:40 jdbc[8]: 
/**/ResultSetMetaData rsMeta9 = rs191.getMetaData();
2020-04-19 22:04:40 jdbc[8]: 
/**/conn6.getCatalog();
2020-04-19 22:04:40 jdbc[8]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta9.getColumnCount();
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta9.getColumnName(1);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta9.getColumnType(1);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta9.getColumnDisplaySize(1);
2020-04-19 22:04:40 jdbc[8]: 
/**/rs191.next();
2020-04-19 22:04:40 jdbc[8]: 
/**/ResultSetMetaData rsMeta10 = rs191.getMetaData();
2020-04-19 22:04:40 jdbc[8]: 
/**/conn6.getCatalog();
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta10.getColumnCount();
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta10.getColumnType(1);
2020-04-19 22:04:40 jdbc[8]: 
/**/rs191.next();
2020-04-19 22:04:40 jdbc[8]: 
/**/stat21.close();
2020-04-19 22:04:40 jdbc[8]: 
/**/conn6.getAutoCommit();
2020-04-19 22:04:40 jdbc[8]: 
/**/Statement stat22 = conn6.createStatement();
2020-04-19 22:04:40 jdbc[8]: 
/**/stat22.execute("SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid");
2020-04-19 22:04:40 jdbc[8]: Plan       : calculate cost for plan [D, T]
2020-04-19 22:04:40 jdbc[8]: Plan       :   for table filter D
2020-04-19 22:04:40 jdbc[8]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:04:40 jdbc[8]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:04:40 jdbc[8]: Plan       :   best plan item cost 99,510,000 index meta
2020-04-19 22:04:40 jdbc[8]: Plan       :   for table filter T
2020-04-19 22:04:40 jdbc[8]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:04:40 jdbc[8]: Plan       :   best plan item cost 9,950 index meta
2020-04-19 22:04:40 jdbc[8]: Plan       : plan cost 990,224,019,951
2020-04-19 22:04:40 jdbc[8]: 
/*SQL #:1 t:1*/SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid;
2020-04-19 22:04:40 jdbc[8]: 
/**/ResultSet rs192 = stat22.getResultSet();
2020-04-19 22:04:40 jdbc[8]: 
/**/ResultSetMetaData rsMeta11 = rs192.getMetaData();
2020-04-19 22:04:40 jdbc[8]: 
/**/conn6.getCatalog();
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnCount();
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnName(1);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnType(1);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnDisplaySize(1);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnName(2);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnType(2);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnDisplaySize(2);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnName(3);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnType(3);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnDisplaySize(3);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnName(4);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnType(4);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnDisplaySize(4);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnName(5);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnType(5);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnDisplaySize(5);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnName(6);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnType(6);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnDisplaySize(6);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnName(7);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnType(7);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnDisplaySize(7);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnName(8);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnType(8);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnDisplaySize(8);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnName(9);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnType(9);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta11.getColumnDisplaySize(9);
2020-04-19 22:04:40 jdbc[8]: 
/**/rs192.next();
2020-04-19 22:04:40 jdbc[8]: 
/**/ResultSetMetaData rsMeta12 = rs192.getMetaData();
2020-04-19 22:04:40 jdbc[8]: 
/**/conn6.getCatalog();
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta12.getColumnCount();
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta12.getColumnType(1);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta12.getColumnType(2);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta12.getColumnType(3);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta12.getColumnType(4);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta12.getColumnType(5);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta12.getColumnType(6);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta12.getColumnType(7);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta12.getColumnType(8);
2020-04-19 22:04:40 jdbc[8]: 
/**/rsMeta12.getColumnType(9);
2020-04-19 22:04:40 jdbc[8]: 
/**/rs192.next();
2020-04-19 22:04:40 jdbc[8]: 
/**/stat22.close();
2020-04-19 22:04:40 jdbc[8]: 
/**/conn6.getAutoCommit();
2020-04-19 22:04:52 jdbc[8]: 
/**/conn6.close();
2020-04-19 22:04:52 lock: 8 shared read lock unlock SYS 
2020-04-19 22:04:52 database: disconnecting session #8
2020-04-19 22:04:52 database: disconnected session #8
2020-04-19 22:04:52 database: connecting session #9 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 22:04:52 jdbc[9]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 22:04:52 jdbc[9]: 
/**/Connection conn7 = DriverManager.getConnection("jdbc:h2:H2_DB2", "SA", "");
2020-04-19 22:04:52 jdbc[9]: 
/**/Statement stat23 = conn7.createStatement();
2020-04-19 22:04:52 jdbc[9]: 
/**/Statement stat24 = conn7.createStatement();
2020-04-19 22:04:52 jdbc[9]: 
/**/stat24.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 22:04:52 jdbc[9]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 22:04:52 jdbc[9]: 
/**/stat24.close();
2020-04-19 22:04:52 jdbc[9]: 
/**/conn7.getAutoCommit();
2020-04-19 22:04:52 jdbc[9]: 
/**/Statement stat25 = conn7.createStatement();
2020-04-19 22:04:52 jdbc[9]: 
/**/stat25.execute("set DATESTYLE ISO");
2020-04-19 22:04:52 jdbc[9]: 
/*SQL */set DATESTYLE ISO;
2020-04-19 22:04:52 jdbc[9]: 
/**/stat25.getUpdateCount();
2020-04-19 22:04:52 jdbc[9]: 
/**/stat25.close();
2020-04-19 22:04:52 jdbc[9]: 
/**/conn7.getAutoCommit();
2020-04-19 22:04:52 jdbc[9]: 
/**/Statement stat26 = conn7.createStatement();
2020-04-19 22:04:52 jdbc[9]: 
/**/stat26.execute("SELECT oid, nspname AS schemaname, nspacl, pg_get_userbyid(nspowner) AS schemaowner, obj_description(oid) AS description FROM pg_namespace");
2020-04-19 22:04:52 jdbc[9]: Plan       : calculate cost for plan [PG_NAMESPACE:-1010:org.h2.mode.PgCatalogTable@778adfa8]
2020-04-19 22:04:52 jdbc[9]: Plan       :   for table filter PG_NAMESPACE:-1010:org.h2.mode.PgCatalogTable@778adfa8
2020-04-19 22:04:52 jdbc[9]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:04:52 jdbc[9]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 22:04:52 jdbc[9]: Plan       : plan cost 10,001
2020-04-19 22:04:52 jdbc[9]: 
/*SQL #:3 t:1*/SELECT oid, nspname AS schemaname, nspacl, pg_get_userbyid(nspowner) AS schemaowner, obj_description(oid) AS description FROM pg_namespace;
2020-04-19 22:04:52 jdbc[9]: 
/**/ResultSet rs195 = stat26.getResultSet();
2020-04-19 22:04:52 jdbc[9]: 
/**/ResultSetMetaData rsMeta13 = rs195.getMetaData();
2020-04-19 22:04:52 jdbc[9]: 
/**/conn7.getCatalog();
2020-04-19 22:04:52 jdbc[9]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta13.getColumnCount();
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta13.getColumnName(1);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta13.getColumnType(1);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta13.getColumnDisplaySize(1);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta13.getColumnName(2);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta13.getColumnType(2);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta13.getColumnDisplaySize(2);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta13.getColumnName(3);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta13.getColumnType(3);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta13.getColumnDisplaySize(3);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta13.getColumnName(4);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta13.getColumnType(4);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta13.getColumnDisplaySize(4);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta13.getColumnName(5);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta13.getColumnType(5);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta13.getColumnDisplaySize(5);
2020-04-19 22:04:52 jdbc[9]: 
/**/rs195.next();
2020-04-19 22:04:52 jdbc[9]: 
/**/ResultSetMetaData rsMeta14 = rs195.getMetaData();
2020-04-19 22:04:52 jdbc[9]: 
/**/conn7.getCatalog();
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta14.getColumnCount();
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta14.getColumnType(1);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta14.getColumnType(2);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta14.getColumnType(3);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta14.getColumnType(4);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta14.getColumnType(5);
2020-04-19 22:04:52 jdbc[9]: 
/**/rs195.next();
2020-04-19 22:04:52 jdbc[9]: 
/**/ResultSetMetaData rsMeta15 = rs195.getMetaData();
2020-04-19 22:04:52 jdbc[9]: 
/**/conn7.getCatalog();
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta15.getColumnCount();
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta15.getColumnType(1);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta15.getColumnType(2);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta15.getColumnType(3);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta15.getColumnType(4);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta15.getColumnType(5);
2020-04-19 22:04:52 jdbc[9]: 
/**/rs195.next();
2020-04-19 22:04:52 jdbc[9]: 
/**/ResultSetMetaData rsMeta16 = rs195.getMetaData();
2020-04-19 22:04:52 jdbc[9]: 
/**/conn7.getCatalog();
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta16.getColumnCount();
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta16.getColumnType(1);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta16.getColumnType(2);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta16.getColumnType(3);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta16.getColumnType(4);
2020-04-19 22:04:52 jdbc[9]: 
/**/rsMeta16.getColumnType(5);
2020-04-19 22:04:52 jdbc[9]: 
/**/rs195.next();
2020-04-19 22:04:52 jdbc[9]: 
/**/stat26.close();
2020-04-19 22:04:52 jdbc[9]: 
/**/conn7.getAutoCommit();
2020-04-19 22:04:52 jdbc[9]: 
/**/Statement stat27 = conn7.createStatement();
2020-04-19 22:04:52 jdbc[9]: 
/**/stat27.execute("SELECT COUNT(*) FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace WHERE c.relkind = ANY ('{r,v,m}'::char[]) UNION SELECT COUNT(*) FROM pg_attribute a JOIN pg_class c on a.attrelid = c.oid JOIN pg_namespace n on c.relnamespace = n.oid JOIN pg_type tp on tp.typelem = a.atttypid WHERE a.attnum > 0 UNION SELECT COUNT(*) FROM information_schema.routines ");
2020-04-19 22:04:52 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT COUNT(*) FROM PG_CLASS C LEFT JOIN PG_NAMESPACE N ON N.OID = C.RELNAMESPACE WHERE C.RELKIND = ANY ('{r,v,m}'::CHAR[[*]]) UNION SELECT COUNT(*) FROM PG_ATTRIBUTE A JOIN PG_CLASS C ON A.ATTRELID = C.OID JOIN PG_NAMESPACE N ON C.RELNAMESPACE = N.OID JOIN PG_TYPE TP ON TP.TYPELEM = A.ATTTYPID WHERE A.ATTNUM > 0 UNION SELECT COUNT(*) FROM INFORMATION_SCHEMA.ROUTINES "; expected "VARYING, LARGE, (, ARRAY, AT, FORMAT, *, /, %, +, -, ||, NOT, ILIKE, REGEXP, AND, OR, )"; SQL statement:
SELECT COUNT(*) FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace WHERE c.relkind = ANY ('{r,v,m}'::char[]) UNION SELECT COUNT(*) FROM pg_attribute a JOIN pg_class c on a.attrelid = c.oid JOIN pg_namespace n on c.relnamespace = n.oid JOIN pg_type tp on tp.typelem = a.atttypid WHERE a.attnum > 0 UNION SELECT COUNT(*) FROM information_schema.routines  [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:459)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.getSyntaxError(DbException.java:238)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1176)
	at org.h2.command.Parser.read(Parser.java:5558)
	at org.h2.command.Parser.readAggregate(Parser.java:3721)
	at org.h2.command.Parser.readFunction(Parser.java:3974)
	at org.h2.command.Parser.readTerm(Parser.java:5003)
	at org.h2.command.Parser.readFactor(Parser.java:3564)
	at org.h2.command.Parser.readSum(Parser.java:3551)
	at org.h2.command.Parser.readConcat(Parser.java:3529)
	at org.h2.command.Parser.readComparison(Parser.java:3520)
	at org.h2.command.Parser.readCondition(Parser.java:3373)
	at org.h2.command.Parser.readExpressionWithGlobalConditions(Parser.java:3229)
	at org.h2.command.Parser.parseSelect(Parser.java:3098)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2958)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2793)
	at org.h2.command.Parser.parseQuery(Parser.java:2763)
	at org.h2.command.Parser.parsePrepared(Parser.java:986)
	at org.h2.command.Parser.parse(Parser.java:961)
	at org.h2.command.Parser.parse(Parser.java:937)
	at org.h2.command.Parser.prepareCommand(Parser.java:861)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-19 22:04:52 jdbc[9]: 
/**/stat27.close();
2020-04-19 22:04:52 jdbc[9]: 
/**/conn7.getAutoCommit();
2020-04-19 22:04:52 jdbc[9]: 
/**/Statement stat28 = conn7.createStatement();
2020-04-19 22:04:52 jdbc[9]: 
/**/stat28.execute(" SELECT n.nspname, c.relname, c.relkind FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace WHERE c.relkind = ANY ('{r,v,m}'::char[])  ORDER BY n.nspname, c.relname");
2020-04-19 22:04:52 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement " SELECT N.NSPNAME, C.RELNAME, C.RELKIND FROM PG_CLASS C LEFT JOIN PG_NAMESPACE N ON N.OID = C.RELNAMESPACE WHERE C.RELKIND = ANY ('{r,v,m}'::CHAR[[*]])  ORDER BY N.NSPNAME, C.RELNAME"; expected "VARYING, LARGE, (, ARRAY, AT, FORMAT, *, /, %, +, -, ||, NOT, ILIKE, REGEXP, AND, OR, )"; SQL statement:
 SELECT n.nspname, c.relname, c.relkind FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace WHERE c.relkind = ANY ('{r,v,m}'::char[])  ORDER BY n.nspname, c.relname [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:459)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.getSyntaxError(DbException.java:238)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1176)
	at org.h2.command.Parser.read(Parser.java:5558)
	at org.h2.command.Parser.readAggregate(Parser.java:3721)
	at org.h2.command.Parser.readFunction(Parser.java:3974)
	at org.h2.command.Parser.readTerm(Parser.java:5003)
	at org.h2.command.Parser.readFactor(Parser.java:3564)
	at org.h2.command.Parser.readSum(Parser.java:3551)
	at org.h2.command.Parser.readConcat(Parser.java:3529)
	at org.h2.command.Parser.readComparison(Parser.java:3520)
	at org.h2.command.Parser.readCondition(Parser.java:3373)
	at org.h2.command.Parser.readExpressionWithGlobalConditions(Parser.java:3229)
	at org.h2.command.Parser.parseSelect(Parser.java:3098)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2958)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2793)
	at org.h2.command.Parser.parseQuery(Parser.java:2763)
	at org.h2.command.Parser.parsePrepared(Parser.java:986)
	at org.h2.command.Parser.parse(Parser.java:961)
	at org.h2.command.Parser.parse(Parser.java:937)
	at org.h2.command.Parser.prepareCommand(Parser.java:861)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-19 22:04:52 jdbc[9]: 
/**/stat28.close();
2020-04-19 22:04:52 jdbc[9]: 
/**/conn7.getAutoCommit();
2020-04-19 22:04:52 jdbc[9]: 
/**/Statement stat29 = conn7.createStatement();
2020-04-19 22:04:52 jdbc[9]: 
/**/stat29.execute("SELECT n.nspname, c.relname, a.attname, tp.typname FROM pg_attribute a JOIN pg_class c on a.attrelid = c.oid JOIN pg_namespace n on c.relnamespace = n.oid JOIN pg_type tp on tp.typelem = a.atttypid WHERE a.attnum > 0 ORDER BY nspname, relname");
2020-04-19 22:04:52 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "TP.TYPELEM" not found; SQL statement:
SELECT n.nspname, c.relname, a.attname, tp.typname FROM pg_attribute a JOIN pg_class c on a.attrelid = c.oid JOIN pg_namespace n on c.relnamespace = n.oid JOIN pg_type tp on tp.typelem = a.atttypid WHERE a.attnum > 0 ORDER BY nspname, relname [42122-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:459)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:200)
	at org.h2.message.DbException.get(DbException.java:176)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:163)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:145)
	at org.h2.expression.condition.Comparison.optimize(Comparison.java:185)
	at org.h2.expression.condition.ConditionAndOr.optimize(ConditionAndOr.java:139)
	at org.h2.expression.condition.ConditionAndOr.optimize(ConditionAndOr.java:140)
	at org.h2.command.query.Select.prepare(Select.java:1177)
	at org.h2.command.Parser.prepareCommand(Parser.java:867)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-19 22:04:52 jdbc[9]: 
/**/stat29.close();
2020-04-19 22:04:52 jdbc[9]: 
/**/conn7.getAutoCommit();
2020-04-19 22:04:52 jdbc[9]: 
/**/Statement stat30 = conn7.createStatement();
2020-04-19 22:04:52 jdbc[9]: 
/**/stat30.execute("SELECT r.routine_schema, r.routine_name FROM information_schema.routines r LEFT JOIN information_schema.parameters p ON r.specific_name = p.specific_name  GROUP BY p.specific_name, r.routine_schema, r.routine_name ORDER BY r.routine_schema");
2020-04-19 22:04:52 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ROUTINES" not found; SQL statement:
SELECT r.routine_schema, r.routine_name FROM information_schema.routines r LEFT JOIN information_schema.parameters p ON r.specific_name = p.specific_name  GROUP BY p.specific_name, r.routine_schema, r.routine_name ORDER BY r.routine_schema [42102-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:459)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:200)
	at org.h2.message.DbException.get(DbException.java:176)
	at org.h2.command.Parser.readTableOrView(Parser.java:8558)
	at org.h2.command.Parser.readTableFilter(Parser.java:2075)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2968)
	at org.h2.command.Parser.parseSelect(Parser.java:3095)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2958)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2793)
	at org.h2.command.Parser.parseQuery(Parser.java:2763)
	at org.h2.command.Parser.parsePrepared(Parser.java:986)
	at org.h2.command.Parser.parse(Parser.java:961)
	at org.h2.command.Parser.parse(Parser.java:933)
	at org.h2.command.Parser.prepareCommand(Parser.java:861)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-19 22:04:52 jdbc[9]: 
/**/stat30.close();
2020-04-19 22:04:52 jdbc[9]: 
/**/conn7.getAutoCommit();
2020-04-19 22:04:58 jdbc[9]: 
/**/Statement stat31 = conn7.createStatement();
2020-04-19 22:04:58 jdbc[9]: 
/**/stat31.execute("SELECT c.oid, n.nspname AS schemaname, c.relname AS tablename, c.relacl, pg_get_userbyid(c.relowner) AS tableowner, obj_description(c.oid) AS description, c.relkind, ci.relname As cluster, c.relhasoids AS hasoids, c.relhasindex AS hasindexes, c.relhasrules AS hasrules, t.spcname AS tablespace, c.reloptions AS param, (c.reltriggers > 0) AS hastriggers, c.reltuples, ((SELECT count(*) FROM pg_inherits WHERE inhparent = c.oid) > 0) AS inhtable, i2.nspname AS inhschemaname, i2.relname AS inhtablename FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace LEFT JOIN pg_tablespace t ON t.oid = c.reltablespace LEFT JOIN (pg_inherits i INNER JOIN pg_class c2 ON i.inhparent = c2.oid LEFT JOIN pg_namespace n2 ON n2.oid = c2.relnamespace) i2 ON i2.inhrelid = c.oid LEFT JOIN pg_index ind ON(ind.indrelid = c.oid) and (ind.indisclustered = 't') LEFT JOIN pg_class ci ON ci.oid = ind.indexrelid WHERE (c.relkind = 'r'::\"char\") AND n.nspname = 'PUBLIC' ORDER BY schemaname, tablename");
2020-04-19 22:04:58 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Domain "char" not found; SQL statement:
SELECT c.oid, n.nspname AS schemaname, c.relname AS tablename, c.relacl, pg_get_userbyid(c.relowner) AS tableowner, obj_description(c.oid) AS description, c.relkind, ci.relname As cluster, c.relhasoids AS hasoids, c.relhasindex AS hasindexes, c.relhasrules AS hasrules, t.spcname AS tablespace, c.reloptions AS param, (c.reltriggers > 0) AS hastriggers, c.reltuples, ((SELECT count(*) FROM pg_inherits WHERE inhparent = c.oid) > 0) AS inhtable, i2.nspname AS inhschemaname, i2.relname AS inhtablename FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace LEFT JOIN pg_tablespace t ON t.oid = c.reltablespace LEFT JOIN (pg_inherits i INNER JOIN pg_class c2 ON i.inhparent = c2.oid LEFT JOIN pg_namespace n2 ON n2.oid = c2.relnamespace) i2 ON i2.inhrelid = c.oid LEFT JOIN pg_index ind ON(ind.indrelid = c.oid) and (ind.indisclustered = 't') LEFT JOIN pg_class ci ON ci.oid = ind.indexrelid WHERE (c.relkind = 'r'::"char") AND n.nspname = 'PUBLIC' ORDER BY schemaname, tablename [90120-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:588)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:200)
	at org.h2.message.DbException.get(DbException.java:176)
	at org.h2.schema.Schema.getDomain(Schema.java:558)
	at org.h2.command.Parser.parseColumnWithType1(Parser.java:6436)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:6396)
	at org.h2.command.Parser.readTerm(Parser.java:5029)
	at org.h2.command.Parser.readFactor(Parser.java:3564)
	at org.h2.command.Parser.readSum(Parser.java:3551)
	at org.h2.command.Parser.readConcat(Parser.java:3529)
	at org.h2.command.Parser.readComparison(Parser.java:3523)
	at org.h2.command.Parser.readCondition(Parser.java:3373)
	at org.h2.command.Parser.readExpression(Parser.java:3242)
	at org.h2.command.Parser.readTerm(Parser.java:4818)
	at org.h2.command.Parser.readFactor(Parser.java:3564)
	at org.h2.command.Parser.readSum(Parser.java:3551)
	at org.h2.command.Parser.readConcat(Parser.java:3529)
	at org.h2.command.Parser.readCondition(Parser.java:3319)
	at org.h2.command.Parser.readExpressionWithGlobalConditions(Parser.java:3229)
	at org.h2.command.Parser.parseSelect(Parser.java:3098)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2958)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2793)
	at org.h2.command.Parser.parseQuery(Parser.java:2763)
	at org.h2.command.Parser.parsePrepared(Parser.java:986)
	at org.h2.command.Parser.parse(Parser.java:961)
	at org.h2.command.Parser.parse(Parser.java:933)
	at org.h2.command.Parser.prepareCommand(Parser.java:861)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-19 22:04:58 jdbc[9]: 
/**/stat31.close();
2020-04-19 22:04:58 jdbc[9]: 
/**/conn7.getAutoCommit();
2020-04-19 22:05:13 jdbc[9]: 
/**/Statement stat32 = conn7.createStatement();
2020-04-19 22:05:13 jdbc[9]: 
/**/stat32.execute("SELECT c.oid, n.nspname AS schemaname, c.relname AS tablename, c.relacl, pg_get_userbyid(c.relowner) AS tableowner, obj_description(c.oid) AS description, c.relkind, ci.relname As cluster, c.relhasoids AS hasoids, c.relhasindex AS hasindexes, c.relhasrules AS hasrules, t.spcname AS tablespace, c.reloptions AS param, (c.reltriggers > 0) AS hastriggers, c.reltuples, ((SELECT count(*) FROM pg_inherits WHERE inhparent = c.oid) > 0) AS inhtable, i2.nspname AS inhschemaname, i2.relname AS inhtablename FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace LEFT JOIN pg_tablespace t ON t.oid = c.reltablespace LEFT JOIN (pg_inherits i INNER JOIN pg_class c2 ON i.inhparent = c2.oid LEFT JOIN pg_namespace n2 ON n2.oid = c2.relnamespace) i2 ON i2.inhrelid = c.oid LEFT JOIN pg_index ind ON(ind.indrelid = c.oid) and (ind.indisclustered = 't') LEFT JOIN pg_class ci ON ci.oid = ind.indexrelid WHERE (c.relkind = 'r'::\"char\") AND n.nspname = 'PUBLIC' ORDER BY schemaname, tablename");
2020-04-19 22:05:13 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Domain "char" not found; SQL statement:
SELECT c.oid, n.nspname AS schemaname, c.relname AS tablename, c.relacl, pg_get_userbyid(c.relowner) AS tableowner, obj_description(c.oid) AS description, c.relkind, ci.relname As cluster, c.relhasoids AS hasoids, c.relhasindex AS hasindexes, c.relhasrules AS hasrules, t.spcname AS tablespace, c.reloptions AS param, (c.reltriggers > 0) AS hastriggers, c.reltuples, ((SELECT count(*) FROM pg_inherits WHERE inhparent = c.oid) > 0) AS inhtable, i2.nspname AS inhschemaname, i2.relname AS inhtablename FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace LEFT JOIN pg_tablespace t ON t.oid = c.reltablespace LEFT JOIN (pg_inherits i INNER JOIN pg_class c2 ON i.inhparent = c2.oid LEFT JOIN pg_namespace n2 ON n2.oid = c2.relnamespace) i2 ON i2.inhrelid = c.oid LEFT JOIN pg_index ind ON(ind.indrelid = c.oid) and (ind.indisclustered = 't') LEFT JOIN pg_class ci ON ci.oid = ind.indexrelid WHERE (c.relkind = 'r'::"char") AND n.nspname = 'PUBLIC' ORDER BY schemaname, tablename [90120-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:588)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:200)
	at org.h2.message.DbException.get(DbException.java:176)
	at org.h2.schema.Schema.getDomain(Schema.java:558)
	at org.h2.command.Parser.parseColumnWithType1(Parser.java:6436)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:6396)
	at org.h2.command.Parser.readTerm(Parser.java:5029)
	at org.h2.command.Parser.readFactor(Parser.java:3564)
	at org.h2.command.Parser.readSum(Parser.java:3551)
	at org.h2.command.Parser.readConcat(Parser.java:3529)
	at org.h2.command.Parser.readComparison(Parser.java:3523)
	at org.h2.command.Parser.readCondition(Parser.java:3373)
	at org.h2.command.Parser.readExpression(Parser.java:3242)
	at org.h2.command.Parser.readTerm(Parser.java:4818)
	at org.h2.command.Parser.readFactor(Parser.java:3564)
	at org.h2.command.Parser.readSum(Parser.java:3551)
	at org.h2.command.Parser.readConcat(Parser.java:3529)
	at org.h2.command.Parser.readCondition(Parser.java:3319)
	at org.h2.command.Parser.readExpressionWithGlobalConditions(Parser.java:3229)
	at org.h2.command.Parser.parseSelect(Parser.java:3098)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2958)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2793)
	at org.h2.command.Parser.parseQuery(Parser.java:2763)
	at org.h2.command.Parser.parsePrepared(Parser.java:986)
	at org.h2.command.Parser.parse(Parser.java:961)
	at org.h2.command.Parser.parse(Parser.java:933)
	at org.h2.command.Parser.prepareCommand(Parser.java:861)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-19 22:05:13 jdbc[9]: 
/**/stat32.close();
2020-04-19 22:05:13 jdbc[9]: 
/**/conn7.getAutoCommit();
2020-04-19 22:09:14 database: connecting session #10 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 22:09:14 jdbc[10]: 
/*SQL */SET MODE PostgreSql;
2020-04-19 22:09:14 jdbc[10]: 
/*SQL */SET TRACE_LEVEL_SYSTEM_OUT 3;
2020-04-19 22:09:14 jdbc[10]: 
/*SQL */SET TRACE_LEVEL_FILE 3;
2020-04-19 22:09:14 jdbc[10]: Plan       : calculate cost for plan [SETTINGS:-7:org.h2.table.InformationSchemaTable@2abf61b7]
2020-04-19 22:09:14 jdbc[10]: Plan       :   for table filter SETTINGS:-7:org.h2.table.InformationSchemaTable@2abf61b7
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       :   best plan item cost 9,900 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       : plan cost 9,901
2020-04-19 22:09:14 jdbc[10]: 
/*SQL l:77 #:2 t:8*/SELECT NAME, `VALUE` FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?) {1: 'MODE', 2: 'TIME ZONE', 3: 'JAVA_OBJECT_SERIALIZER'};
2020-04-19 22:09:14 jdbc[10]: 
/*SQL l:77 #:3 t:10*/SELECT NAME, `VALUE` FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?) {1: 'DATABASE_TO_UPPER', 2: 'DATABASE_TO_LOWER', 3: 'CASE_INSENSITIVE_IDENTIFIERS'};
2020-04-19 22:09:14 jdbc[10]: Plan       : calculate cost for plan [SCHEMATA:-14:org.h2.table.InformationSchemaTable@32a0af9]
2020-04-19 22:09:14 jdbc[10]: Plan       :   for table filter SCHEMATA:-14:org.h2.table.InformationSchemaTable@32a0af9
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       : plan cost 10,001
2020-04-19 22:09:14 jdbc[10]: 
/*SQL #:3*/SELECT SCHEMA_NAME TABLE_SCHEM, CATALOG_NAME TABLE_CATALOG,  IS_DEFAULT FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME;
2020-04-19 22:09:14 jdbc[10]: Plan       : calculate cost for plan [SCHEMATA:-14:org.h2.table.InformationSchemaTable@32a0af9]
2020-04-19 22:09:14 jdbc[10]: Plan       :   for table filter SCHEMATA:-14:org.h2.table.InformationSchemaTable@32a0af9
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       : plan cost 10,001
2020-04-19 22:09:14 jdbc[10]: 
/*SQL #:3*/SELECT SCHEMA_NAME TABLE_SCHEM, CATALOG_NAME TABLE_CATALOG,  IS_DEFAULT FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME;
2020-04-19 22:09:14 jdbc[10]: Plan       : calculate cost for plan [_0]
2020-04-19 22:09:14 jdbc[10]: Plan       :   for table filter _0
2020-04-19 22:09:14 jdbc[10]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 22:09:14 jdbc[10]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       : plan cost 4,023
2020-04-19 22:09:14 jdbc[10]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 22:09:14 jdbc[10]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       : plan cost 3,982.78
2020-04-19 22:09:14 jdbc[10]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 22:09:14 jdbc[10]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       : plan cost 4,023
2020-04-19 22:09:14 jdbc[10]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 22:09:14 jdbc[10]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       : plan cost 3,982.78
2020-04-19 22:09:14 jdbc[10]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 22:09:14 jdbc[10]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       : plan cost 4,023
2020-04-19 22:09:14 jdbc[10]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 22:09:14 jdbc[10]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       : plan cost 3,982.78
2020-04-19 22:09:14 jdbc[10]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 22:09:14 jdbc[10]: Plan       : plan cost 8,006.78
2020-04-19 22:09:14 jdbc[10]: Plan       : calculate cost for plan [_1]
2020-04-19 22:09:14 jdbc[10]: Plan       :   for table filter _1
2020-04-19 22:09:14 jdbc[10]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 22:09:14 jdbc[10]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       : plan cost 4,023
2020-04-19 22:09:14 jdbc[10]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 22:09:14 jdbc[10]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       : plan cost 3,982.78
2020-04-19 22:09:14 jdbc[10]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 22:09:14 jdbc[10]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       : plan cost 4,023
2020-04-19 22:09:14 jdbc[10]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 22:09:14 jdbc[10]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       : plan cost 3,982.78
2020-04-19 22:09:14 jdbc[10]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 22:09:14 jdbc[10]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       : plan cost 4,023
2020-04-19 22:09:14 jdbc[10]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 22:09:14 jdbc[10]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:14 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 22:09:14 jdbc[10]: Plan       : plan cost 3,982.78
2020-04-19 22:09:14 jdbc[10]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 22:09:14 jdbc[10]: Plan       : plan cost 8,006.78
2020-04-19 22:09:14 jdbc[10]: 
/*SQL l:1007 #:35 t:18*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'INFORMATION_SCHEMA', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [COLUMNS:-2:org.h2.table.InformationSchemaTable@7720a0f9]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter COLUMNS:-2:org.h2.table.InformationSchemaTable@7720a0f9
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 28 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 27.44 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 28.44
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CATALOGS'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:4 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CHECK_CONSTRAINTS'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLLATIONS'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:33 t:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLUMNS'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:8 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'COLUMN_PRIVILEGES'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:7 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CONSTANTS'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:7 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CONSTRAINT_COLUMN_USAGE'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:14 t:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'CROSS_REFERENCES'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:16 t:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'DOMAINS'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:11 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'DOMAIN_CONSTRAINTS'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:12 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'FUNCTION_ALIASES'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:17 t:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'FUNCTION_COLUMNS'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'HELP'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:21 t:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'INDEXES'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'IN_DOUBT'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:12 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'KEY_COLUMN_USAGE'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:4 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'LOCKS'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:12 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'QUERY_STATISTICS'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:9 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'REFERENTIAL_CONSTRAINTS'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:7 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'RIGHTS'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'ROLES'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:8 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SCHEMATA'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:17 t:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SEQUENCES'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:12 t:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SESSIONS'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SESSION_STATE'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SETTINGS'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:9 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'SYNONYMS'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:12 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLES'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:12 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_CONSTRAINTS'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:7 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_PRIVILEGES'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TABLE_TYPES'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:14 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TRIGGERS'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:14 t:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'TYPE_INFO'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'USERS'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:9 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'INFORMATION_SCHEMA', 2: 'VIEWS'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 10,001
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 9,800 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 9,801
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:438 #:1 t:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'INFORMATION_SCHEMA', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 10,001
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 9,600 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 9,601
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:596 #:3 t:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'INFORMATION_SCHEMA', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [_2]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter _2
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 4,023
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 3,982.78
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 4,023
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 3,982.78
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 4,023
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 3,982.78
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 8,006.78
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:1007 #:18 t:13*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'PG_CATALOG', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_AM'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:5 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ATTRDEF'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:10 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ATTRIBUTE'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:12 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_AUTHID'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:13 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_CLASS'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:10 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_DATABASE'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:4*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_DESCRIPTION'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:2 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_GROUP'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:9 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_INDEX'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_INHERITS'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_NAMESPACE'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_PROC'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_ROLES'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:3*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_SETTINGS'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:5*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TABLESPACE'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:9 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TRIGGER'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:9 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_TYPE'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:4 t:1*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PG_CATALOG', 2: 'PG_USER'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 9,800 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 9,801
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:438 #:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 9,600 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 9,601
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:596 #:3 t:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'PG_CATALOG', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [_3]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter _3
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 4,023
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 3,982.78
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 4,023
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 3,982.78
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter SYNONYMS:-29:org.h2.table.InformationSchemaTable@2388c548
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 4,022 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 4,023
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 4,022 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 3,981.78 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 3,982.78
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 8,005.78 index (SELECT
    SYNONYM_CATALOG AS TABLE_CAT,
    SYNONYM_SCHEMA AS TABLE_SCHEM,
    SYNONYM_NAME AS TABLE_NAME,
    TYPE_NAME AS TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME AS TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    NULL AS SQL
FROM INFORMATION_SCHEMA.SYNONYMS
    /* meta */
WHERE (SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (SYNONYM_NAME LIKE ?3 ESCAPE ?4)
    AND (SYNONYM_CATALOG LIKE ?1 ESCAPE ?4))
UNION
(SELECT
    TABLE_CATALOG AS TABLE_CAT,
    TABLE_SCHEMA AS TABLE_SCHEM,
    TABLE_NAME,
    TABLE_TYPE,
    REMARKS,
    TYPE_NAME AS TYPE_CAT,
    TYPE_NAME AS TYPE_SCHEM,
    TYPE_NAME,
    TYPE_NAME AS SELF_REFERENCING_COL_NAME,
    TYPE_NAME AS REF_GENERATION,
    SQL
FROM INFORMATION_SCHEMA.TABLES
    /* meta */
WHERE (TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11))
    AND (TABLE_CATALOG LIKE ?1 ESCAPE ?4)
    AND (TABLE_SCHEMA LIKE ?2 ESCAPE ?4)
    AND (TABLE_NAME LIKE ?3 ESCAPE ?4))
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 8,006.78
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:1007 #:1 t:5*/SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_CAT, TYPE_SCHEM, TYPE_NAME, SELF_REFERENCING_COL_NAME, REF_GENERATION, SQL FROM (SELECT SYNONYM_CATALOG TABLE_CAT, SYNONYM_SCHEMA TABLE_SCHEM, SYNONYM_NAME as TABLE_NAME, TYPE_NAME AS TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME AS TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, NULL AS SQL FROM INFORMATION_SCHEMA.SYNONYMS WHERE SYNONYM_CATALOG LIKE ?1 ESCAPE ?4 AND SYNONYM_SCHEMA LIKE ?2 ESCAPE ?4 AND SYNONYM_NAME LIKE ?3 ESCAPE ?4 UNION SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5, ?6, ?7, ?8, ?9, ?10, ?11)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'PUBLIC', 3: '%', 4: '\\', 5: 'TABLE', 6: 'SYSTEM TABLE', 7: 'VIEW', 8: 'SYSTEM VIEW', 9: 'TABLE LINK', 10: 'SYNONYM', 11: 'EXTERNAL'};
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:123 #:2*/SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? {1: 'PUBLIC', 2: 'TEST'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter FUNCTION_ALIASES:-13:org.h2.table.InformationSchemaTable@3f37df88
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 9,900 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 9,901
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:438 #:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_COUNT NUM_INPUT_PARAMS, ZERO() NUM_OUTPUT_PARAMS, ZERO() NUM_RESULT_SETS, REMARKS, RETURNS_RESULT PROCEDURE_TYPE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_ALIASES WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, NUM_INPUT_PARAMS {1: '%', 2: '\\', 3: 'PUBLIC', 4: '\\', 5: '%', 6: '\\'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter FUNCTION_COLUMNS:-21:org.h2.table.InformationSchemaTable@487a8b25
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 9,700 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 9,701
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:596 #:3 t:1*/SELECT ALIAS_CATALOG PROCEDURE_CAT, ALIAS_SCHEMA PROCEDURE_SCHEM, ALIAS_NAME PROCEDURE_NAME, COLUMN_NAME, COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, PRECISION LENGTH, SCALE, RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, ZERO() SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, ZERO() CHAR_OCTET_LENGTH, POS ORDINAL_POSITION, ? IS_NULLABLE, ALIAS_NAME SPECIFIC_NAME FROM INFORMATION_SCHEMA.FUNCTION_COLUMNS WHERE ALIAS_CATALOG LIKE ? ESCAPE ? AND ALIAS_SCHEMA LIKE ? ESCAPE ? AND ALIAS_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, ORDINAL_POSITION {1: 'YES', 2: '%', 3: '\\', 4: 'PUBLIC', 5: '\\', 6: 'SHOBJ_DESCRIPTION', 7: '\\', 8: '%', 9: '\\'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 328 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 324.72 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 325.72
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 328 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 321.44 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 322.44
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:433 #:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PUBLIC', 4: '\\', 5: 'TEST'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 328 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 319.16
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_AM'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 328 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 319.16
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ATTRDEF'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 328 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 319.16
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ATTRIBUTE'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 328 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 319.16
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_AUTHID'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 328 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 319.16
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_CLASS'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 328 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 319.16
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_DATABASE'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 328 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 319.16
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_DESCRIPTION'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 328 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 319.16
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_GROUP'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 328 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 319.16
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_INDEX'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 328 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 319.16
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_INHERITS'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 328 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 319.16
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_NAMESPACE'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 328 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 319.16
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_PROC'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 328 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 319.16
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_ROLES'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 328 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 319.16
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_SETTINGS'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 328 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 319.16
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TABLESPACE'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 328 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 319.16
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TRIGGER'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 328 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 319.16
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_TYPE'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter INDEXES:-3:org.h2.table.InformationSchemaTable@20a2c79a
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 328 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 318.16 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 319.16
2020-04-19 22:09:15 jdbc[10]: 
/*SQL l:433*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION {1: '%', 2: '\\', 3: 'PG_CATALOG', 4: '\\', 5: 'PG_USER'};
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [SEQUENCES:-9:org.h2.table.InformationSchemaTable@3c9d5308]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter SEQUENCES:-9:org.h2.table.InformationSchemaTable@3c9d5308
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 10,001
2020-04-19 22:09:15 jdbc[10]: 
/*SQL */SELECT * FROM INFORMATION_SCHEMA.SEQUENCES ORDER BY SEQUENCE_NAME;
2020-04-19 22:09:15 jdbc[10]: Plan       : calculate cost for plan [USERS:-10:org.h2.table.InformationSchemaTable@10f09af]
2020-04-19 22:09:15 jdbc[10]: Plan       :   for table filter USERS:-10:org.h2.table.InformationSchemaTable@10f09af
2020-04-19 22:09:15 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 22:09:15 jdbc[10]: Plan       : plan cost 10,001
2020-04-19 22:09:15 jdbc[10]: 
/*SQL #:1*/SELECT * FROM INFORMATION_SCHEMA.USERS ORDER BY NAME;
2020-04-19 22:09:44 jdbc[10]: Plan       : calculate cost for plan [PG_CLASS:-1004:org.h2.mode.PgCatalogTable@248c1007]
2020-04-19 22:09:44 jdbc[10]: Plan       :   for table filter PG_CLASS:-1004:org.h2.mode.PgCatalogTable@248c1007
2020-04-19 22:09:44 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:44 jdbc[10]: Plan       :   best plan item cost 10,000 index meta
2020-04-19 22:09:44 jdbc[10]: Plan       : plan cost 10,001
2020-04-19 22:09:44 jdbc[10]: 
/*SQL #:55 t:10*/select * from PG_CATALOG.PG_CLASS;
2020-04-19 22:09:44 jdbc[10]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 22:09:44 jdbc[10]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 22:09:44 jdbc[10]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 22:09:44 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:44 jdbc[10]: Table      :     potential plan item cost 4,322 index meta
2020-04-19 22:09:44 jdbc[10]: Plan       :   best plan item cost 4,278.78 index meta
2020-04-19 22:09:44 jdbc[10]: Plan       : plan cost 4,279.78
2020-04-19 22:09:44 jdbc[10]: Plan       : calculate cost for plan [TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8]
2020-04-19 22:09:44 jdbc[10]: Plan       :   for table filter TABLES:-1:org.h2.table.InformationSchemaTable@76611dc8
2020-04-19 22:09:44 jdbc[10]: Table      :     potential plan item cost 10,000 index meta
2020-04-19 22:09:44 jdbc[10]: Table      :     potential plan item cost 1,324 index meta
2020-04-19 22:09:44 jdbc[10]: Plan       :   best plan item cost 1,257.8 index meta
2020-04-19 22:09:44 jdbc[10]: Plan       : plan cost 1,258.8
2020-04-19 22:09:44 jdbc[10]: 
/*SQL l:414 t:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ?1 ESCAPE ?4 AND TABLE_SCHEMA LIKE ?2 ESCAPE ?4 AND TABLE_NAME LIKE ?3 ESCAPE ?4 AND TABLE_TYPE IN(?5) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME {1: '%', 2: 'PG_CATALOG', 3: 'PG_CLASS', 4: '\\', 5: 'TABLE'};
2020-04-19 22:11:24 jdbc[9]: 
/**/Statement stat36 = conn7.createStatement();
2020-04-19 22:11:24 jdbc[9]: 
/**/stat36.execute("SELECT c.oid, n.nspname AS schemaname, c.relname AS tablename, c.relacl, pg_get_userbyid(c.relowner) AS tableowner, obj_description(c.oid) AS description, c.relkind, ci.relname As cluster, c.relhasoids AS hasoids, c.relhasindex AS hasindexes, c.relhasrules AS hasrules, t.spcname AS tablespace, c.reloptions AS param, (c.reltriggers > 0) AS hastriggers, c.reltuples, ((SELECT count(*) FROM pg_inherits WHERE inhparent = c.oid) > 0) AS inhtable, i2.nspname AS inhschemaname, i2.relname AS inhtablename FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace LEFT JOIN pg_tablespace t ON t.oid = c.reltablespace LEFT JOIN (pg_inherits i INNER JOIN pg_class c2 ON i.inhparent = c2.oid LEFT JOIN pg_namespace n2 ON n2.oid = c2.relnamespace) i2 ON i2.inhrelid = c.oid LEFT JOIN pg_index ind ON(ind.indrelid = c.oid) and (ind.indisclustered = 't') LEFT JOIN pg_class ci ON ci.oid = ind.indexrelid WHERE (c.relkind = 'r'::\"char\") AND n.nspname = 'PUBLIC' ORDER BY schemaname, tablename");
2020-04-19 22:15:25 jdbc[9]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Domain "char" not found; SQL statement:
SELECT c.oid, n.nspname AS schemaname, c.relname AS tablename, c.relacl, pg_get_userbyid(c.relowner) AS tableowner, obj_description(c.oid) AS description, c.relkind, ci.relname As cluster, c.relhasoids AS hasoids, c.relhasindex AS hasindexes, c.relhasrules AS hasrules, t.spcname AS tablespace, c.reloptions AS param, (c.reltriggers > 0) AS hastriggers, c.reltuples, ((SELECT count(*) FROM pg_inherits WHERE inhparent = c.oid) > 0) AS inhtable, i2.nspname AS inhschemaname, i2.relname AS inhtablename FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace LEFT JOIN pg_tablespace t ON t.oid = c.reltablespace LEFT JOIN (pg_inherits i INNER JOIN pg_class c2 ON i.inhparent = c2.oid LEFT JOIN pg_namespace n2 ON n2.oid = c2.relnamespace) i2 ON i2.inhrelid = c.oid LEFT JOIN pg_index ind ON(ind.indrelid = c.oid) and (ind.indisclustered = 't') LEFT JOIN pg_class ci ON ci.oid = ind.indexrelid WHERE (c.relkind = 'r'::"char") AND n.nspname = 'PUBLIC' ORDER BY schemaname, tablename [90120-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:588)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:200)
	at org.h2.message.DbException.get(DbException.java:176)
	at org.h2.schema.Schema.getDomain(Schema.java:558)
	at org.h2.command.Parser.parseColumnWithType1(Parser.java:6436)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:6396)
	at org.h2.command.Parser.readTerm(Parser.java:5029)
	at org.h2.command.Parser.readFactor(Parser.java:3564)
	at org.h2.command.Parser.readSum(Parser.java:3551)
	at org.h2.command.Parser.readConcat(Parser.java:3529)
	at org.h2.command.Parser.readComparison(Parser.java:3523)
	at org.h2.command.Parser.readCondition(Parser.java:3373)
	at org.h2.command.Parser.readExpression(Parser.java:3242)
	at org.h2.command.Parser.readTerm(Parser.java:4818)
	at org.h2.command.Parser.readFactor(Parser.java:3564)
	at org.h2.command.Parser.readSum(Parser.java:3551)
	at org.h2.command.Parser.readConcat(Parser.java:3529)
	at org.h2.command.Parser.readCondition(Parser.java:3319)
	at org.h2.command.Parser.readExpressionWithGlobalConditions(Parser.java:3229)
	at org.h2.command.Parser.parseSelect(Parser.java:3098)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2958)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2793)
	at org.h2.command.Parser.parseQuery(Parser.java:2763)
	at org.h2.command.Parser.parsePrepared(Parser.java:986)
	at org.h2.command.Parser.parse(Parser.java:961)
	at org.h2.command.Parser.parse(Parser.java:933)
	at org.h2.command.Parser.prepareCommand(Parser.java:861)
	at org.h2.engine.Session.prepareLocal(Session.java:633)
	at org.h2.engine.Session.prepareCommand(Session.java:571)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1190)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:436)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-19 22:15:25 jdbc[9]: 
/**/stat36.close();
2020-04-19 22:15:25 jdbc[9]: 
/**/conn7.getAutoCommit();
2020-04-19 22:23:32 database: connecting session #11 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 22:23:32 jdbc[11]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 22:23:32 jdbc[11]: 
/**/Connection conn9 = DriverManager.getConnection("jdbc:h2:h2_db2", "SA", "");
2020-04-19 22:23:32 lock: 3 shared read lock unlock SYS 
2020-04-19 22:23:32 database: disconnecting session #3
2020-04-19 22:23:32 database: disconnected session #3
2020-04-19 22:23:32 jdbc[11]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:200)
	at org.h2.message.DbException.get(DbException.java:176)
	at org.h2.message.DbException.get(DbException.java:165)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:201)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:141)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:242)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:634)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	... 8 more
2020-04-19 22:23:32 jdbc[11]: 
/**/Statement stat37 = conn9.createStatement();
2020-04-19 22:23:32 jdbc[11]: 
/**/Statement stat38 = conn9.createStatement();
2020-04-19 22:23:32 jdbc[11]: 
/**/stat38.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 22:23:32 jdbc[11]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 22:23:32 jdbc[11]: 
/**/stat38.close();
2020-04-19 22:23:32 jdbc[11]: 
/**/conn9.getAutoCommit();
2020-04-19 22:23:32 jdbc[11]: 
/**/PreparedStatement prep107 = conn9.prepareStatement("SELECT * from test");
2020-04-19 22:23:32 jdbc[11]: Plan       : calculate cost for plan [PUBLIC.TEST]
2020-04-19 22:23:32 jdbc[11]: Plan       :   for table filter PUBLIC.TEST
2020-04-19 22:23:32 jdbc[11]: Table      :     potential plan item cost 10,210 index PUBLIC.TEST.tableScan
2020-04-19 22:23:32 jdbc[11]: Table      :     potential plan item cost 10,220 index PUBLIC.PRIMARY_KEY_2
2020-04-19 22:23:32 jdbc[11]: Plan       :   best plan item cost 10,210 index PUBLIC.TEST.tableScan
2020-04-19 22:23:32 jdbc[11]: Plan       : plan cost 10,211
2020-04-19 22:23:32 jdbc[11]: 
/**/ParameterMetaData pMeta3 = prep107.getParameterMetaData();
2020-04-19 22:23:32 jdbc[11]: 
/**/pMeta3.getParameterCount();
2020-04-19 22:23:32 jdbc[11]: 
/**/prep107.getMetaData();
2020-04-19 22:23:32 jdbc[11]: 
/**/ResultSetMetaData rsMeta733 = prep107.getMetaData();
2020-04-19 22:23:32 jdbc[11]: 
/**/conn9.getCatalog();
2020-04-19 22:23:32 jdbc[11]: 
/*SQL #:1*/CALL DATABASE();
2020-04-19 22:23:32 jdbc[11]: 
/**/rsMeta733.getColumnCount();
2020-04-19 22:23:32 jdbc[11]: 
/**/rsMeta733.getColumnName(1);
2020-04-19 22:23:32 jdbc[11]: 
/**/rsMeta733.getColumnType(1);
2020-04-19 22:23:32 jdbc[11]: 
/**/rsMeta733.getColumnDisplaySize(1);
2020-04-19 22:23:32 jdbc[11]: 
/**/rsMeta733.getColumnName(2);
2020-04-19 22:23:32 jdbc[11]: 
/**/rsMeta733.getColumnType(2);
2020-04-19 22:23:32 jdbc[11]: 
/**/rsMeta733.getColumnDisplaySize(2);
2020-04-19 22:23:32 jdbc[11]: 
/**/prep107.setMaxRows(0);
2020-04-19 22:23:32 jdbc[11]: 
/**/prep107.execute();
2020-04-19 22:24:26 jdbc[11]: 
/*SQL #:1 t:53956*/SELECT * from test;
2020-04-19 22:24:26 command: slow query: 53,957 ms
2020-04-19 22:24:26 jdbc[11]: 
/**/ResultSet rs295 = prep107.getResultSet();
2020-04-19 22:24:26 jdbc[11]: 
/**/rs295.next();
2020-04-19 22:24:26 jdbc[11]: 
/**/ResultSetMetaData rsMeta734 = rs295.getMetaData();
2020-04-19 22:24:26 jdbc[11]: 
/**/conn9.getCatalog();
2020-04-19 22:24:26 jdbc[11]: 
/**/rsMeta734.getColumnCount();
2020-04-19 22:24:26 jdbc[11]: 
/**/rsMeta734.getColumnType(1);
2020-04-19 22:24:26 jdbc[11]: 
/**/rsMeta734.getColumnType(2);
2020-04-19 22:24:26 jdbc[11]: 
/**/conn9.close();
2020-04-19 22:24:26 lock: 11 shared read lock unlock SYS 
2020-04-19 22:24:26 database: disconnecting session #11
2020-04-19 22:24:26 database: disconnected session #11
2020-04-19 22:50:52 database: connecting session #12 to D:/JAVA_WorkSpace/h2database/h2_db2
2020-04-19 22:50:52 jdbc[12]: 
/*SQL */SET MODE PostgreSQL;
2020-04-19 22:50:52 jdbc[12]: 
/**/Connection conn10 = DriverManager.getConnection("jdbc:h2:h2_db2", "SA", "");
2020-04-19 22:51:07 jdbc[12]: 
/**/Statement stat39 = conn10.createStatement();
2020-04-19 22:51:10 jdbc[12]: 
/**/Statement stat40 = conn10.createStatement();
2020-04-19 22:51:11 jdbc[12]: 
/**/stat40.execute("set search_path = PUBLIC, pg_catalog");
2020-04-19 22:51:11 jdbc[12]: 
/*SQL */set search_path = PUBLIC, pg_catalog;
2020-04-19 22:51:14 jdbc[12]: 
/**/stat40.close();
2020-04-19 22:53:37 jdbc[12]: 
/**/conn10.getAutoCommit();
2020-04-19 23:03:09 jdbc[12]: 
/**/PreparedStatement prep108 = conn10.prepareStatement("insert into  test values ($1,$2)");
2020-04-19 23:03:09 jdbc[12]: 
/**/ParameterMetaData pMeta4 = prep108.getParameterMetaData();
2020-04-19 23:03:09 jdbc[12]: 
/**/pMeta4.getParameterCount();
2020-04-19 23:06:07 jdbc[12]: 
/**/ParameterMetaData pMeta5 = prep108.getParameterMetaData();
2020-04-19 23:06:16 jdbc[12]: 
/**/pMeta5.getParameterCount();
2020-04-19 23:06:32 jdbc[12]: 
/**/prep108.getMetaData();
2020-04-19 23:07:03 jdbc[12]: 
/**/conn10.getAutoCommit();
2020-04-19 23:11:48 jdbc[12]: 
/**/prep108.setInt(1, 1);
2020-04-19 23:11:49 jdbc[12]: 
/**/prep108.setString(2, "jack1");
2020-04-19 23:12:44 jdbc[12]: 
/**/prep108.getMetaData();
2020-04-19 23:13:23 jdbc[12]: 
/**/prep108.setMaxRows(0);
2020-04-19 23:14:42 jdbc[12]: 
/**/prep108.execute();
2020-04-19 23:14:47 lock: 12 shared read lock requesting for TEST 
2020-04-19 23:14:47 lock: 12 shared read lock ok TEST 
2020-04-19 23:14:47 lock: 12 shared read lock unlock TEST 
2020-04-19 23:14:50 jdbc[12]: exception
org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: Unique index or primary key violation: "PRIMARY KEY ON PUBLIC.TEST(ID) ( /* key:1 */ 1, 'jack')"; SQL statement:
insert into  test values ($1,$2) [23505-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:465)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:435)
	at org.h2.message.DbException.get(DbException.java:200)
	at org.h2.message.DbException.get(DbException.java:176)
	at org.h2.mvstore.db.MVPrimaryIndex.add(MVPrimaryIndex.java:121)
	at org.h2.mvstore.db.MVTable.addRow(MVTable.java:521)
	at org.h2.command.dml.Insert.insertRows(Insert.java:196)
	at org.h2.command.dml.Insert.update(Insert.java:154)
	at org.h2.command.CommandContainer.update(CommandContainer.java:175)
	at org.h2.command.Command.executeUpdate(Command.java:249)
	at org.h2.jdbc.JdbcPreparedStatement.execute(JdbcPreparedStatement.java:237)
	at org.h2.server.pg.PgServerThread.process(PgServerThread.java:391)
	at org.h2.server.pg.PgServerThread.run(PgServerThread.java:101)
	at java.lang.Thread.run(Thread.java:745)
2020-04-19 23:15:01 jdbc[12]: 
/**/prep108.setInt(1, 2);
2020-04-19 23:15:01 jdbc[12]: 
/**/prep108.setString(2, "jack2");
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.getMetaData();
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setMaxRows(0);
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.execute();
2020-04-19 23:15:04 lock: 12 shared read lock requesting for TEST 
2020-04-19 23:15:04 lock: 12 shared read lock ok TEST 
2020-04-19 23:15:04 jdbc[12]: 
/*SQL l:32 #:1*/insert into  test values ($1,$2) {1: 2, 2: 'jack2'};
2020-04-19 23:15:04 lock: 12 shared read lock unlock TEST 
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.getUpdateCount();
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setInt(1, 3);
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setString(2, "jack3");
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.getMetaData();
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setMaxRows(0);
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.execute();
2020-04-19 23:15:04 lock: 12 shared read lock requesting for TEST 
2020-04-19 23:15:04 lock: 12 shared read lock ok TEST 
2020-04-19 23:15:04 jdbc[12]: 
/*SQL l:32 #:1*/insert into  test values ($1,$2) {1: 3, 2: 'jack3'};
2020-04-19 23:15:04 lock: 12 shared read lock unlock TEST 
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.getUpdateCount();
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setInt(1, 4);
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setString(2, "jack4");
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.getMetaData();
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setMaxRows(0);
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.execute();
2020-04-19 23:15:04 lock: 12 shared read lock requesting for TEST 
2020-04-19 23:15:04 lock: 12 shared read lock ok TEST 
2020-04-19 23:15:04 jdbc[12]: 
/*SQL l:32 #:1*/insert into  test values ($1,$2) {1: 4, 2: 'jack4'};
2020-04-19 23:15:04 lock: 12 shared read lock unlock TEST 
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.getUpdateCount();
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setInt(1, 5);
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setString(2, "jack5");
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.getMetaData();
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setMaxRows(0);
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.execute();
2020-04-19 23:15:04 lock: 12 shared read lock requesting for TEST 
2020-04-19 23:15:04 lock: 12 shared read lock ok TEST 
2020-04-19 23:15:04 jdbc[12]: 
/*SQL l:32 #:1*/insert into  test values ($1,$2) {1: 5, 2: 'jack5'};
2020-04-19 23:15:04 lock: 12 shared read lock unlock TEST 
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.getUpdateCount();
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setInt(1, 6);
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setString(2, "jack6");
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.getMetaData();
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setMaxRows(0);
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.execute();
2020-04-19 23:15:04 lock: 12 shared read lock requesting for TEST 
2020-04-19 23:15:04 lock: 12 shared read lock ok TEST 
2020-04-19 23:15:04 jdbc[12]: 
/*SQL l:32 #:1*/insert into  test values ($1,$2) {1: 6, 2: 'jack6'};
2020-04-19 23:15:04 lock: 12 shared read lock unlock TEST 
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.getUpdateCount();
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setInt(1, 7);
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setString(2, "jack7");
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.getMetaData();
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setMaxRows(0);
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.execute();
2020-04-19 23:15:04 lock: 12 shared read lock requesting for TEST 
2020-04-19 23:15:04 lock: 12 shared read lock ok TEST 
2020-04-19 23:15:04 jdbc[12]: 
/*SQL l:32 #:1*/insert into  test values ($1,$2) {1: 7, 2: 'jack7'};
2020-04-19 23:15:04 lock: 12 shared read lock unlock TEST 
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.getUpdateCount();
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setInt(1, 8);
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setString(2, "jack8");
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.getMetaData();
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setMaxRows(0);
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.execute();
2020-04-19 23:15:04 lock: 12 shared read lock requesting for TEST 
2020-04-19 23:15:04 lock: 12 shared read lock ok TEST 
2020-04-19 23:15:04 jdbc[12]: 
/*SQL l:32 #:1*/insert into  test values ($1,$2) {1: 8, 2: 'jack8'};
2020-04-19 23:15:04 lock: 12 shared read lock unlock TEST 
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.getUpdateCount();
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setInt(1, 9);
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setString(2, "jack9");
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.getMetaData();
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setMaxRows(0);
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.execute();
2020-04-19 23:15:04 lock: 12 shared read lock requesting for TEST 
2020-04-19 23:15:04 lock: 12 shared read lock ok TEST 
2020-04-19 23:15:04 jdbc[12]: 
/*SQL l:32 #:1*/insert into  test values ($1,$2) {1: 9, 2: 'jack9'};
2020-04-19 23:15:04 lock: 12 shared read lock unlock TEST 
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.getUpdateCount();
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setInt(1, 10);
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setString(2, "jack10");
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.getMetaData();
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.setMaxRows(0);
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.execute();
2020-04-19 23:15:04 lock: 12 shared read lock requesting for TEST 
2020-04-19 23:15:04 lock: 12 shared read lock ok TEST 
2020-04-19 23:15:04 jdbc[12]: 
/*SQL l:32 #:1*/insert into  test values ($1,$2) {1: 10, 2: 'jack10'};
2020-04-19 23:15:04 lock: 12 shared read lock unlock TEST 
2020-04-19 23:15:04 jdbc[12]: 
/**/prep108.getUpdateCount();
2020-04-19 23:15:04 jdbc[12]: 
/**/conn10.getAutoCommit();
2020-04-19 23:15:11 jdbc[12]: 
/**/conn10.close();
2020-04-19 23:15:11 lock: 12 shared read lock unlock SYS 
2020-04-19 23:15:11 database: disconnecting session #12
2020-04-19 23:15:11 database: disconnected session #12
